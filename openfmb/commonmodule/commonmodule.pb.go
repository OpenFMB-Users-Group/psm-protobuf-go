// Code generated by protoc-gen-go. DO NOT EDIT.
// source: commonmodule/commonmodule.proto

package commonmodule

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	wrappers "github.com/golang/protobuf/ptypes/wrappers"
	_ "gitlab.com/openfmb/psm/ops/protobuf/go-openfmb-ops-protobuf/openfmb"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// The units defined for usage in the CIM.
type UnitSymbolKind int32

const (
	// Dimension less quantity, e.g. count, per unit, etc.
	UnitSymbolKind_UnitSymbolKind_none UnitSymbolKind = 0
	// Length in meter.
	UnitSymbolKind_UnitSymbolKind_meter UnitSymbolKind = 2
	// Mass in gram.
	UnitSymbolKind_UnitSymbolKind_gram UnitSymbolKind = 3
	// Current in ampere.
	UnitSymbolKind_UnitSymbolKind_Amp UnitSymbolKind = 5
	// Plane angle in degrees.
	UnitSymbolKind_UnitSymbolKind_deg UnitSymbolKind = 9
	// Plane angle in radians.
	UnitSymbolKind_UnitSymbolKind_rad UnitSymbolKind = 10
	// Relative temperature in degrees Celsius. In the SI unit system the symbol is ºC. Electric charge
	// is measured in coulomb that has the unit symbol C. To distinguish degree Celsius form coulomb the
	// symbol used in the UML is degC. Reason for not using ºC is the special character º is difficult to
	// manage in software.
	UnitSymbolKind_UnitSymbolKind_degC UnitSymbolKind = 23
	// Capacitance in farad.
	UnitSymbolKind_UnitSymbolKind_Farad UnitSymbolKind = 25
	// Time in seconds.
	UnitSymbolKind_UnitSymbolKind_sec UnitSymbolKind = 27
	// Inductance in Henry.
	UnitSymbolKind_UnitSymbolKind_Henry UnitSymbolKind = 28
	// Voltage in volt.
	UnitSymbolKind_UnitSymbolKind_V UnitSymbolKind = 29
	// Resistance in ohm.
	UnitSymbolKind_UnitSymbolKind_ohm UnitSymbolKind = 30
	// Energy in joule.
	UnitSymbolKind_UnitSymbolKind_Joule UnitSymbolKind = 31
	// Force in newton.
	UnitSymbolKind_UnitSymbolKind_Newton UnitSymbolKind = 32
	// Frequency in hertz.
	UnitSymbolKind_UnitSymbolKind_Hz UnitSymbolKind = 33
	// Active power in watt.
	UnitSymbolKind_UnitSymbolKind_W UnitSymbolKind = 38
	// Pressure in pascal (n/m2).
	UnitSymbolKind_UnitSymbolKind_Pa UnitSymbolKind = 39
	// Area in square meters.
	UnitSymbolKind_UnitSymbolKind_m2 UnitSymbolKind = 41
	// Conductance in siemens.
	UnitSymbolKind_UnitSymbolKind_Siemens UnitSymbolKind = 53
	// Apparent power in volt ampere.
	UnitSymbolKind_UnitSymbolKind_VA UnitSymbolKind = 61
	// Reactive power in volt ampere reactive.
	UnitSymbolKind_UnitSymbolKind_VAr UnitSymbolKind = 63
	// Power factor
	UnitSymbolKind_UnitSymbolKind_wPerVA UnitSymbolKind = 65
	// Apparent energy in volt ampere hours.
	UnitSymbolKind_UnitSymbolKind_VAh UnitSymbolKind = 71
	// Real energy in what hours.
	UnitSymbolKind_UnitSymbolKind_Wh UnitSymbolKind = 72
	// Reactive energy in volt ampere reactive hours.
	UnitSymbolKind_UnitSymbolKind_VArh UnitSymbolKind = 73
	// MISSING DOCUMENTATION!!!
	UnitSymbolKind_UnitSymbolKind_hzPerS UnitSymbolKind = 75
	// MISSING DOCUMENTATION!!!
	UnitSymbolKind_UnitSymbolKind_wPerS UnitSymbolKind = 81
	// Other enum not listed
	UnitSymbolKind_UnitSymbolKind_other UnitSymbolKind = 100
	// Amp hour
	UnitSymbolKind_UnitSymbolKind_Ah UnitSymbolKind = 106
	// Time in minutes.
	UnitSymbolKind_UnitSymbolKind_min UnitSymbolKind = 159
	// Time in hours.
	UnitSymbolKind_UnitSymbolKind_hour UnitSymbolKind = 160
	// Volume in cubic meters.
	UnitSymbolKind_UnitSymbolKind_m3 UnitSymbolKind = 166
	// Watts per square meter
	UnitSymbolKind_UnitSymbolKind_wPerM2 UnitSymbolKind = 179
	// Relative temperature in degree fahrenheit.
	UnitSymbolKind_UnitSymbolKind_degF UnitSymbolKind = 279
	// Mile per hour
	UnitSymbolKind_UnitSymbolKind_mph UnitSymbolKind = 500
)

var UnitSymbolKind_name = map[int32]string{
	0:   "UnitSymbolKind_none",
	2:   "UnitSymbolKind_meter",
	3:   "UnitSymbolKind_gram",
	5:   "UnitSymbolKind_Amp",
	9:   "UnitSymbolKind_deg",
	10:  "UnitSymbolKind_rad",
	23:  "UnitSymbolKind_degC",
	25:  "UnitSymbolKind_Farad",
	27:  "UnitSymbolKind_sec",
	28:  "UnitSymbolKind_Henry",
	29:  "UnitSymbolKind_V",
	30:  "UnitSymbolKind_ohm",
	31:  "UnitSymbolKind_Joule",
	32:  "UnitSymbolKind_Newton",
	33:  "UnitSymbolKind_Hz",
	38:  "UnitSymbolKind_W",
	39:  "UnitSymbolKind_Pa",
	41:  "UnitSymbolKind_m2",
	53:  "UnitSymbolKind_Siemens",
	61:  "UnitSymbolKind_VA",
	63:  "UnitSymbolKind_VAr",
	65:  "UnitSymbolKind_wPerVA",
	71:  "UnitSymbolKind_VAh",
	72:  "UnitSymbolKind_Wh",
	73:  "UnitSymbolKind_VArh",
	75:  "UnitSymbolKind_hzPerS",
	81:  "UnitSymbolKind_wPerS",
	100: "UnitSymbolKind_other",
	106: "UnitSymbolKind_Ah",
	159: "UnitSymbolKind_min",
	160: "UnitSymbolKind_hour",
	166: "UnitSymbolKind_m3",
	179: "UnitSymbolKind_wPerM2",
	279: "UnitSymbolKind_degF",
	500: "UnitSymbolKind_mph",
}

var UnitSymbolKind_value = map[string]int32{
	"UnitSymbolKind_none":    0,
	"UnitSymbolKind_meter":   2,
	"UnitSymbolKind_gram":    3,
	"UnitSymbolKind_Amp":     5,
	"UnitSymbolKind_deg":     9,
	"UnitSymbolKind_rad":     10,
	"UnitSymbolKind_degC":    23,
	"UnitSymbolKind_Farad":   25,
	"UnitSymbolKind_sec":     27,
	"UnitSymbolKind_Henry":   28,
	"UnitSymbolKind_V":       29,
	"UnitSymbolKind_ohm":     30,
	"UnitSymbolKind_Joule":   31,
	"UnitSymbolKind_Newton":  32,
	"UnitSymbolKind_Hz":      33,
	"UnitSymbolKind_W":       38,
	"UnitSymbolKind_Pa":      39,
	"UnitSymbolKind_m2":      41,
	"UnitSymbolKind_Siemens": 53,
	"UnitSymbolKind_VA":      61,
	"UnitSymbolKind_VAr":     63,
	"UnitSymbolKind_wPerVA":  65,
	"UnitSymbolKind_VAh":     71,
	"UnitSymbolKind_Wh":      72,
	"UnitSymbolKind_VArh":    73,
	"UnitSymbolKind_hzPerS":  75,
	"UnitSymbolKind_wPerS":   81,
	"UnitSymbolKind_other":   100,
	"UnitSymbolKind_Ah":      106,
	"UnitSymbolKind_min":     159,
	"UnitSymbolKind_hour":    160,
	"UnitSymbolKind_m3":      166,
	"UnitSymbolKind_wPerM2":  179,
	"UnitSymbolKind_degF":    279,
	"UnitSymbolKind_mph":     500,
}

func (x UnitSymbolKind) String() string {
	return proto.EnumName(UnitSymbolKind_name, int32(x))
}

func (UnitSymbolKind) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_018fa6cbfd386c3e, []int{0}
}

// The unit multipliers defined for the CIM.
type UnitMultiplierKind int32

const (
	// No multiplier or equivalently multiply by 1.
	UnitMultiplierKind_UnitMultiplierKind_none UnitMultiplierKind = 0
	// Other enum not listed
	UnitMultiplierKind_UnitMultiplierKind_other UnitMultiplierKind = 1
	// Centi 10**-2.
	UnitMultiplierKind_UnitMultiplierKind_centi UnitMultiplierKind = 2
	// Deci 10**-1.
	UnitMultiplierKind_UnitMultiplierKind_deci UnitMultiplierKind = 3
	// Giga 10**9.
	UnitMultiplierKind_UnitMultiplierKind_Giga UnitMultiplierKind = 4
	// Kilo 10**3.
	UnitMultiplierKind_UnitMultiplierKind_kilo UnitMultiplierKind = 5
	// Mega 10**6.
	UnitMultiplierKind_UnitMultiplierKind_Mega UnitMultiplierKind = 6
	// Micro 10**-6.
	UnitMultiplierKind_UnitMultiplierKind_micro UnitMultiplierKind = 7
	// Milli 10**-3.
	UnitMultiplierKind_UnitMultiplierKind_milli UnitMultiplierKind = 8
	// Nano 10**-9.
	UnitMultiplierKind_UnitMultiplierKind_nano UnitMultiplierKind = 9
	// Pico 10**-12.
	UnitMultiplierKind_UnitMultiplierKind_pico UnitMultiplierKind = 10
	// Tera 10**12.
	UnitMultiplierKind_UnitMultiplierKind_Tera UnitMultiplierKind = 11
)

var UnitMultiplierKind_name = map[int32]string{
	0:  "UnitMultiplierKind_none",
	1:  "UnitMultiplierKind_other",
	2:  "UnitMultiplierKind_centi",
	3:  "UnitMultiplierKind_deci",
	4:  "UnitMultiplierKind_Giga",
	5:  "UnitMultiplierKind_kilo",
	6:  "UnitMultiplierKind_Mega",
	7:  "UnitMultiplierKind_micro",
	8:  "UnitMultiplierKind_milli",
	9:  "UnitMultiplierKind_nano",
	10: "UnitMultiplierKind_pico",
	11: "UnitMultiplierKind_Tera",
}

var UnitMultiplierKind_value = map[string]int32{
	"UnitMultiplierKind_none":  0,
	"UnitMultiplierKind_other": 1,
	"UnitMultiplierKind_centi": 2,
	"UnitMultiplierKind_deci":  3,
	"UnitMultiplierKind_Giga":  4,
	"UnitMultiplierKind_kilo":  5,
	"UnitMultiplierKind_Mega":  6,
	"UnitMultiplierKind_micro": 7,
	"UnitMultiplierKind_milli": 8,
	"UnitMultiplierKind_nano":  9,
	"UnitMultiplierKind_pico":  10,
	"UnitMultiplierKind_Tera":  11,
}

func (x UnitMultiplierKind) String() string {
	return proto.EnumName(UnitMultiplierKind_name, int32(x))
}

func (UnitMultiplierKind) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_018fa6cbfd386c3e, []int{1}
}

// Enumeration of phase identifiers. Allows designation of phases for both transmission and
// distribution equipment, circuits and loads. Residential and small commercial loads are often served
// from single-phase, or split-phase, secondary circuits. For example of s12N, phases 1 and 2 refer to
// hot wires that are 180 degrees out of phase, while N refers to the neutral wire. Through single
// phase transformer connections, these secondary circuits may be served from one or two of the primary
// phases A, B, and C. For three-phase loads, use the A, B, C phase codes instead of s12N.
type PhaseCodeKind int32

const (
	// Not applicable
	PhaseCodeKind_PhaseCodeKind_none PhaseCodeKind = 0
	// Other enum not listed
	PhaseCodeKind_PhaseCodeKind_other PhaseCodeKind = 1
	// Neutral phase.
	PhaseCodeKind_PhaseCodeKind_N PhaseCodeKind = 16
	// Phase C.
	PhaseCodeKind_PhaseCodeKind_C PhaseCodeKind = 32
	// Phases C and neutral.
	PhaseCodeKind_PhaseCodeKind_CN PhaseCodeKind = 33
	// Phases A and C.
	PhaseCodeKind_PhaseCodeKind_AC PhaseCodeKind = 40
	// Phases A, C and neutral.
	PhaseCodeKind_PhaseCodeKind_ACN PhaseCodeKind = 41
	// Phase B.
	PhaseCodeKind_PhaseCodeKind_B PhaseCodeKind = 64
	// Phases B and neutral.
	PhaseCodeKind_PhaseCodeKind_BN PhaseCodeKind = 65
	// Phases B and C.
	PhaseCodeKind_PhaseCodeKind_BC PhaseCodeKind = 66
	// Phases B, C, and neutral.
	PhaseCodeKind_PhaseCodeKind_BCN PhaseCodeKind = 97
	// Phase A.
	PhaseCodeKind_PhaseCodeKind_A PhaseCodeKind = 128
	// Phases A and neutral.
	PhaseCodeKind_PhaseCodeKind_AN PhaseCodeKind = 129
	// Phases A and B.
	PhaseCodeKind_PhaseCodeKind_AB PhaseCodeKind = 132
	// Phases A, B, and neutral.
	PhaseCodeKind_PhaseCodeKind_ABN PhaseCodeKind = 193
	// Phases A, B, and C.
	PhaseCodeKind_PhaseCodeKind_ABC PhaseCodeKind = 224
	// Phases A, B, C, and N.
	PhaseCodeKind_PhaseCodeKind_ABCN PhaseCodeKind = 225
	// Secondary phase 2.
	PhaseCodeKind_PhaseCodeKind_s2 PhaseCodeKind = 256
	// Secondary phase 2 and neutral.
	PhaseCodeKind_PhaseCodeKind_s2N PhaseCodeKind = 257
	// Secondary phase 1.
	PhaseCodeKind_PhaseCodeKind_s1 PhaseCodeKind = 512
	// Secondary phase 1 and neutral.
	PhaseCodeKind_PhaseCodeKind_s1N PhaseCodeKind = 513
	// Secondary phase 1 and 2.
	PhaseCodeKind_PhaseCodeKind_s12 PhaseCodeKind = 768
	// Secondary phases 1, 2, and neutral.
	PhaseCodeKind_PhaseCodeKind_s12N PhaseCodeKind = 769
)

var PhaseCodeKind_name = map[int32]string{
	0:   "PhaseCodeKind_none",
	1:   "PhaseCodeKind_other",
	16:  "PhaseCodeKind_N",
	32:  "PhaseCodeKind_C",
	33:  "PhaseCodeKind_CN",
	40:  "PhaseCodeKind_AC",
	41:  "PhaseCodeKind_ACN",
	64:  "PhaseCodeKind_B",
	65:  "PhaseCodeKind_BN",
	66:  "PhaseCodeKind_BC",
	97:  "PhaseCodeKind_BCN",
	128: "PhaseCodeKind_A",
	129: "PhaseCodeKind_AN",
	132: "PhaseCodeKind_AB",
	193: "PhaseCodeKind_ABN",
	224: "PhaseCodeKind_ABC",
	225: "PhaseCodeKind_ABCN",
	256: "PhaseCodeKind_s2",
	257: "PhaseCodeKind_s2N",
	512: "PhaseCodeKind_s1",
	513: "PhaseCodeKind_s1N",
	768: "PhaseCodeKind_s12",
	769: "PhaseCodeKind_s12N",
}

var PhaseCodeKind_value = map[string]int32{
	"PhaseCodeKind_none":  0,
	"PhaseCodeKind_other": 1,
	"PhaseCodeKind_N":     16,
	"PhaseCodeKind_C":     32,
	"PhaseCodeKind_CN":    33,
	"PhaseCodeKind_AC":    40,
	"PhaseCodeKind_ACN":   41,
	"PhaseCodeKind_B":     64,
	"PhaseCodeKind_BN":    65,
	"PhaseCodeKind_BC":    66,
	"PhaseCodeKind_BCN":   97,
	"PhaseCodeKind_A":     128,
	"PhaseCodeKind_AN":    129,
	"PhaseCodeKind_AB":    132,
	"PhaseCodeKind_ABN":   193,
	"PhaseCodeKind_ABC":   224,
	"PhaseCodeKind_ABCN":  225,
	"PhaseCodeKind_s2":    256,
	"PhaseCodeKind_s2N":   257,
	"PhaseCodeKind_s1":    512,
	"PhaseCodeKind_s1N":   513,
	"PhaseCodeKind_s12":   768,
	"PhaseCodeKind_s12N":  769,
}

func (x PhaseCodeKind) String() string {
	return proto.EnumName(PhaseCodeKind_name, int32(x))
}

func (PhaseCodeKind) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_018fa6cbfd386c3e, []int{2}
}

// Validity of the value, as condensed information for the client. In case this value is not
// 'good', some reasons may be found in the 'detailQual'.
type ValidityKind int32

const (
	// Supervision function has detected no abnormal condition of either the acquisition function or
	// the information source.
	ValidityKind_ValidityKind_good ValidityKind = 0
	// Supervision function has detected an abnormal condition of the acquisition function or the
	// information source (missing or non-operating updating devices). The value is not defined under this
	// condition. It shall be used to indicate to the client that the value may be incorrect and shall not
	// be used.  EXAMPLE If an input unit detects an oscillation of one input it will mark the related
	// information as invalid.
	ValidityKind_ValidityKind_invalid ValidityKind = 1
	// Reserved
	ValidityKind_ValidityKind_reserved ValidityKind = 2
	// Supervision function has detected any abnormal behaviour. However, the value could still be
	// valid. It is client's responsibility to determine whether the values should be used.
	ValidityKind_ValidityKind_questionable ValidityKind = 3
)

var ValidityKind_name = map[int32]string{
	0: "ValidityKind_good",
	1: "ValidityKind_invalid",
	2: "ValidityKind_reserved",
	3: "ValidityKind_questionable",
}

var ValidityKind_value = map[string]int32{
	"ValidityKind_good":         0,
	"ValidityKind_invalid":      1,
	"ValidityKind_reserved":     2,
	"ValidityKind_questionable": 3,
}

func (x ValidityKind) String() string {
	return proto.EnumName(ValidityKind_name, int32(x))
}

func (ValidityKind) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_018fa6cbfd386c3e, []int{3}
}

// (default=process) Defines the source of a value. NOTE 1 Substitution may be done locally or via
// the communication services. In the second case, specific attributes with a FC=SV are used. NOTE 2
// There are various means to clear a substitution. As an example, a substitution that was done
// following an invalid condition may be cleared automatically if the invalid condition is cleared.
// However, this is a local issue and therefore
type SourceKind int32

const (
	// The value is provided by an input function from the process I/O or is calculated from some
	// application function.
	SourceKind_SourceKind_process SourceKind = 0
	// The value is provided by an operator input or by an automatic source.
	SourceKind_SourceKind_substituted SourceKind = 1
)

var SourceKind_name = map[int32]string{
	0: "SourceKind_process",
	1: "SourceKind_substituted",
}

var SourceKind_value = map[string]int32{
	"SourceKind_process":     0,
	"SourceKind_substituted": 1,
}

func (x SourceKind) String() string {
	return proto.EnumName(SourceKind_name, int32(x))
}

func (SourceKind) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_018fa6cbfd386c3e, []int{4}
}

// Validity of the value, as condensed information for the client. In case this value is not
// 'good', some reasons may be found in the 'detailQual'.
type TimeAccuracyKind int32

const (
	// Undefined
	TimeAccuracyKind_TimeAccuracyKind_UNDEFINED TimeAccuracyKind = 0
	// 10 ms (class T0)
	TimeAccuracyKind_TimeAccuracyKind_T0 TimeAccuracyKind = 7
	// 1 ms (class T1)
	TimeAccuracyKind_TimeAccuracyKind_T1 TimeAccuracyKind = 10
	// 100 us (class T2)
	TimeAccuracyKind_TimeAccuracyKind_T2 TimeAccuracyKind = 14
	// 25 us (class T3)
	TimeAccuracyKind_TimeAccuracyKind_T3 TimeAccuracyKind = 16
	// 4 us (class T4)
	TimeAccuracyKind_TimeAccuracyKind_T4 TimeAccuracyKind = 18
	// 1 us (class T5)
	TimeAccuracyKind_TimeAccuracyKind_T5 TimeAccuracyKind = 20
	// Undefined
	TimeAccuracyKind_TimeAccuracyKind_unspecified TimeAccuracyKind = 31
)

var TimeAccuracyKind_name = map[int32]string{
	0:  "TimeAccuracyKind_UNDEFINED",
	7:  "TimeAccuracyKind_T0",
	10: "TimeAccuracyKind_T1",
	14: "TimeAccuracyKind_T2",
	16: "TimeAccuracyKind_T3",
	18: "TimeAccuracyKind_T4",
	20: "TimeAccuracyKind_T5",
	31: "TimeAccuracyKind_unspecified",
}

var TimeAccuracyKind_value = map[string]int32{
	"TimeAccuracyKind_UNDEFINED":   0,
	"TimeAccuracyKind_T0":          7,
	"TimeAccuracyKind_T1":          10,
	"TimeAccuracyKind_T2":          14,
	"TimeAccuracyKind_T3":          16,
	"TimeAccuracyKind_T4":          18,
	"TimeAccuracyKind_T5":          20,
	"TimeAccuracyKind_unspecified": 31,
}

func (x TimeAccuracyKind) String() string {
	return proto.EnumName(TimeAccuracyKind_name, int32(x))
}

func (TimeAccuracyKind) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_018fa6cbfd386c3e, []int{5}
}

// ESS function kind
type ScheduleParameterKind int32

const (
	// MISSING DOCUMENTATION!!!
	ScheduleParameterKind_ScheduleParameterKind_none ScheduleParameterKind = 0
	// Other enum not listed
	ScheduleParameterKind_ScheduleParameterKind_other ScheduleParameterKind = 1
	// MISSING DOCUMENTATION!!!
	ScheduleParameterKind_ScheduleParameterKind_A_net_mag ScheduleParameterKind = 2
	// MISSING DOCUMENTATION!!!
	ScheduleParameterKind_ScheduleParameterKind_A_neut_mag ScheduleParameterKind = 3
	// MISSING DOCUMENTATION!!!
	ScheduleParameterKind_ScheduleParameterKind_A_phsA_mag ScheduleParameterKind = 4
	// MISSING DOCUMENTATION!!!
	ScheduleParameterKind_ScheduleParameterKind_A_phsB_mag ScheduleParameterKind = 5
	// MISSING DOCUMENTATION!!!
	ScheduleParameterKind_ScheduleParameterKind_A_phsC_mag ScheduleParameterKind = 6
	// MISSING DOCUMENTATION!!!
	ScheduleParameterKind_ScheduleParameterKind_Hz_mag ScheduleParameterKind = 7
	// MISSING DOCUMENTATION!!!
	ScheduleParameterKind_ScheduleParameterKind_PF_net_mag ScheduleParameterKind = 8
	// MISSING DOCUMENTATION!!!
	ScheduleParameterKind_ScheduleParameterKind_PF_neut_mag ScheduleParameterKind = 9
	// MISSING DOCUMENTATION!!!
	ScheduleParameterKind_ScheduleParameterKind_PF_phsA_mag ScheduleParameterKind = 10
	// MISSING DOCUMENTATION!!!
	ScheduleParameterKind_ScheduleParameterKind_PF_phsB_mag ScheduleParameterKind = 11
	// MISSING DOCUMENTATION!!!
	ScheduleParameterKind_ScheduleParameterKind_PF_phsC_mag ScheduleParameterKind = 12
	// MISSING DOCUMENTATION!!!
	ScheduleParameterKind_ScheduleParameterKind_PhV_net_ang ScheduleParameterKind = 13
	// MISSING DOCUMENTATION!!!
	ScheduleParameterKind_ScheduleParameterKind_PhV_net_mag ScheduleParameterKind = 14
	// MISSING DOCUMENTATION!!!
	ScheduleParameterKind_ScheduleParameterKind_PhV_neut_ang ScheduleParameterKind = 15
	// MISSING DOCUMENTATION!!!
	ScheduleParameterKind_ScheduleParameterKind_PhV_neut_mag ScheduleParameterKind = 16
	// MISSING DOCUMENTATION!!!
	ScheduleParameterKind_ScheduleParameterKind_PhV_phsA_ang ScheduleParameterKind = 17
	// MISSING DOCUMENTATION!!!
	ScheduleParameterKind_ScheduleParameterKind_PhV_phsA_mag ScheduleParameterKind = 18
	// MISSING DOCUMENTATION!!!
	ScheduleParameterKind_ScheduleParameterKind_PhV_phsB_ang ScheduleParameterKind = 19
	// MISSING DOCUMENTATION!!!
	ScheduleParameterKind_ScheduleParameterKind_PhV_phsB_mag ScheduleParameterKind = 20
	// MISSING DOCUMENTATION!!!
	ScheduleParameterKind_ScheduleParameterKind_PhV_phsC_ang ScheduleParameterKind = 21
	// MISSING DOCUMENTATION!!!
	ScheduleParameterKind_ScheduleParameterKind_PhV_phsC_mag ScheduleParameterKind = 22
	// MISSING DOCUMENTATION!!!
	ScheduleParameterKind_ScheduleParameterKind_PPV_phsAB_ang ScheduleParameterKind = 23
	// MISSING DOCUMENTATION!!!
	ScheduleParameterKind_ScheduleParameterKind_PPV_phsAB_mag ScheduleParameterKind = 24
	// MISSING DOCUMENTATION!!!
	ScheduleParameterKind_ScheduleParameterKind_PPV_phsBC_ang ScheduleParameterKind = 25
	// MISSING DOCUMENTATION!!!
	ScheduleParameterKind_ScheduleParameterKind_PPV_phsBC_mag ScheduleParameterKind = 26
	// MISSING DOCUMENTATION!!!
	ScheduleParameterKind_ScheduleParameterKind_PPV_phsCA_ang ScheduleParameterKind = 27
	// MISSING DOCUMENTATION!!!
	ScheduleParameterKind_ScheduleParameterKind_PPV_phsCA_mag ScheduleParameterKind = 28
	// MISSING DOCUMENTATION!!!
	ScheduleParameterKind_ScheduleParameterKind_VA_net_mag ScheduleParameterKind = 29
	// MISSING DOCUMENTATION!!!
	ScheduleParameterKind_ScheduleParameterKind_VA_neut_mag ScheduleParameterKind = 30
	// MISSING DOCUMENTATION!!!
	ScheduleParameterKind_ScheduleParameterKind_VA_phsA_mag ScheduleParameterKind = 31
	// MISSING DOCUMENTATION!!!
	ScheduleParameterKind_ScheduleParameterKind_VA_phsB_mag ScheduleParameterKind = 32
	// MISSING DOCUMENTATION!!!
	ScheduleParameterKind_ScheduleParameterKind_VA_phsC_mag ScheduleParameterKind = 33
	// MISSING DOCUMENTATION!!!
	ScheduleParameterKind_ScheduleParameterKind_VAr_net_mag ScheduleParameterKind = 34
	// MISSING DOCUMENTATION!!!
	ScheduleParameterKind_ScheduleParameterKind_VAr_neut_mag ScheduleParameterKind = 35
	// MISSING DOCUMENTATION!!!
	ScheduleParameterKind_ScheduleParameterKind_VAr_phsA_mag ScheduleParameterKind = 36
	// MISSING DOCUMENTATION!!!
	ScheduleParameterKind_ScheduleParameterKind_VAr_phsB_mag ScheduleParameterKind = 37
	// MISSING DOCUMENTATION!!!
	ScheduleParameterKind_ScheduleParameterKind_VAr_phsC_mag ScheduleParameterKind = 38
	// MISSING DOCUMENTATION!!!
	ScheduleParameterKind_ScheduleParameterKind_W_net_mag ScheduleParameterKind = 39
	// MISSING DOCUMENTATION!!!
	ScheduleParameterKind_ScheduleParameterKind_W_neut_mag ScheduleParameterKind = 40
	// MISSING DOCUMENTATION!!!
	ScheduleParameterKind_ScheduleParameterKind_W_phsA_mag ScheduleParameterKind = 41
	// MISSING DOCUMENTATION!!!
	ScheduleParameterKind_ScheduleParameterKind_W_phsB_mag ScheduleParameterKind = 42
	// MISSING DOCUMENTATION!!!
	ScheduleParameterKind_ScheduleParameterKind_W_phsC_mag ScheduleParameterKind = 43
)

var ScheduleParameterKind_name = map[int32]string{
	0:  "ScheduleParameterKind_none",
	1:  "ScheduleParameterKind_other",
	2:  "ScheduleParameterKind_A_net_mag",
	3:  "ScheduleParameterKind_A_neut_mag",
	4:  "ScheduleParameterKind_A_phsA_mag",
	5:  "ScheduleParameterKind_A_phsB_mag",
	6:  "ScheduleParameterKind_A_phsC_mag",
	7:  "ScheduleParameterKind_Hz_mag",
	8:  "ScheduleParameterKind_PF_net_mag",
	9:  "ScheduleParameterKind_PF_neut_mag",
	10: "ScheduleParameterKind_PF_phsA_mag",
	11: "ScheduleParameterKind_PF_phsB_mag",
	12: "ScheduleParameterKind_PF_phsC_mag",
	13: "ScheduleParameterKind_PhV_net_ang",
	14: "ScheduleParameterKind_PhV_net_mag",
	15: "ScheduleParameterKind_PhV_neut_ang",
	16: "ScheduleParameterKind_PhV_neut_mag",
	17: "ScheduleParameterKind_PhV_phsA_ang",
	18: "ScheduleParameterKind_PhV_phsA_mag",
	19: "ScheduleParameterKind_PhV_phsB_ang",
	20: "ScheduleParameterKind_PhV_phsB_mag",
	21: "ScheduleParameterKind_PhV_phsC_ang",
	22: "ScheduleParameterKind_PhV_phsC_mag",
	23: "ScheduleParameterKind_PPV_phsAB_ang",
	24: "ScheduleParameterKind_PPV_phsAB_mag",
	25: "ScheduleParameterKind_PPV_phsBC_ang",
	26: "ScheduleParameterKind_PPV_phsBC_mag",
	27: "ScheduleParameterKind_PPV_phsCA_ang",
	28: "ScheduleParameterKind_PPV_phsCA_mag",
	29: "ScheduleParameterKind_VA_net_mag",
	30: "ScheduleParameterKind_VA_neut_mag",
	31: "ScheduleParameterKind_VA_phsA_mag",
	32: "ScheduleParameterKind_VA_phsB_mag",
	33: "ScheduleParameterKind_VA_phsC_mag",
	34: "ScheduleParameterKind_VAr_net_mag",
	35: "ScheduleParameterKind_VAr_neut_mag",
	36: "ScheduleParameterKind_VAr_phsA_mag",
	37: "ScheduleParameterKind_VAr_phsB_mag",
	38: "ScheduleParameterKind_VAr_phsC_mag",
	39: "ScheduleParameterKind_W_net_mag",
	40: "ScheduleParameterKind_W_neut_mag",
	41: "ScheduleParameterKind_W_phsA_mag",
	42: "ScheduleParameterKind_W_phsB_mag",
	43: "ScheduleParameterKind_W_phsC_mag",
}

var ScheduleParameterKind_value = map[string]int32{
	"ScheduleParameterKind_none":          0,
	"ScheduleParameterKind_other":         1,
	"ScheduleParameterKind_A_net_mag":     2,
	"ScheduleParameterKind_A_neut_mag":    3,
	"ScheduleParameterKind_A_phsA_mag":    4,
	"ScheduleParameterKind_A_phsB_mag":    5,
	"ScheduleParameterKind_A_phsC_mag":    6,
	"ScheduleParameterKind_Hz_mag":        7,
	"ScheduleParameterKind_PF_net_mag":    8,
	"ScheduleParameterKind_PF_neut_mag":   9,
	"ScheduleParameterKind_PF_phsA_mag":   10,
	"ScheduleParameterKind_PF_phsB_mag":   11,
	"ScheduleParameterKind_PF_phsC_mag":   12,
	"ScheduleParameterKind_PhV_net_ang":   13,
	"ScheduleParameterKind_PhV_net_mag":   14,
	"ScheduleParameterKind_PhV_neut_ang":  15,
	"ScheduleParameterKind_PhV_neut_mag":  16,
	"ScheduleParameterKind_PhV_phsA_ang":  17,
	"ScheduleParameterKind_PhV_phsA_mag":  18,
	"ScheduleParameterKind_PhV_phsB_ang":  19,
	"ScheduleParameterKind_PhV_phsB_mag":  20,
	"ScheduleParameterKind_PhV_phsC_ang":  21,
	"ScheduleParameterKind_PhV_phsC_mag":  22,
	"ScheduleParameterKind_PPV_phsAB_ang": 23,
	"ScheduleParameterKind_PPV_phsAB_mag": 24,
	"ScheduleParameterKind_PPV_phsBC_ang": 25,
	"ScheduleParameterKind_PPV_phsBC_mag": 26,
	"ScheduleParameterKind_PPV_phsCA_ang": 27,
	"ScheduleParameterKind_PPV_phsCA_mag": 28,
	"ScheduleParameterKind_VA_net_mag":    29,
	"ScheduleParameterKind_VA_neut_mag":   30,
	"ScheduleParameterKind_VA_phsA_mag":   31,
	"ScheduleParameterKind_VA_phsB_mag":   32,
	"ScheduleParameterKind_VA_phsC_mag":   33,
	"ScheduleParameterKind_VAr_net_mag":   34,
	"ScheduleParameterKind_VAr_neut_mag":  35,
	"ScheduleParameterKind_VAr_phsA_mag":  36,
	"ScheduleParameterKind_VAr_phsB_mag":  37,
	"ScheduleParameterKind_VAr_phsC_mag":  38,
	"ScheduleParameterKind_W_net_mag":     39,
	"ScheduleParameterKind_W_neut_mag":    40,
	"ScheduleParameterKind_W_phsA_mag":    41,
	"ScheduleParameterKind_W_phsB_mag":    42,
	"ScheduleParameterKind_W_phsC_mag":    43,
}

func (x ScheduleParameterKind) String() string {
	return proto.EnumName(ScheduleParameterKind_name, int32(x))
}

func (ScheduleParameterKind) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_018fa6cbfd386c3e, []int{6}
}

// Calculation method (CalcMethodKind enumeration)
type CalcMethodKind int32

const (
	// Undefined enum value which can be used for Protobuf generation and be consistent with other
	// technologies.
	CalcMethodKind_CalcMethodKind_UNDEFINED CalcMethodKind = 0
	// All analogue values (i.e., all common attributes 'i' and 'f') meet the sampling and filtering
	// characteristics specified in IEEE C37.118.1 for P-CLASS.
	CalcMethodKind_CalcMethodKind_P_CLASS CalcMethodKind = 11
	// All analogue values (i.e., all common attributes 'i' and 'f') meet the sampling and filtering
	// characteristics specified in IEEE C37.118.1 for M-CLASS.
	CalcMethodKind_CalcMethodKind_M_CLASS CalcMethodKind = 12
	// All analogue values are [F(t+T)-F(t)] for a calculation interval T (in the same unit as the
	// original entity). Note: The client can still calculate rate so: RATE = DIFF/T.
	CalcMethodKind_CalcMethodKind_DIFF CalcMethodKind = 13
)

var CalcMethodKind_name = map[int32]string{
	0:  "CalcMethodKind_UNDEFINED",
	11: "CalcMethodKind_P_CLASS",
	12: "CalcMethodKind_M_CLASS",
	13: "CalcMethodKind_DIFF",
}

var CalcMethodKind_value = map[string]int32{
	"CalcMethodKind_UNDEFINED": 0,
	"CalcMethodKind_P_CLASS":   11,
	"CalcMethodKind_M_CLASS":   12,
	"CalcMethodKind_DIFF":      13,
}

func (x CalcMethodKind) String() string {
	return proto.EnumName(CalcMethodKind_name, int32(x))
}

func (CalcMethodKind) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_018fa6cbfd386c3e, []int{7}
}

// Power system connect modes to the power grid (GridConnectModeKind)
type GridConnectModeKind int32

const (
	// Undefined
	GridConnectModeKind_GridConnectModeKind_UNDEFINED GridConnectModeKind = 0
	// Current-source inverter (CSI)
	GridConnectModeKind_GridConnectModeKind_CSI GridConnectModeKind = 1
	// Voltage-controlled voltage-source inverter (VC-VSI)
	GridConnectModeKind_GridConnectModeKind_VC_VSI GridConnectModeKind = 2
	// Current-controlled voltage-source inverter (CC-VSI)
	GridConnectModeKind_GridConnectModeKind_CC_VSI GridConnectModeKind = 3
	// Not applicable / Unknown
	GridConnectModeKind_GridConnectModeKind_none GridConnectModeKind = 98
	// MISSING DOCUMENTATION!!!
	GridConnectModeKind_GridConnectModeKind_other GridConnectModeKind = 99
	// Voltage source inverter regulating to P and Q references (VSI PQ)
	GridConnectModeKind_GridConnectModeKind_VSI_PQ GridConnectModeKind = 2000
	// Voltage source inverter regulating to voltage and frequency references paralleling other
	// generation and not grid forming (VSI VF).
	GridConnectModeKind_GridConnectModeKind_VSI_VF GridConnectModeKind = 2001
	// Voltage source inverter regulating to voltage and frequency references as primary grid forming
	// generation (VSI ISO).
	GridConnectModeKind_GridConnectModeKind_VSI_ISO GridConnectModeKind = 2002
)

var GridConnectModeKind_name = map[int32]string{
	0:    "GridConnectModeKind_UNDEFINED",
	1:    "GridConnectModeKind_CSI",
	2:    "GridConnectModeKind_VC_VSI",
	3:    "GridConnectModeKind_CC_VSI",
	98:   "GridConnectModeKind_none",
	99:   "GridConnectModeKind_other",
	2000: "GridConnectModeKind_VSI_PQ",
	2001: "GridConnectModeKind_VSI_VF",
	2002: "GridConnectModeKind_VSI_ISO",
}

var GridConnectModeKind_value = map[string]int32{
	"GridConnectModeKind_UNDEFINED": 0,
	"GridConnectModeKind_CSI":       1,
	"GridConnectModeKind_VC_VSI":    2,
	"GridConnectModeKind_CC_VSI":    3,
	"GridConnectModeKind_none":      98,
	"GridConnectModeKind_other":     99,
	"GridConnectModeKind_VSI_PQ":    2000,
	"GridConnectModeKind_VSI_VF":    2001,
	"GridConnectModeKind_VSI_ISO":   2002,
}

func (x GridConnectModeKind) String() string {
	return proto.EnumName(GridConnectModeKind_name, int32(x))
}

func (GridConnectModeKind) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_018fa6cbfd386c3e, []int{8}
}

// Power factor sign (PFSignKind enumeration)
type PFSignKind int32

const (
	// Undefined enum value which can be used for Protobuf generation and be consistent with other
	// technologies.
	PFSignKind_PFSignKind_UNDEFINED PFSignKind = 0
	// All analogue values are [F(t+T)-F(t)] for a calculation interval T (in the same unit as the
	// original entity). Note: The client can still calculate rate so: RATE = DIFF/T.
	PFSignKind_PFSignKind_IEC PFSignKind = 1
	// All analogue values (i.e., all common attributes 'i' and 'f') meet the sampling and filtering
	// characteristics specified in IEEE C37.118.1 for M-CLASS.
	PFSignKind_PFSignKind_EEI PFSignKind = 2
)

var PFSignKind_name = map[int32]string{
	0: "PFSignKind_UNDEFINED",
	1: "PFSignKind_IEC",
	2: "PFSignKind_EEI",
}

var PFSignKind_value = map[string]int32{
	"PFSignKind_UNDEFINED": 0,
	"PFSignKind_IEC":       1,
	"PFSignKind_EEI":       2,
}

func (x PFSignKind) String() string {
	return proto.EnumName(PFSignKind_name, int32(x))
}

func (PFSignKind) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_018fa6cbfd386c3e, []int{9}
}

// Behaviour or mode (BehaviourModeKind enumeration)
type BehaviourModeKind int32

const (
	// Undefined
	BehaviourModeKind_BehaviourModeKind_UNDEFINED BehaviourModeKind = 0
	// Normal enabled state.
	BehaviourModeKind_BehaviourModeKind_on BehaviourModeKind = 1
	// Process is passively supervised.
	BehaviourModeKind_BehaviourModeKind_blocked BehaviourModeKind = 2
	// Function is operated but results are indicated as test results.
	BehaviourModeKind_BehaviourModeKind_test BehaviourModeKind = 3
	// Function is operated in test mode, but with no impact to the process.
	BehaviourModeKind_BehaviourModeKind_test_blocked BehaviourModeKind = 4
	// Function is inactive but shows its configuration capability.
	BehaviourModeKind_BehaviourModeKind_off BehaviourModeKind = 5
)

var BehaviourModeKind_name = map[int32]string{
	0: "BehaviourModeKind_UNDEFINED",
	1: "BehaviourModeKind_on",
	2: "BehaviourModeKind_blocked",
	3: "BehaviourModeKind_test",
	4: "BehaviourModeKind_test_blocked",
	5: "BehaviourModeKind_off",
}

var BehaviourModeKind_value = map[string]int32{
	"BehaviourModeKind_UNDEFINED":    0,
	"BehaviourModeKind_on":           1,
	"BehaviourModeKind_blocked":      2,
	"BehaviourModeKind_test":         3,
	"BehaviourModeKind_test_blocked": 4,
	"BehaviourModeKind_off":          5,
}

func (x BehaviourModeKind) String() string {
	return proto.EnumName(BehaviourModeKind_name, int32(x))
}

func (BehaviourModeKind) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_018fa6cbfd386c3e, []int{10}
}

// DER operational state (DERGeneratorStateKind)
type DERGeneratorStateKind int32

const (
	// Undefined enum value which can be used for Protobuf generation and be consistent with other
	// technologies.
	DERGeneratorStateKind_DERGeneratorStateKind_UNDEFINED DERGeneratorStateKind = 0
	// MISSING DOCUMENTATION!!!
	DERGeneratorStateKind_DERGeneratorStateKind_Not_operating DERGeneratorStateKind = 1
	// MISSING DOCUMENTATION!!!
	DERGeneratorStateKind_DERGeneratorStateKind_Operating DERGeneratorStateKind = 2
	// MISSING DOCUMENTATION!!!
	DERGeneratorStateKind_DERGeneratorStateKind_Starting_up DERGeneratorStateKind = 3
	// MISSING DOCUMENTATION!!!
	DERGeneratorStateKind_DERGeneratorStateKind_Shutting_down DERGeneratorStateKind = 4
	// MISSING DOCUMENTATION!!!
	DERGeneratorStateKind_DERGeneratorStateKind_At_disconnect_level DERGeneratorStateKind = 5
	// MISSING DOCUMENTATION!!!
	DERGeneratorStateKind_DERGeneratorStateKind_Ramping_in_power DERGeneratorStateKind = 6
	// MISSING DOCUMENTATION!!!
	DERGeneratorStateKind_DERGeneratorStateKind_Ramping_in_reactive_power DERGeneratorStateKind = 7
	// MISSING DOCUMENTATION!!!
	DERGeneratorStateKind_DERGeneratorStateKind_Standby DERGeneratorStateKind = 8
	// MISSING DOCUMENTATION!!!
	DERGeneratorStateKind_DERGeneratorStateKind_Not_applicable_Unknown DERGeneratorStateKind = 98
	// MISSING DOCUMENTATION!!!
	DERGeneratorStateKind_DERGeneratorStateKind_Other DERGeneratorStateKind = 99
)

var DERGeneratorStateKind_name = map[int32]string{
	0:  "DERGeneratorStateKind_UNDEFINED",
	1:  "DERGeneratorStateKind_Not_operating",
	2:  "DERGeneratorStateKind_Operating",
	3:  "DERGeneratorStateKind_Starting_up",
	4:  "DERGeneratorStateKind_Shutting_down",
	5:  "DERGeneratorStateKind_At_disconnect_level",
	6:  "DERGeneratorStateKind_Ramping_in_power",
	7:  "DERGeneratorStateKind_Ramping_in_reactive_power",
	8:  "DERGeneratorStateKind_Standby",
	98: "DERGeneratorStateKind_Not_applicable_Unknown",
	99: "DERGeneratorStateKind_Other",
}

var DERGeneratorStateKind_value = map[string]int32{
	"DERGeneratorStateKind_UNDEFINED":                 0,
	"DERGeneratorStateKind_Not_operating":             1,
	"DERGeneratorStateKind_Operating":                 2,
	"DERGeneratorStateKind_Starting_up":               3,
	"DERGeneratorStateKind_Shutting_down":             4,
	"DERGeneratorStateKind_At_disconnect_level":       5,
	"DERGeneratorStateKind_Ramping_in_power":          6,
	"DERGeneratorStateKind_Ramping_in_reactive_power": 7,
	"DERGeneratorStateKind_Standby":                   8,
	"DERGeneratorStateKind_Not_applicable_Unknown":    98,
	"DERGeneratorStateKind_Other":                     99,
}

func (x DERGeneratorStateKind) String() string {
	return proto.EnumName(DERGeneratorStateKind_name, int32(x))
}

func (DERGeneratorStateKind) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_018fa6cbfd386c3e, []int{11}
}

// Dynamic test status (see IEC61850-7-2 section 20.2.1 Direct control with normal security, state
// machine diagram)   A simplified state machine diagram (from Herb F.) is provided.
type DynamicTestKind int32

const (
	// None
	DynamicTestKind_DynamicTestKind_none DynamicTestKind = 0
	// Testing status
	DynamicTestKind_DynamicTestKind_testing DynamicTestKind = 1
	// Operating status
	DynamicTestKind_DynamicTestKind_operating DynamicTestKind = 2
	// Failed status
	DynamicTestKind_DynamicTestKind_failed DynamicTestKind = 3
)

var DynamicTestKind_name = map[int32]string{
	0: "DynamicTestKind_none",
	1: "DynamicTestKind_testing",
	2: "DynamicTestKind_operating",
	3: "DynamicTestKind_failed",
}

var DynamicTestKind_value = map[string]int32{
	"DynamicTestKind_none":      0,
	"DynamicTestKind_testing":   1,
	"DynamicTestKind_operating": 2,
	"DynamicTestKind_failed":    3,
}

func (x DynamicTestKind) String() string {
	return proto.EnumName(DynamicTestKind_name, int32(x))
}

func (DynamicTestKind) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_018fa6cbfd386c3e, []int{12}
}

// State kind
type HealthKind int32

const (
	// MISSING DOCUMENTATION!!!
	HealthKind_HealthKind_none HealthKind = 0
	// No problems, normal operation ("green").
	HealthKind_HealthKind_OK HealthKind = 1
	// Minor problems, but in safe operating mode ("yellow"). The exact meaning is a local issue,
	// depending on the dedicated function/device.
	HealthKind_HealthKind_Warning HealthKind = 2
	// Severe problem, no operation possible ("red").
	HealthKind_HealthKind_Alarm HealthKind = 3
)

var HealthKind_name = map[int32]string{
	0: "HealthKind_none",
	1: "HealthKind_OK",
	2: "HealthKind_Warning",
	3: "HealthKind_Alarm",
}

var HealthKind_value = map[string]int32{
	"HealthKind_none":    0,
	"HealthKind_OK":      1,
	"HealthKind_Warning": 2,
	"HealthKind_Alarm":   3,
}

func (x HealthKind) String() string {
	return proto.EnumName(HealthKind_name, int32(x))
}

func (HealthKind) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_018fa6cbfd386c3e, []int{13}
}

// Double point position status
type DbPosKind int32

const (
	// Transient status
	DbPosKind_DbPosKind_transient DbPosKind = 0
	// Closed status
	DbPosKind_DbPosKind_closed DbPosKind = 1
	// Open status
	DbPosKind_DbPosKind_open DbPosKind = 2
	// Invalid status
	DbPosKind_DbPosKind_invalid DbPosKind = 3
)

var DbPosKind_name = map[int32]string{
	0: "DbPosKind_transient",
	1: "DbPosKind_closed",
	2: "DbPosKind_open",
	3: "DbPosKind_invalid",
}

var DbPosKind_value = map[string]int32{
	"DbPosKind_transient": 0,
	"DbPosKind_closed":    1,
	"DbPosKind_open":      2,
	"DbPosKind_invalid":   3,
}

func (x DbPosKind) String() string {
	return proto.EnumName(DbPosKind_name, int32(x))
}

func (DbPosKind) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_018fa6cbfd386c3e, []int{14}
}

// State kind
type StateKind int32

const (
	// MISSING DOCUMENTATION!!!
	StateKind_StateKind_off StateKind = 0
	// MISSING DOCUMENTATION!!!
	StateKind_StateKind_on StateKind = 1
	// MISSING DOCUMENTATION!!!
	StateKind_StateKind_standby StateKind = 2
)

var StateKind_name = map[int32]string{
	0: "StateKind_off",
	1: "StateKind_on",
	2: "StateKind_standby",
}

var StateKind_value = map[string]int32{
	"StateKind_off":     0,
	"StateKind_on":      1,
	"StateKind_standby": 2,
}

func (x StateKind) String() string {
	return proto.EnumName(StateKind_name, int32(x))
}

func (StateKind) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_018fa6cbfd386c3e, []int{15}
}

// This is a root class to provide common identification for all classes needing identification and
// naming attributes.
type IdentifiedObject struct {
	// MISSING DOCUMENTATION!!!
	Description *wrappers.StringValue `protobuf:"bytes,1,opt,name=description,proto3" json:"description,omitempty"`
	// Master resource identifier issued by a model authority. The mRID must semantically be a UUID as
	// specified in RFC 4122. The mRID is globally unique.
	MRID *wrappers.StringValue `protobuf:"bytes,2,opt,name=mRID,proto3" json:"mRID,omitempty"`
	// The name is any free human readable and possibly non unique text naming the object.
	Name                 *wrappers.StringValue `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *IdentifiedObject) Reset()         { *m = IdentifiedObject{} }
func (m *IdentifiedObject) String() string { return proto.CompactTextString(m) }
func (*IdentifiedObject) ProtoMessage()    {}
func (*IdentifiedObject) Descriptor() ([]byte, []int) {
	return fileDescriptor_018fa6cbfd386c3e, []int{0}
}

func (m *IdentifiedObject) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IdentifiedObject.Unmarshal(m, b)
}
func (m *IdentifiedObject) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IdentifiedObject.Marshal(b, m, deterministic)
}
func (m *IdentifiedObject) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IdentifiedObject.Merge(m, src)
}
func (m *IdentifiedObject) XXX_Size() int {
	return xxx_messageInfo_IdentifiedObject.Size(m)
}
func (m *IdentifiedObject) XXX_DiscardUnknown() {
	xxx_messageInfo_IdentifiedObject.DiscardUnknown(m)
}

var xxx_messageInfo_IdentifiedObject proto.InternalMessageInfo

func (m *IdentifiedObject) GetDescription() *wrappers.StringValue {
	if m != nil {
		return m.Description
	}
	return nil
}

func (m *IdentifiedObject) GetMRID() *wrappers.StringValue {
	if m != nil {
		return m.MRID
	}
	return nil
}

func (m *IdentifiedObject) GetName() *wrappers.StringValue {
	if m != nil {
		return m.Name
	}
	return nil
}

// An electrical connection point (AC or DC) to a piece of conducting equipment. Terminals are
// connected at physical connection points called connectivity nodes.
type ACDCTerminal struct {
	// UML inherited base object
	IdentifiedObject *IdentifiedObject `protobuf:"bytes,1,opt,name=identifiedObject,proto3" json:"identifiedObject,omitempty"`
	// The connected status is related to a bus-branch model and the topological node to terminal
	// relation.  True implies the terminal is connected to the related topological node and false implies
	// it is not.  In a bus-branch model, the connected status is used to tell if equipment is disconnected
	// without having to change the connectivity described by the topological node to terminal relation. A
	// valid case is that conducting equipment can be connected in one end and open in the other. In
	// particular for an AC line segment, where the reactive line charging can be significant, this is a
	// relevant case.
	Connected *wrappers.BoolValue `protobuf:"bytes,2,opt,name=connected,proto3" json:"connected,omitempty"`
	// The orientation of the terminal connections for a multiple terminal conducting equipment.  The
	// sequence numbering starts with 1 and additional terminals should follow in increasing order.   The
	// first terminal is the "starting point" for a two terminal branch.
	SequenceNumber       *wrappers.Int32Value `protobuf:"bytes,3,opt,name=sequenceNumber,proto3" json:"sequenceNumber,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *ACDCTerminal) Reset()         { *m = ACDCTerminal{} }
func (m *ACDCTerminal) String() string { return proto.CompactTextString(m) }
func (*ACDCTerminal) ProtoMessage()    {}
func (*ACDCTerminal) Descriptor() ([]byte, []int) {
	return fileDescriptor_018fa6cbfd386c3e, []int{1}
}

func (m *ACDCTerminal) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ACDCTerminal.Unmarshal(m, b)
}
func (m *ACDCTerminal) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ACDCTerminal.Marshal(b, m, deterministic)
}
func (m *ACDCTerminal) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ACDCTerminal.Merge(m, src)
}
func (m *ACDCTerminal) XXX_Size() int {
	return xxx_messageInfo_ACDCTerminal.Size(m)
}
func (m *ACDCTerminal) XXX_DiscardUnknown() {
	xxx_messageInfo_ACDCTerminal.DiscardUnknown(m)
}

var xxx_messageInfo_ACDCTerminal proto.InternalMessageInfo

func (m *ACDCTerminal) GetIdentifiedObject() *IdentifiedObject {
	if m != nil {
		return m.IdentifiedObject
	}
	return nil
}

func (m *ACDCTerminal) GetConnected() *wrappers.BoolValue {
	if m != nil {
		return m.Connected
	}
	return nil
}

func (m *ACDCTerminal) GetSequenceNumber() *wrappers.Int32Value {
	if m != nil {
		return m.SequenceNumber
	}
	return nil
}

type Optional_UnitSymbolKind struct {
	Value                UnitSymbolKind `protobuf:"varint,1,opt,name=value,proto3,enum=commonmodule.UnitSymbolKind" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *Optional_UnitSymbolKind) Reset()         { *m = Optional_UnitSymbolKind{} }
func (m *Optional_UnitSymbolKind) String() string { return proto.CompactTextString(m) }
func (*Optional_UnitSymbolKind) ProtoMessage()    {}
func (*Optional_UnitSymbolKind) Descriptor() ([]byte, []int) {
	return fileDescriptor_018fa6cbfd386c3e, []int{2}
}

func (m *Optional_UnitSymbolKind) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Optional_UnitSymbolKind.Unmarshal(m, b)
}
func (m *Optional_UnitSymbolKind) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Optional_UnitSymbolKind.Marshal(b, m, deterministic)
}
func (m *Optional_UnitSymbolKind) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Optional_UnitSymbolKind.Merge(m, src)
}
func (m *Optional_UnitSymbolKind) XXX_Size() int {
	return xxx_messageInfo_Optional_UnitSymbolKind.Size(m)
}
func (m *Optional_UnitSymbolKind) XXX_DiscardUnknown() {
	xxx_messageInfo_Optional_UnitSymbolKind.DiscardUnknown(m)
}

var xxx_messageInfo_Optional_UnitSymbolKind proto.InternalMessageInfo

func (m *Optional_UnitSymbolKind) GetValue() UnitSymbolKind {
	if m != nil {
		return m.Value
	}
	return UnitSymbolKind_UnitSymbolKind_none
}

type Optional_UnitMultiplierKind struct {
	Value                UnitMultiplierKind `protobuf:"varint,1,opt,name=value,proto3,enum=commonmodule.UnitMultiplierKind" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *Optional_UnitMultiplierKind) Reset()         { *m = Optional_UnitMultiplierKind{} }
func (m *Optional_UnitMultiplierKind) String() string { return proto.CompactTextString(m) }
func (*Optional_UnitMultiplierKind) ProtoMessage()    {}
func (*Optional_UnitMultiplierKind) Descriptor() ([]byte, []int) {
	return fileDescriptor_018fa6cbfd386c3e, []int{3}
}

func (m *Optional_UnitMultiplierKind) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Optional_UnitMultiplierKind.Unmarshal(m, b)
}
func (m *Optional_UnitMultiplierKind) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Optional_UnitMultiplierKind.Marshal(b, m, deterministic)
}
func (m *Optional_UnitMultiplierKind) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Optional_UnitMultiplierKind.Merge(m, src)
}
func (m *Optional_UnitMultiplierKind) XXX_Size() int {
	return xxx_messageInfo_Optional_UnitMultiplierKind.Size(m)
}
func (m *Optional_UnitMultiplierKind) XXX_DiscardUnknown() {
	xxx_messageInfo_Optional_UnitMultiplierKind.DiscardUnknown(m)
}

var xxx_messageInfo_Optional_UnitMultiplierKind proto.InternalMessageInfo

func (m *Optional_UnitMultiplierKind) GetValue() UnitMultiplierKind {
	if m != nil {
		return m.Value
	}
	return UnitMultiplierKind_UnitMultiplierKind_none
}

// MISSING DOCUMENTATION!!!
type ActivePower struct {
	// MISSING DOCUMENTATION!!!
	Multiplier *Optional_UnitMultiplierKind `protobuf:"bytes,1,opt,name=multiplier,proto3" json:"multiplier,omitempty"`
	// MISSING DOCUMENTATION!!!
	Unit *Optional_UnitSymbolKind `protobuf:"bytes,2,opt,name=unit,proto3" json:"unit,omitempty"`
	// MISSING DOCUMENTATION!!!
	Value                *wrappers.FloatValue `protobuf:"bytes,3,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *ActivePower) Reset()         { *m = ActivePower{} }
func (m *ActivePower) String() string { return proto.CompactTextString(m) }
func (*ActivePower) ProtoMessage()    {}
func (*ActivePower) Descriptor() ([]byte, []int) {
	return fileDescriptor_018fa6cbfd386c3e, []int{4}
}

func (m *ActivePower) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ActivePower.Unmarshal(m, b)
}
func (m *ActivePower) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ActivePower.Marshal(b, m, deterministic)
}
func (m *ActivePower) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ActivePower.Merge(m, src)
}
func (m *ActivePower) XXX_Size() int {
	return xxx_messageInfo_ActivePower.Size(m)
}
func (m *ActivePower) XXX_DiscardUnknown() {
	xxx_messageInfo_ActivePower.DiscardUnknown(m)
}

var xxx_messageInfo_ActivePower proto.InternalMessageInfo

func (m *ActivePower) GetMultiplier() *Optional_UnitMultiplierKind {
	if m != nil {
		return m.Multiplier
	}
	return nil
}

func (m *ActivePower) GetUnit() *Optional_UnitSymbolKind {
	if m != nil {
		return m.Unit
	}
	return nil
}

func (m *ActivePower) GetValue() *wrappers.FloatValue {
	if m != nil {
		return m.Value
	}
	return nil
}

type Optional_PhaseCodeKind struct {
	Value                PhaseCodeKind `protobuf:"varint,1,opt,name=value,proto3,enum=commonmodule.PhaseCodeKind" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *Optional_PhaseCodeKind) Reset()         { *m = Optional_PhaseCodeKind{} }
func (m *Optional_PhaseCodeKind) String() string { return proto.CompactTextString(m) }
func (*Optional_PhaseCodeKind) ProtoMessage()    {}
func (*Optional_PhaseCodeKind) Descriptor() ([]byte, []int) {
	return fileDescriptor_018fa6cbfd386c3e, []int{5}
}

func (m *Optional_PhaseCodeKind) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Optional_PhaseCodeKind.Unmarshal(m, b)
}
func (m *Optional_PhaseCodeKind) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Optional_PhaseCodeKind.Marshal(b, m, deterministic)
}
func (m *Optional_PhaseCodeKind) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Optional_PhaseCodeKind.Merge(m, src)
}
func (m *Optional_PhaseCodeKind) XXX_Size() int {
	return xxx_messageInfo_Optional_PhaseCodeKind.Size(m)
}
func (m *Optional_PhaseCodeKind) XXX_DiscardUnknown() {
	xxx_messageInfo_Optional_PhaseCodeKind.DiscardUnknown(m)
}

var xxx_messageInfo_Optional_PhaseCodeKind proto.InternalMessageInfo

func (m *Optional_PhaseCodeKind) GetValue() PhaseCodeKind {
	if m != nil {
		return m.Value
	}
	return PhaseCodeKind_PhaseCodeKind_none
}

// Analogue value (AnalogueValue)
type AnalogueValue struct {
	// Floating point representation of the measured value. The formula to convert between 'f' and the
	// process value (pVal) shall be: <i>pVal</i>='f'*10exp('Unit.multiplier') in ['Unit.SIUnit'].
	F *wrappers.FloatValue `protobuf:"bytes,1,opt,name=f,proto3" json:"f,omitempty"`
	// Integer representation of the measured value. The formula to convert between 'i' and the process
	// value (pVal) shall be: <i>pVal</i>=(('i'*'ScaledValueConfig.scaleFactor')+'ScaledValueConfig.offset'
	//  in ['Unit.SIUnit'].
	I                    *wrappers.Int32Value `protobuf:"bytes,2,opt,name=i,proto3" json:"i,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *AnalogueValue) Reset()         { *m = AnalogueValue{} }
func (m *AnalogueValue) String() string { return proto.CompactTextString(m) }
func (*AnalogueValue) ProtoMessage()    {}
func (*AnalogueValue) Descriptor() ([]byte, []int) {
	return fileDescriptor_018fa6cbfd386c3e, []int{6}
}

func (m *AnalogueValue) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AnalogueValue.Unmarshal(m, b)
}
func (m *AnalogueValue) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AnalogueValue.Marshal(b, m, deterministic)
}
func (m *AnalogueValue) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AnalogueValue.Merge(m, src)
}
func (m *AnalogueValue) XXX_Size() int {
	return xxx_messageInfo_AnalogueValue.Size(m)
}
func (m *AnalogueValue) XXX_DiscardUnknown() {
	xxx_messageInfo_AnalogueValue.DiscardUnknown(m)
}

var xxx_messageInfo_AnalogueValue proto.InternalMessageInfo

func (m *AnalogueValue) GetF() *wrappers.FloatValue {
	if m != nil {
		return m.F
	}
	return nil
}

func (m *AnalogueValue) GetI() *wrappers.Int32Value {
	if m != nil {
		return m.I
	}
	return nil
}

type Optional_ValidityKind struct {
	Value                ValidityKind `protobuf:"varint,1,opt,name=value,proto3,enum=commonmodule.ValidityKind" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *Optional_ValidityKind) Reset()         { *m = Optional_ValidityKind{} }
func (m *Optional_ValidityKind) String() string { return proto.CompactTextString(m) }
func (*Optional_ValidityKind) ProtoMessage()    {}
func (*Optional_ValidityKind) Descriptor() ([]byte, []int) {
	return fileDescriptor_018fa6cbfd386c3e, []int{7}
}

func (m *Optional_ValidityKind) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Optional_ValidityKind.Unmarshal(m, b)
}
func (m *Optional_ValidityKind) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Optional_ValidityKind.Marshal(b, m, deterministic)
}
func (m *Optional_ValidityKind) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Optional_ValidityKind.Merge(m, src)
}
func (m *Optional_ValidityKind) XXX_Size() int {
	return xxx_messageInfo_Optional_ValidityKind.Size(m)
}
func (m *Optional_ValidityKind) XXX_DiscardUnknown() {
	xxx_messageInfo_Optional_ValidityKind.DiscardUnknown(m)
}

var xxx_messageInfo_Optional_ValidityKind proto.InternalMessageInfo

func (m *Optional_ValidityKind) GetValue() ValidityKind {
	if m != nil {
		return m.Value
	}
	return ValidityKind_ValidityKind_good
}

// Describes some reasons in case 'validity' is not 'good'.
type DetailQual struct {
	// (default=false) If true, the value may not be a correct value due to a reference being out of
	// calibration. The server shall decide if validity shall be set to invalid or questionable (used for
	// measurand information and binary counter information only).
	BadReference bool `protobuf:"varint,1,opt,name=badReference,proto3" json:"badReference,omitempty"`
	// (default=false) If true, a supervision function has detected an internal or external failure.
	Failure bool `protobuf:"varint,2,opt,name=failure,proto3" json:"failure,omitempty"`
	// (default=false) If true, the value does not meet the stated accuracy of the source. EXAMPLE The
	// measured value of power factor may be noisy (inaccurate) when the current is very small.
	Inaccurate bool `protobuf:"varint,3,opt,name=inaccurate,proto3" json:"inaccurate,omitempty"`
	// (default=false) If true, an evaluation function has detected an inconsistency.
	Inconsistent bool `protobuf:"varint,4,opt,name=inconsistent,proto3" json:"inconsistent,omitempty"`
	// (default=false) If true, an update is not made during a specific time interval. The value may be
	// an old value that may have changed in the meantime. This specific time interval may be defined by an
	// allowed-age attribute. NOTE "Fail silent" errors, where the equipment stops sending data, will cause
	// setting this flag to true. In this case, the last received information was correct.
	OldData bool `protobuf:"varint,5,opt,name=oldData,proto3" json:"oldData,omitempty"`
	// (default=false) To prevent overloading of event driven communication channels, it is desirable
	// to detect and suppress oscillating (fast changing) binary inputs. If a signal changes in a defined
	// time (tosc) twice in the same direction (from 0 to 1 or from 1 to 0), then it shall be defined as an
	// oscillation and this attribute shall be set to true. If a configured number of transient changes is
	// detected, they shall be suppressed. In this time, the 'Quality.validity' shall be set to
	// 'questionable'. If the signal is still in the oscillating state after the defined number of changes,
	// the value shall be left in the state it was in when this flag was set. In this case, the 'Quality
	// validity' shall be changed from 'questionable' to 'invalid' and kept so as long as the signal is
	// oscillating.  If the configuration is such that all transient changes should be suppressed, the
	// 'Quality.validity' shall be set immediately to 'invalid' and this flag to true (used for status
	// information only).
	Oscillatory bool `protobuf:"varint,6,opt,name=oscillatory,proto3" json:"oscillatory,omitempty"`
	// (default=false) If true, the attribute to which the quality has been associated is beyond a
	// predefined range of values. The server shall decide if validity shall be set to invalid or
	// questionable (used for measurand information only). EXAMPLE A measured value may exceed a predefined
	// range, however the selected data type can still represent the value, for example the data type is a
	// 16-bit unsigned integer, the predefined range is 0 to 40 000, if the value is between 40 001 and 65
	// 535 it is considered to be out of range.
	OutOfRange bool `protobuf:"varint,7,opt,name=outOfRange,proto3" json:"outOfRange,omitempty"`
	// (default=false) If true, the value of the attribute to which the quality has been associated is
	// beyond the capability of being represented properly (used for measurand information only). EXAMPLE A
	// measured value may exceed the range that may be represented by the selected data type, for example
	// the data type is a 16-bit unsigned integer and the value exceeds 65 535.
	Overflow             bool     `protobuf:"varint,8,opt,name=overflow,proto3" json:"overflow,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DetailQual) Reset()         { *m = DetailQual{} }
func (m *DetailQual) String() string { return proto.CompactTextString(m) }
func (*DetailQual) ProtoMessage()    {}
func (*DetailQual) Descriptor() ([]byte, []int) {
	return fileDescriptor_018fa6cbfd386c3e, []int{8}
}

func (m *DetailQual) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DetailQual.Unmarshal(m, b)
}
func (m *DetailQual) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DetailQual.Marshal(b, m, deterministic)
}
func (m *DetailQual) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DetailQual.Merge(m, src)
}
func (m *DetailQual) XXX_Size() int {
	return xxx_messageInfo_DetailQual.Size(m)
}
func (m *DetailQual) XXX_DiscardUnknown() {
	xxx_messageInfo_DetailQual.DiscardUnknown(m)
}

var xxx_messageInfo_DetailQual proto.InternalMessageInfo

func (m *DetailQual) GetBadReference() bool {
	if m != nil {
		return m.BadReference
	}
	return false
}

func (m *DetailQual) GetFailure() bool {
	if m != nil {
		return m.Failure
	}
	return false
}

func (m *DetailQual) GetInaccurate() bool {
	if m != nil {
		return m.Inaccurate
	}
	return false
}

func (m *DetailQual) GetInconsistent() bool {
	if m != nil {
		return m.Inconsistent
	}
	return false
}

func (m *DetailQual) GetOldData() bool {
	if m != nil {
		return m.OldData
	}
	return false
}

func (m *DetailQual) GetOscillatory() bool {
	if m != nil {
		return m.Oscillatory
	}
	return false
}

func (m *DetailQual) GetOutOfRange() bool {
	if m != nil {
		return m.OutOfRange
	}
	return false
}

func (m *DetailQual) GetOverflow() bool {
	if m != nil {
		return m.Overflow
	}
	return false
}

type Optional_SourceKind struct {
	Value                SourceKind `protobuf:"varint,1,opt,name=value,proto3,enum=commonmodule.SourceKind" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *Optional_SourceKind) Reset()         { *m = Optional_SourceKind{} }
func (m *Optional_SourceKind) String() string { return proto.CompactTextString(m) }
func (*Optional_SourceKind) ProtoMessage()    {}
func (*Optional_SourceKind) Descriptor() ([]byte, []int) {
	return fileDescriptor_018fa6cbfd386c3e, []int{9}
}

func (m *Optional_SourceKind) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Optional_SourceKind.Unmarshal(m, b)
}
func (m *Optional_SourceKind) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Optional_SourceKind.Marshal(b, m, deterministic)
}
func (m *Optional_SourceKind) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Optional_SourceKind.Merge(m, src)
}
func (m *Optional_SourceKind) XXX_Size() int {
	return xxx_messageInfo_Optional_SourceKind.Size(m)
}
func (m *Optional_SourceKind) XXX_DiscardUnknown() {
	xxx_messageInfo_Optional_SourceKind.DiscardUnknown(m)
}

var xxx_messageInfo_Optional_SourceKind proto.InternalMessageInfo

func (m *Optional_SourceKind) GetValue() SourceKind {
	if m != nil {
		return m.Value
	}
	return SourceKind_SourceKind_process
}

// Quality contains data that describe the quality of the data from the server. Quality of the data
// is also related to the mode of a logical node. Further details can be found in IEC 61850-7-4. The
// different quality attributes are <i>not</i> independent.The default value shall be applied if the
// functionality of the related attribute is not supported. The mapping may specify to exclude the
// attribute from the message if it is not supported or if the default value applies.
type Quality struct {
	// Describes some reasons in case 'validity' is not 'good'.
	DetailQual *DetailQual `protobuf:"bytes,1,opt,name=detailQual,proto3" json:"detailQual,omitempty"`
	// (default=false) If true, further update of the value has been blocked by an operator. The value
	// shall be the information that was acquired before blocking. If this flag is set, then the
	// 'detailQual.oldData' shall also be set. The operator shall use the data attribute 'CDC.blkEna' to
	// block the update of the value. NOTE Both an operator as well as an automatic function may freeze
	// communication updating as well as input updating. In both cases, 'detailQual.oldData' will be set.
	// If the blocking is done by an operator, then this flag is set additionally, and an operator activity
	// is required to clear the condition.
	OperatorBlocked bool `protobuf:"varint,2,opt,name=operatorBlocked,proto3" json:"operatorBlocked,omitempty"`
	// (default=process) Defines the source of a value. NOTE 1 Substitution may be done locally or via
	// the communication services. In the second case, specific attributes with a FC=SV are used. NOTE 2
	// There are various means to clear a substitution. As an example, a substitution that was done
	// following an invalid condition may be cleared automatically if the invalid condition is cleared.
	// However, this is a local issue and therefore not within the scope of this standard.
	Source SourceKind `protobuf:"varint,3,opt,name=source,proto3,enum=commonmodule.SourceKind" json:"source,omitempty"`
	// (default=false) If true, the value is a test value. The processing of the test quality in the
	// client shall be as described in IEC 61850-7-4. This bit shall be completely independent from the
	// other bits within the quality descriptor.
	Test bool `protobuf:"varint,4,opt,name=test,proto3" json:"test,omitempty"`
	// Validity of the value, as condensed information for the client. In case this value is not
	// 'good', some reasons may be found in the 'detailQual'.
	Validity             ValidityKind `protobuf:"varint,5,opt,name=validity,proto3,enum=commonmodule.ValidityKind" json:"validity,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *Quality) Reset()         { *m = Quality{} }
func (m *Quality) String() string { return proto.CompactTextString(m) }
func (*Quality) ProtoMessage()    {}
func (*Quality) Descriptor() ([]byte, []int) {
	return fileDescriptor_018fa6cbfd386c3e, []int{10}
}

func (m *Quality) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Quality.Unmarshal(m, b)
}
func (m *Quality) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Quality.Marshal(b, m, deterministic)
}
func (m *Quality) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Quality.Merge(m, src)
}
func (m *Quality) XXX_Size() int {
	return xxx_messageInfo_Quality.Size(m)
}
func (m *Quality) XXX_DiscardUnknown() {
	xxx_messageInfo_Quality.DiscardUnknown(m)
}

var xxx_messageInfo_Quality proto.InternalMessageInfo

func (m *Quality) GetDetailQual() *DetailQual {
	if m != nil {
		return m.DetailQual
	}
	return nil
}

func (m *Quality) GetOperatorBlocked() bool {
	if m != nil {
		return m.OperatorBlocked
	}
	return false
}

func (m *Quality) GetSource() SourceKind {
	if m != nil {
		return m.Source
	}
	return SourceKind_SourceKind_process
}

func (m *Quality) GetTest() bool {
	if m != nil {
		return m.Test
	}
	return false
}

func (m *Quality) GetValidity() ValidityKind {
	if m != nil {
		return m.Validity
	}
	return ValidityKind_ValidityKind_good
}

type Optional_TimeAccuracyKind struct {
	Value                TimeAccuracyKind `protobuf:"varint,1,opt,name=value,proto3,enum=commonmodule.TimeAccuracyKind" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *Optional_TimeAccuracyKind) Reset()         { *m = Optional_TimeAccuracyKind{} }
func (m *Optional_TimeAccuracyKind) String() string { return proto.CompactTextString(m) }
func (*Optional_TimeAccuracyKind) ProtoMessage()    {}
func (*Optional_TimeAccuracyKind) Descriptor() ([]byte, []int) {
	return fileDescriptor_018fa6cbfd386c3e, []int{11}
}

func (m *Optional_TimeAccuracyKind) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Optional_TimeAccuracyKind.Unmarshal(m, b)
}
func (m *Optional_TimeAccuracyKind) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Optional_TimeAccuracyKind.Marshal(b, m, deterministic)
}
func (m *Optional_TimeAccuracyKind) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Optional_TimeAccuracyKind.Merge(m, src)
}
func (m *Optional_TimeAccuracyKind) XXX_Size() int {
	return xxx_messageInfo_Optional_TimeAccuracyKind.Size(m)
}
func (m *Optional_TimeAccuracyKind) XXX_DiscardUnknown() {
	xxx_messageInfo_Optional_TimeAccuracyKind.DiscardUnknown(m)
}

var xxx_messageInfo_Optional_TimeAccuracyKind proto.InternalMessageInfo

func (m *Optional_TimeAccuracyKind) GetValue() TimeAccuracyKind {
	if m != nil {
		return m.Value
	}
	return TimeAccuracyKind_TimeAccuracyKind_UNDEFINED
}

// Information about the quality of the time source of the sending IED.
type TimeQuality struct {
	// If true, the time source of the sending device is unreliable and the value of the time stamp
	// shall be ignored.
	ClockFailure bool `protobuf:"varint,1,opt,name=clockFailure,proto3" json:"clockFailure,omitempty"`
	// If true, the time source of the sending device is not synchronised with the external UTC time.
	ClockNotSynchronized bool `protobuf:"varint,2,opt,name=clockNotSynchronized,proto3" json:"clockNotSynchronized,omitempty"`
	// If true, the value in 'P_Timestamp.SecondSinceEpoch' contains all leap seconds occurred.
	// Otherwise, it does not take into account the leap seconds that occurred before the initialization of
	// the time source of the device. Instead, the seconds since start of the epoch are calculated from the
	// current date assuming a constant day length of 86 400 seconds. Note: If a UTC time master clock is
	// used and accessible, this value should always be true.
	LeapSecondsKnown bool `protobuf:"varint,3,opt,name=leapSecondsKnown,proto3" json:"leapSecondsKnown,omitempty"`
	// Information about the quality of the time source of the sending IED.
	TimeAccuracy         TimeAccuracyKind `protobuf:"varint,4,opt,name=timeAccuracy,proto3,enum=commonmodule.TimeAccuracyKind" json:"timeAccuracy,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *TimeQuality) Reset()         { *m = TimeQuality{} }
func (m *TimeQuality) String() string { return proto.CompactTextString(m) }
func (*TimeQuality) ProtoMessage()    {}
func (*TimeQuality) Descriptor() ([]byte, []int) {
	return fileDescriptor_018fa6cbfd386c3e, []int{12}
}

func (m *TimeQuality) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TimeQuality.Unmarshal(m, b)
}
func (m *TimeQuality) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TimeQuality.Marshal(b, m, deterministic)
}
func (m *TimeQuality) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TimeQuality.Merge(m, src)
}
func (m *TimeQuality) XXX_Size() int {
	return xxx_messageInfo_TimeQuality.Size(m)
}
func (m *TimeQuality) XXX_DiscardUnknown() {
	xxx_messageInfo_TimeQuality.DiscardUnknown(m)
}

var xxx_messageInfo_TimeQuality proto.InternalMessageInfo

func (m *TimeQuality) GetClockFailure() bool {
	if m != nil {
		return m.ClockFailure
	}
	return false
}

func (m *TimeQuality) GetClockNotSynchronized() bool {
	if m != nil {
		return m.ClockNotSynchronized
	}
	return false
}

func (m *TimeQuality) GetLeapSecondsKnown() bool {
	if m != nil {
		return m.LeapSecondsKnown
	}
	return false
}

func (m *TimeQuality) GetTimeAccuracy() TimeAccuracyKind {
	if m != nil {
		return m.TimeAccuracy
	}
	return TimeAccuracyKind_TimeAccuracyKind_UNDEFINED
}

// UTC time with the epoch of midnight (00:00:00) of 1970-01-01. The presentation is defined in the
// SCSMs.The NULL time stamp has all fields set to 0 (zero).The relation between a timestamp value, the
// synchronization of an internal time with an external time source (for example, UTC time), and other
// information related to time model are available as requirements in Clause 21.
type Timestamp struct {
	// Fractional of the current second when the value of time stamp has been determined. It shall be
	// calculated as (SUM from i=0 to 31 of bi*2**-(i+1)).
	Fraction uint32 `protobuf:"varint,1,opt,name=fraction,proto3" json:"fraction,omitempty"`
	// Second since epoch (1970-01-01T00:00:00Z)
	Seconds uint64 `protobuf:"varint,2,opt,name=seconds,proto3" json:"seconds,omitempty"`
	// IEC61850 time quality
	Tq                   *TimeQuality `protobuf:"bytes,3,opt,name=tq,proto3" json:"tq,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *Timestamp) Reset()         { *m = Timestamp{} }
func (m *Timestamp) String() string { return proto.CompactTextString(m) }
func (*Timestamp) ProtoMessage()    {}
func (*Timestamp) Descriptor() ([]byte, []int) {
	return fileDescriptor_018fa6cbfd386c3e, []int{13}
}

func (m *Timestamp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Timestamp.Unmarshal(m, b)
}
func (m *Timestamp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Timestamp.Marshal(b, m, deterministic)
}
func (m *Timestamp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Timestamp.Merge(m, src)
}
func (m *Timestamp) XXX_Size() int {
	return xxx_messageInfo_Timestamp.Size(m)
}
func (m *Timestamp) XXX_DiscardUnknown() {
	xxx_messageInfo_Timestamp.DiscardUnknown(m)
}

var xxx_messageInfo_Timestamp proto.InternalMessageInfo

func (m *Timestamp) GetFraction() uint32 {
	if m != nil {
		return m.Fraction
	}
	return 0
}

func (m *Timestamp) GetSeconds() uint64 {
	if m != nil {
		return m.Seconds
	}
	return 0
}

func (m *Timestamp) GetTq() *TimeQuality {
	if m != nil {
		return m.Tq
	}
	return nil
}

// Unit definition (Unit)
type Unit struct {
	// (default='') Unit multiplier.
	Multiplier *Optional_UnitMultiplierKind `protobuf:"bytes,1,opt,name=multiplier,proto3" json:"multiplier,omitempty"`
	// SI unit of measure.
	SIUnit               UnitSymbolKind `protobuf:"varint,2,opt,name=SIUnit,proto3,enum=commonmodule.UnitSymbolKind" json:"SIUnit,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *Unit) Reset()         { *m = Unit{} }
func (m *Unit) String() string { return proto.CompactTextString(m) }
func (*Unit) ProtoMessage()    {}
func (*Unit) Descriptor() ([]byte, []int) {
	return fileDescriptor_018fa6cbfd386c3e, []int{14}
}

func (m *Unit) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Unit.Unmarshal(m, b)
}
func (m *Unit) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Unit.Marshal(b, m, deterministic)
}
func (m *Unit) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Unit.Merge(m, src)
}
func (m *Unit) XXX_Size() int {
	return xxx_messageInfo_Unit.Size(m)
}
func (m *Unit) XXX_DiscardUnknown() {
	xxx_messageInfo_Unit.DiscardUnknown(m)
}

var xxx_messageInfo_Unit proto.InternalMessageInfo

func (m *Unit) GetMultiplier() *Optional_UnitMultiplierKind {
	if m != nil {
		return m.Multiplier
	}
	return nil
}

func (m *Unit) GetSIUnit() UnitSymbolKind {
	if m != nil {
		return m.SIUnit
	}
	return UnitSymbolKind_UnitSymbolKind_none
}

// Measured value (MV)
type MV struct {
	// Value of the magnitude based on a deadband calculation from the instantaneous value 'instMag'.
	// The value of 'mag' shall be updated to the current instantaneous value 'instMag' when the value has
	// changed according to the configuration parameter 'db'. If 'db'=0, 'mag'='instMag'.NOTE 1 This value
	// is typically used to create reports for analogue values. Such a report sent "by exception" is not
	// comparable to the transfer of sampled measured values as supported by the CDC SAV.NOTE 2 This 'mag'
	// is not the same as 'mag' of the constructed attribute class 'Vector'.
	Mag *AnalogueValue `protobuf:"bytes,1,opt,name=mag,proto3" json:"mag,omitempty"`
	// Quality of the values in 'instMag', 'mag', 'range'.
	Q *Quality `protobuf:"bytes,2,opt,name=q,proto3" json:"q,omitempty"`
	// Timestamp of the last refresh of the value in 'mag' or of the last change of the value in any of
	// 'range' or 'q'.
	T *Timestamp `protobuf:"bytes,3,opt,name=t,proto3" json:"t,omitempty"`
	// Unit for: 'instMag', 'mag', 'subMag', 'rangeC'.
	Units                *Unit    `protobuf:"bytes,4,opt,name=units,proto3" json:"units,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MV) Reset()         { *m = MV{} }
func (m *MV) String() string { return proto.CompactTextString(m) }
func (*MV) ProtoMessage()    {}
func (*MV) Descriptor() ([]byte, []int) {
	return fileDescriptor_018fa6cbfd386c3e, []int{15}
}

func (m *MV) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MV.Unmarshal(m, b)
}
func (m *MV) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MV.Marshal(b, m, deterministic)
}
func (m *MV) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MV.Merge(m, src)
}
func (m *MV) XXX_Size() int {
	return xxx_messageInfo_MV.Size(m)
}
func (m *MV) XXX_DiscardUnknown() {
	xxx_messageInfo_MV.DiscardUnknown(m)
}

var xxx_messageInfo_MV proto.InternalMessageInfo

func (m *MV) GetMag() *AnalogueValue {
	if m != nil {
		return m.Mag
	}
	return nil
}

func (m *MV) GetQ() *Quality {
	if m != nil {
		return m.Q
	}
	return nil
}

func (m *MV) GetT() *Timestamp {
	if m != nil {
		return m.T
	}
	return nil
}

func (m *MV) GetUnits() *Unit {
	if m != nil {
		return m.Units
	}
	return nil
}

// IEC61850 logical node.
type LogicalNode struct {
	// UML inherited base object
	IdentifiedObject     *IdentifiedObject `protobuf:"bytes,1,opt,name=identifiedObject,proto3" json:"identifiedObject,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *LogicalNode) Reset()         { *m = LogicalNode{} }
func (m *LogicalNode) String() string { return proto.CompactTextString(m) }
func (*LogicalNode) ProtoMessage()    {}
func (*LogicalNode) Descriptor() ([]byte, []int) {
	return fileDescriptor_018fa6cbfd386c3e, []int{16}
}

func (m *LogicalNode) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LogicalNode.Unmarshal(m, b)
}
func (m *LogicalNode) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LogicalNode.Marshal(b, m, deterministic)
}
func (m *LogicalNode) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LogicalNode.Merge(m, src)
}
func (m *LogicalNode) XXX_Size() int {
	return xxx_messageInfo_LogicalNode.Size(m)
}
func (m *LogicalNode) XXX_DiscardUnknown() {
	xxx_messageInfo_LogicalNode.DiscardUnknown(m)
}

var xxx_messageInfo_LogicalNode proto.InternalMessageInfo

func (m *LogicalNode) GetIdentifiedObject() *IdentifiedObject {
	if m != nil {
		return m.IdentifiedObject
	}
	return nil
}

// LN: Generic process I/O   Name: GGIO
type AnalogStatusGGIO struct {
	// UML inherited base object
	LogicalNode *LogicalNode `protobuf:"bytes,1,opt,name=logicalNode,proto3" json:"logicalNode,omitempty"`
	// Generic analogue input <i>n</i>.
	AnIn *MV `protobuf:"bytes,2,opt,name=AnIn,proto3" json:"AnIn,omitempty"`
	// Phase code
	Phase                *Optional_PhaseCodeKind `protobuf:"bytes,3,opt,name=Phase,proto3" json:"Phase,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *AnalogStatusGGIO) Reset()         { *m = AnalogStatusGGIO{} }
func (m *AnalogStatusGGIO) String() string { return proto.CompactTextString(m) }
func (*AnalogStatusGGIO) ProtoMessage()    {}
func (*AnalogStatusGGIO) Descriptor() ([]byte, []int) {
	return fileDescriptor_018fa6cbfd386c3e, []int{17}
}

func (m *AnalogStatusGGIO) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AnalogStatusGGIO.Unmarshal(m, b)
}
func (m *AnalogStatusGGIO) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AnalogStatusGGIO.Marshal(b, m, deterministic)
}
func (m *AnalogStatusGGIO) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AnalogStatusGGIO.Merge(m, src)
}
func (m *AnalogStatusGGIO) XXX_Size() int {
	return xxx_messageInfo_AnalogStatusGGIO.Size(m)
}
func (m *AnalogStatusGGIO) XXX_DiscardUnknown() {
	xxx_messageInfo_AnalogStatusGGIO.DiscardUnknown(m)
}

var xxx_messageInfo_AnalogStatusGGIO proto.InternalMessageInfo

func (m *AnalogStatusGGIO) GetLogicalNode() *LogicalNode {
	if m != nil {
		return m.LogicalNode
	}
	return nil
}

func (m *AnalogStatusGGIO) GetAnIn() *MV {
	if m != nil {
		return m.AnIn
	}
	return nil
}

func (m *AnalogStatusGGIO) GetPhase() *Optional_PhaseCodeKind {
	if m != nil {
		return m.Phase
	}
	return nil
}

// Analogue value control (AnalogueValueCtl)
type AnalogueValueCtl struct {
	// Floating point representation of the measured value.  See 'AnalogueValue.f'.
	F *wrappers.FloatValue `protobuf:"bytes,1,opt,name=f,proto3" json:"f,omitempty"`
	// Integer representation of the measured value. See 'AnalogueValue.i'.
	I                    *wrappers.Int32Value `protobuf:"bytes,2,opt,name=i,proto3" json:"i,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *AnalogueValueCtl) Reset()         { *m = AnalogueValueCtl{} }
func (m *AnalogueValueCtl) String() string { return proto.CompactTextString(m) }
func (*AnalogueValueCtl) ProtoMessage()    {}
func (*AnalogueValueCtl) Descriptor() ([]byte, []int) {
	return fileDescriptor_018fa6cbfd386c3e, []int{18}
}

func (m *AnalogueValueCtl) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AnalogueValueCtl.Unmarshal(m, b)
}
func (m *AnalogueValueCtl) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AnalogueValueCtl.Marshal(b, m, deterministic)
}
func (m *AnalogueValueCtl) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AnalogueValueCtl.Merge(m, src)
}
func (m *AnalogueValueCtl) XXX_Size() int {
	return xxx_messageInfo_AnalogueValueCtl.Size(m)
}
func (m *AnalogueValueCtl) XXX_DiscardUnknown() {
	xxx_messageInfo_AnalogueValueCtl.DiscardUnknown(m)
}

var xxx_messageInfo_AnalogueValueCtl proto.InternalMessageInfo

func (m *AnalogueValueCtl) GetF() *wrappers.FloatValue {
	if m != nil {
		return m.F
	}
	return nil
}

func (m *AnalogueValueCtl) GetI() *wrappers.Int32Value {
	if m != nil {
		return m.I
	}
	return nil
}

// This is a root class similar to IdentifiedObject but without the mRID. The reason to separate
// the two classes is because the mRID may need to be defined as a separate key field for technology
// such as the DDS implementation.
type NamedObject struct {
	// MISSING DOCUMENTATION!!!
	Description *wrappers.StringValue `protobuf:"bytes,1,opt,name=description,proto3" json:"description,omitempty"`
	// The name is any free human readable and possibly non unique text naming the object.
	Name                 *wrappers.StringValue `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *NamedObject) Reset()         { *m = NamedObject{} }
func (m *NamedObject) String() string { return proto.CompactTextString(m) }
func (*NamedObject) ProtoMessage()    {}
func (*NamedObject) Descriptor() ([]byte, []int) {
	return fileDescriptor_018fa6cbfd386c3e, []int{19}
}

func (m *NamedObject) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NamedObject.Unmarshal(m, b)
}
func (m *NamedObject) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NamedObject.Marshal(b, m, deterministic)
}
func (m *NamedObject) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NamedObject.Merge(m, src)
}
func (m *NamedObject) XXX_Size() int {
	return xxx_messageInfo_NamedObject.Size(m)
}
func (m *NamedObject) XXX_DiscardUnknown() {
	xxx_messageInfo_NamedObject.DiscardUnknown(m)
}

var xxx_messageInfo_NamedObject proto.InternalMessageInfo

func (m *NamedObject) GetDescription() *wrappers.StringValue {
	if m != nil {
		return m.Description
	}
	return nil
}

func (m *NamedObject) GetName() *wrappers.StringValue {
	if m != nil {
		return m.Name
	}
	return nil
}

// The parts of a power system that are physical devices, electronic or mechanical.
type ApplicationSystem struct {
	// UML inherited base object
	NamedObject *NamedObject `protobuf:"bytes,1,opt,name=namedObject,proto3" json:"namedObject,omitempty"`
	// MISSING DOCUMENTATION!!!
	MRID                 string   `protobuf:"bytes,2,opt,name=mRID,proto3" json:"mRID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ApplicationSystem) Reset()         { *m = ApplicationSystem{} }
func (m *ApplicationSystem) String() string { return proto.CompactTextString(m) }
func (*ApplicationSystem) ProtoMessage()    {}
func (*ApplicationSystem) Descriptor() ([]byte, []int) {
	return fileDescriptor_018fa6cbfd386c3e, []int{20}
}

func (m *ApplicationSystem) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ApplicationSystem.Unmarshal(m, b)
}
func (m *ApplicationSystem) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ApplicationSystem.Marshal(b, m, deterministic)
}
func (m *ApplicationSystem) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ApplicationSystem.Merge(m, src)
}
func (m *ApplicationSystem) XXX_Size() int {
	return xxx_messageInfo_ApplicationSystem.Size(m)
}
func (m *ApplicationSystem) XXX_DiscardUnknown() {
	xxx_messageInfo_ApplicationSystem.DiscardUnknown(m)
}

var xxx_messageInfo_ApplicationSystem proto.InternalMessageInfo

func (m *ApplicationSystem) GetNamedObject() *NamedObject {
	if m != nil {
		return m.NamedObject
	}
	return nil
}

func (m *ApplicationSystem) GetMRID() string {
	if m != nil {
		return m.MRID
	}
	return ""
}

// Analogue setting (FC=SP) (ASG_SP)
type ASG struct {
	// The value of the analogue setting.
	SetMag *AnalogueValueCtl `protobuf:"bytes,1,opt,name=setMag,proto3" json:"setMag,omitempty"`
	// Unit for 'setMag', 'minVal', 'maxVal', 'stepSize'.
	Units                *Unit    `protobuf:"bytes,2,opt,name=units,proto3" json:"units,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ASG) Reset()         { *m = ASG{} }
func (m *ASG) String() string { return proto.CompactTextString(m) }
func (*ASG) ProtoMessage()    {}
func (*ASG) Descriptor() ([]byte, []int) {
	return fileDescriptor_018fa6cbfd386c3e, []int{21}
}

func (m *ASG) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ASG.Unmarshal(m, b)
}
func (m *ASG) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ASG.Marshal(b, m, deterministic)
}
func (m *ASG) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ASG.Merge(m, src)
}
func (m *ASG) XXX_Size() int {
	return xxx_messageInfo_ASG.Size(m)
}
func (m *ASG) XXX_DiscardUnknown() {
	xxx_messageInfo_ASG.DiscardUnknown(m)
}

var xxx_messageInfo_ASG proto.InternalMessageInfo

func (m *ASG) GetSetMag() *AnalogueValueCtl {
	if m != nil {
		return m.SetMag
	}
	return nil
}

func (m *ASG) GetUnits() *Unit {
	if m != nil {
		return m.Units
	}
	return nil
}

// Binary counter reading (BCR)
type BCR struct {
	// Binary counter status represented as an integer value; wraps to 0 at the maximum or minimum
	// value of INT64.
	ActVal int64 `protobuf:"varint,1,opt,name=actVal,proto3" json:"actVal,omitempty"`
	// Quality of the values in 'actVal', 'frVal'.
	Q *Quality `protobuf:"bytes,2,opt,name=q,proto3" json:"q,omitempty"`
	// Timestamp of the last change of value in 'actVal' or 'q'.
	T *Timestamp `protobuf:"bytes,3,opt,name=t,proto3" json:"t,omitempty"`
	// Unit for value in 'pulsQty'.
	Units                *Optional_UnitSymbolKind `protobuf:"bytes,4,opt,name=units,proto3" json:"units,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *BCR) Reset()         { *m = BCR{} }
func (m *BCR) String() string { return proto.CompactTextString(m) }
func (*BCR) ProtoMessage()    {}
func (*BCR) Descriptor() ([]byte, []int) {
	return fileDescriptor_018fa6cbfd386c3e, []int{22}
}

func (m *BCR) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BCR.Unmarshal(m, b)
}
func (m *BCR) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BCR.Marshal(b, m, deterministic)
}
func (m *BCR) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BCR.Merge(m, src)
}
func (m *BCR) XXX_Size() int {
	return xxx_messageInfo_BCR.Size(m)
}
func (m *BCR) XXX_DiscardUnknown() {
	xxx_messageInfo_BCR.DiscardUnknown(m)
}

var xxx_messageInfo_BCR proto.InternalMessageInfo

func (m *BCR) GetActVal() int64 {
	if m != nil {
		return m.ActVal
	}
	return 0
}

func (m *BCR) GetQ() *Quality {
	if m != nil {
		return m.Q
	}
	return nil
}

func (m *BCR) GetT() *Timestamp {
	if m != nil {
		return m.T
	}
	return nil
}

func (m *BCR) GetUnits() *Optional_UnitSymbolKind {
	if m != nil {
		return m.Units
	}
	return nil
}

// Specialized 61850 SPS class
type StatusSPS struct {
	// MISSING DOCUMENTATION!!!
	Q *Quality `protobuf:"bytes,1,opt,name=q,proto3" json:"q,omitempty"`
	// MISSING DOCUMENTATION!!!
	StVal bool `protobuf:"varint,2,opt,name=stVal,proto3" json:"stVal,omitempty"`
	// MISSING DOCUMENTATION!!!
	T                    *Timestamp `protobuf:"bytes,3,opt,name=t,proto3" json:"t,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *StatusSPS) Reset()         { *m = StatusSPS{} }
func (m *StatusSPS) String() string { return proto.CompactTextString(m) }
func (*StatusSPS) ProtoMessage()    {}
func (*StatusSPS) Descriptor() ([]byte, []int) {
	return fileDescriptor_018fa6cbfd386c3e, []int{23}
}

func (m *StatusSPS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StatusSPS.Unmarshal(m, b)
}
func (m *StatusSPS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StatusSPS.Marshal(b, m, deterministic)
}
func (m *StatusSPS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StatusSPS.Merge(m, src)
}
func (m *StatusSPS) XXX_Size() int {
	return xxx_messageInfo_StatusSPS.Size(m)
}
func (m *StatusSPS) XXX_DiscardUnknown() {
	xxx_messageInfo_StatusSPS.DiscardUnknown(m)
}

var xxx_messageInfo_StatusSPS proto.InternalMessageInfo

func (m *StatusSPS) GetQ() *Quality {
	if m != nil {
		return m.Q
	}
	return nil
}

func (m *StatusSPS) GetStVal() bool {
	if m != nil {
		return m.StVal
	}
	return false
}

func (m *StatusSPS) GetT() *Timestamp {
	if m != nil {
		return m.T
	}
	return nil
}

// LN: Generic process I/O   Name: GGIO
type BooleanStatusGGIO struct {
	// UML inherited base object
	LogicalNode *LogicalNode `protobuf:"bytes,1,opt,name=logicalNode,proto3" json:"logicalNode,omitempty"`
	// If true, indication <i>n</i> is present.
	Ind *StatusSPS `protobuf:"bytes,2,opt,name=Ind,proto3" json:"Ind,omitempty"`
	// Phase code
	Phase                *Optional_PhaseCodeKind `protobuf:"bytes,3,opt,name=Phase,proto3" json:"Phase,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *BooleanStatusGGIO) Reset()         { *m = BooleanStatusGGIO{} }
func (m *BooleanStatusGGIO) String() string { return proto.CompactTextString(m) }
func (*BooleanStatusGGIO) ProtoMessage()    {}
func (*BooleanStatusGGIO) Descriptor() ([]byte, []int) {
	return fileDescriptor_018fa6cbfd386c3e, []int{24}
}

func (m *BooleanStatusGGIO) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BooleanStatusGGIO.Unmarshal(m, b)
}
func (m *BooleanStatusGGIO) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BooleanStatusGGIO.Marshal(b, m, deterministic)
}
func (m *BooleanStatusGGIO) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BooleanStatusGGIO.Merge(m, src)
}
func (m *BooleanStatusGGIO) XXX_Size() int {
	return xxx_messageInfo_BooleanStatusGGIO.Size(m)
}
func (m *BooleanStatusGGIO) XXX_DiscardUnknown() {
	xxx_messageInfo_BooleanStatusGGIO.DiscardUnknown(m)
}

var xxx_messageInfo_BooleanStatusGGIO proto.InternalMessageInfo

func (m *BooleanStatusGGIO) GetLogicalNode() *LogicalNode {
	if m != nil {
		return m.LogicalNode
	}
	return nil
}

func (m *BooleanStatusGGIO) GetInd() *StatusSPS {
	if m != nil {
		return m.Ind
	}
	return nil
}

func (m *BooleanStatusGGIO) GetPhase() *Optional_PhaseCodeKind {
	if m != nil {
		return m.Phase
	}
	return nil
}

// IEC61850-7-2 Service parameter for conditions checking
type CheckConditions struct {
	// InterlockCheck is used for the device to be controlled to check if other devices are in proper
	// state for the control command.  One example is that 2 circuit breakers on a busbar need to be
	// interlocked so one is open and one is closed, but not both on.
	InterlockCheck *wrappers.BoolValue `protobuf:"bytes,1,opt,name=interlockCheck,proto3" json:"interlockCheck,omitempty"`
	// To check if a device is synchrous to the system.
	SynchroCheck         *wrappers.BoolValue `protobuf:"bytes,2,opt,name=synchroCheck,proto3" json:"synchroCheck,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *CheckConditions) Reset()         { *m = CheckConditions{} }
func (m *CheckConditions) String() string { return proto.CompactTextString(m) }
func (*CheckConditions) ProtoMessage()    {}
func (*CheckConditions) Descriptor() ([]byte, []int) {
	return fileDescriptor_018fa6cbfd386c3e, []int{25}
}

func (m *CheckConditions) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CheckConditions.Unmarshal(m, b)
}
func (m *CheckConditions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CheckConditions.Marshal(b, m, deterministic)
}
func (m *CheckConditions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CheckConditions.Merge(m, src)
}
func (m *CheckConditions) XXX_Size() int {
	return xxx_messageInfo_CheckConditions.Size(m)
}
func (m *CheckConditions) XXX_DiscardUnknown() {
	xxx_messageInfo_CheckConditions.DiscardUnknown(m)
}

var xxx_messageInfo_CheckConditions proto.InternalMessageInfo

func (m *CheckConditions) GetInterlockCheck() *wrappers.BoolValue {
	if m != nil {
		return m.InterlockCheck
	}
	return nil
}

func (m *CheckConditions) GetSynchroCheck() *wrappers.BoolValue {
	if m != nil {
		return m.SynchroCheck
	}
	return nil
}

// Vector definition (Vector)
type Vector struct {
	// (range=[-180...180]) Angle of the complex value (Unit.SIUnit='deg' and Unit.multiplier='');
	// angle reference is defined in the context where this type is used.
	Ang *AnalogueValue `protobuf:"bytes,1,opt,name=ang,proto3" json:"ang,omitempty"`
	// Magnitude of the complex value.
	Mag                  *AnalogueValue `protobuf:"bytes,2,opt,name=mag,proto3" json:"mag,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *Vector) Reset()         { *m = Vector{} }
func (m *Vector) String() string { return proto.CompactTextString(m) }
func (*Vector) ProtoMessage()    {}
func (*Vector) Descriptor() ([]byte, []int) {
	return fileDescriptor_018fa6cbfd386c3e, []int{26}
}

func (m *Vector) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Vector.Unmarshal(m, b)
}
func (m *Vector) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Vector.Marshal(b, m, deterministic)
}
func (m *Vector) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Vector.Merge(m, src)
}
func (m *Vector) XXX_Size() int {
	return xxx_messageInfo_Vector.Size(m)
}
func (m *Vector) XXX_DiscardUnknown() {
	xxx_messageInfo_Vector.DiscardUnknown(m)
}

var xxx_messageInfo_Vector proto.InternalMessageInfo

func (m *Vector) GetAng() *AnalogueValue {
	if m != nil {
		return m.Ang
	}
	return nil
}

func (m *Vector) GetMag() *AnalogueValue {
	if m != nil {
		return m.Mag
	}
	return nil
}

// Complex measured value (CMV)
type CMV struct {
	// Complex value based on a deadband calculation from the instantaneous value 'instCVal.mag'. The
	// deadband calculation is done both on 'instCVal.mag' (based on 'db') and on 'instCVal.ang' (based on
	// 'dbAng'), independently. See  'MV.mag'.
	CVal *Vector `protobuf:"bytes,1,opt,name=cVal,proto3" json:"cVal,omitempty"`
	// Quality of the values in 'instCVal', 'cVal', 'range', ‘rangeAng’.
	Q *Quality `protobuf:"bytes,2,opt,name=q,proto3" json:"q,omitempty"`
	// Timestamp of the last refresh of the value in 'cVal' or of the last change of the value in any
	// of 'range', 'rangeAng' or 'q'.
	T *Timestamp `protobuf:"bytes,3,opt,name=t,proto3" json:"t,omitempty"`
	// Units for: 'instCVal.mag', 'cVal.mag', 'subCVal.mag', 'rangeC'.
	Units                *Unit    `protobuf:"bytes,4,opt,name=units,proto3" json:"units,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CMV) Reset()         { *m = CMV{} }
func (m *CMV) String() string { return proto.CompactTextString(m) }
func (*CMV) ProtoMessage()    {}
func (*CMV) Descriptor() ([]byte, []int) {
	return fileDescriptor_018fa6cbfd386c3e, []int{27}
}

func (m *CMV) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMV.Unmarshal(m, b)
}
func (m *CMV) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMV.Marshal(b, m, deterministic)
}
func (m *CMV) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMV.Merge(m, src)
}
func (m *CMV) XXX_Size() int {
	return xxx_messageInfo_CMV.Size(m)
}
func (m *CMV) XXX_DiscardUnknown() {
	xxx_messageInfo_CMV.DiscardUnknown(m)
}

var xxx_messageInfo_CMV proto.InternalMessageInfo

func (m *CMV) GetCVal() *Vector {
	if m != nil {
		return m.CVal
	}
	return nil
}

func (m *CMV) GetQ() *Quality {
	if m != nil {
		return m.Q
	}
	return nil
}

func (m *CMV) GetT() *Timestamp {
	if m != nil {
		return m.T
	}
	return nil
}

func (m *CMV) GetUnits() *Unit {
	if m != nil {
		return m.Units
	}
	return nil
}

// Asset representation of a ConductingEquipment.
type ConductingEquipment struct {
	// UML inherited base object
	NamedObject *NamedObject `protobuf:"bytes,1,opt,name=namedObject,proto3" json:"namedObject,omitempty"`
	// MISSING DOCUMENTATION!!!
	MRID                 string   `protobuf:"bytes,2,opt,name=mRID,proto3" json:"mRID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ConductingEquipment) Reset()         { *m = ConductingEquipment{} }
func (m *ConductingEquipment) String() string { return proto.CompactTextString(m) }
func (*ConductingEquipment) ProtoMessage()    {}
func (*ConductingEquipment) Descriptor() ([]byte, []int) {
	return fileDescriptor_018fa6cbfd386c3e, []int{28}
}

func (m *ConductingEquipment) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConductingEquipment.Unmarshal(m, b)
}
func (m *ConductingEquipment) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConductingEquipment.Marshal(b, m, deterministic)
}
func (m *ConductingEquipment) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConductingEquipment.Merge(m, src)
}
func (m *ConductingEquipment) XXX_Size() int {
	return xxx_messageInfo_ConductingEquipment.Size(m)
}
func (m *ConductingEquipment) XXX_DiscardUnknown() {
	xxx_messageInfo_ConductingEquipment.DiscardUnknown(m)
}

var xxx_messageInfo_ConductingEquipment proto.InternalMessageInfo

func (m *ConductingEquipment) GetNamedObject() *NamedObject {
	if m != nil {
		return m.NamedObject
	}
	return nil
}

func (m *ConductingEquipment) GetMRID() string {
	if m != nil {
		return m.MRID
	}
	return ""
}

// An AC electrical connection point to a piece of conducting equipment. Terminals are connected at
// physical connection points called connectivity nodes.
type Terminal struct {
	// UML inherited base object
	ACDCTerminal *ACDCTerminal `protobuf:"bytes,1,opt,name=aCDCTerminal,proto3" json:"aCDCTerminal,omitempty"`
	// Represents the normal network phasing condition. If the attribute is missing three phases (ABC
	// or ABCN) shall be assumed.
	Phases               *Optional_PhaseCodeKind `protobuf:"bytes,2,opt,name=phases,proto3" json:"phases,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *Terminal) Reset()         { *m = Terminal{} }
func (m *Terminal) String() string { return proto.CompactTextString(m) }
func (*Terminal) ProtoMessage()    {}
func (*Terminal) Descriptor() ([]byte, []int) {
	return fileDescriptor_018fa6cbfd386c3e, []int{29}
}

func (m *Terminal) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Terminal.Unmarshal(m, b)
}
func (m *Terminal) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Terminal.Marshal(b, m, deterministic)
}
func (m *Terminal) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Terminal.Merge(m, src)
}
func (m *Terminal) XXX_Size() int {
	return xxx_messageInfo_Terminal.Size(m)
}
func (m *Terminal) XXX_DiscardUnknown() {
	xxx_messageInfo_Terminal.DiscardUnknown(m)
}

var xxx_messageInfo_Terminal proto.InternalMessageInfo

func (m *Terminal) GetACDCTerminal() *ACDCTerminal {
	if m != nil {
		return m.ACDCTerminal
	}
	return nil
}

func (m *Terminal) GetPhases() *Optional_PhaseCodeKind {
	if m != nil {
		return m.Phases
	}
	return nil
}

// Reading associated with an equipment such as a recloser.
type ConductingEquipmentTerminalReading struct {
	// MISSING DOCUMENTATION!!!
	Terminal             *Terminal `protobuf:"bytes,1,opt,name=terminal,proto3" json:"terminal,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *ConductingEquipmentTerminalReading) Reset()         { *m = ConductingEquipmentTerminalReading{} }
func (m *ConductingEquipmentTerminalReading) String() string { return proto.CompactTextString(m) }
func (*ConductingEquipmentTerminalReading) ProtoMessage()    {}
func (*ConductingEquipmentTerminalReading) Descriptor() ([]byte, []int) {
	return fileDescriptor_018fa6cbfd386c3e, []int{30}
}

func (m *ConductingEquipmentTerminalReading) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConductingEquipmentTerminalReading.Unmarshal(m, b)
}
func (m *ConductingEquipmentTerminalReading) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConductingEquipmentTerminalReading.Marshal(b, m, deterministic)
}
func (m *ConductingEquipmentTerminalReading) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConductingEquipmentTerminalReading.Merge(m, src)
}
func (m *ConductingEquipmentTerminalReading) XXX_Size() int {
	return xxx_messageInfo_ConductingEquipmentTerminalReading.Size(m)
}
func (m *ConductingEquipmentTerminalReading) XXX_DiscardUnknown() {
	xxx_messageInfo_ConductingEquipmentTerminalReading.DiscardUnknown(m)
}

var xxx_messageInfo_ConductingEquipmentTerminalReading proto.InternalMessageInfo

func (m *ConductingEquipmentTerminalReading) GetTerminal() *Terminal {
	if m != nil {
		return m.Terminal
	}
	return nil
}

// Specialized DPC 61850 CDC class
type ControlDPC struct {
	// Service parameter that determines the control activity ('false' for off, 'true' for on).
	CtlVal               bool     `protobuf:"varint,1,opt,name=ctlVal,proto3" json:"ctlVal,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ControlDPC) Reset()         { *m = ControlDPC{} }
func (m *ControlDPC) String() string { return proto.CompactTextString(m) }
func (*ControlDPC) ProtoMessage()    {}
func (*ControlDPC) Descriptor() ([]byte, []int) {
	return fileDescriptor_018fa6cbfd386c3e, []int{31}
}

func (m *ControlDPC) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ControlDPC.Unmarshal(m, b)
}
func (m *ControlDPC) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ControlDPC.Marshal(b, m, deterministic)
}
func (m *ControlDPC) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ControlDPC.Merge(m, src)
}
func (m *ControlDPC) XXX_Size() int {
	return xxx_messageInfo_ControlDPC.Size(m)
}
func (m *ControlDPC) XXX_DiscardUnknown() {
	xxx_messageInfo_ControlDPC.DiscardUnknown(m)
}

var xxx_messageInfo_ControlDPC proto.InternalMessageInfo

func (m *ControlDPC) GetCtlVal() bool {
	if m != nil {
		return m.CtlVal
	}
	return false
}

// UTC time with the epoch of midnight (00:00:00) of 1970-01-01. The presentation is defined in the
// SCSMs.The NULL time stamp has all fields set to 0 (zero).The relation between a timestamp value, the
// synchronization of an internal time with an external time source (for example, UTC time), and other
// information related to time model are available as requirements in Clause 21.  ControlTimestamp is a
// timestamp for future time point so it does not contain the time quality as the one contained in the
// normal Timestamp data type.
type ControlTimestamp struct {
	// Fractional of the current second when the value of time stamp has been determined. It shall be
	// calculated as (SUM from i=0 to 31 of bi*2**-(i+1)).
	Fraction uint32 `protobuf:"varint,1,opt,name=fraction,proto3" json:"fraction,omitempty"`
	// Second since epoch (1970-01-01T00:00:00Z)
	Seconds              uint64   `protobuf:"varint,2,opt,name=seconds,proto3" json:"seconds,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ControlTimestamp) Reset()         { *m = ControlTimestamp{} }
func (m *ControlTimestamp) String() string { return proto.CompactTextString(m) }
func (*ControlTimestamp) ProtoMessage()    {}
func (*ControlTimestamp) Descriptor() ([]byte, []int) {
	return fileDescriptor_018fa6cbfd386c3e, []int{32}
}

func (m *ControlTimestamp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ControlTimestamp.Unmarshal(m, b)
}
func (m *ControlTimestamp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ControlTimestamp.Marshal(b, m, deterministic)
}
func (m *ControlTimestamp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ControlTimestamp.Merge(m, src)
}
func (m *ControlTimestamp) XXX_Size() int {
	return xxx_messageInfo_ControlTimestamp.Size(m)
}
func (m *ControlTimestamp) XXX_DiscardUnknown() {
	xxx_messageInfo_ControlTimestamp.DiscardUnknown(m)
}

var xxx_messageInfo_ControlTimestamp proto.InternalMessageInfo

func (m *ControlTimestamp) GetFraction() uint32 {
	if m != nil {
		return m.Fraction
	}
	return 0
}

func (m *ControlTimestamp) GetSeconds() uint64 {
	if m != nil {
		return m.Seconds
	}
	return 0
}

type Optional_ScheduleParameterKind struct {
	Value                ScheduleParameterKind `protobuf:"varint,1,opt,name=value,proto3,enum=commonmodule.ScheduleParameterKind" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *Optional_ScheduleParameterKind) Reset()         { *m = Optional_ScheduleParameterKind{} }
func (m *Optional_ScheduleParameterKind) String() string { return proto.CompactTextString(m) }
func (*Optional_ScheduleParameterKind) ProtoMessage()    {}
func (*Optional_ScheduleParameterKind) Descriptor() ([]byte, []int) {
	return fileDescriptor_018fa6cbfd386c3e, []int{33}
}

func (m *Optional_ScheduleParameterKind) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Optional_ScheduleParameterKind.Unmarshal(m, b)
}
func (m *Optional_ScheduleParameterKind) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Optional_ScheduleParameterKind.Marshal(b, m, deterministic)
}
func (m *Optional_ScheduleParameterKind) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Optional_ScheduleParameterKind.Merge(m, src)
}
func (m *Optional_ScheduleParameterKind) XXX_Size() int {
	return xxx_messageInfo_Optional_ScheduleParameterKind.Size(m)
}
func (m *Optional_ScheduleParameterKind) XXX_DiscardUnknown() {
	xxx_messageInfo_Optional_ScheduleParameterKind.DiscardUnknown(m)
}

var xxx_messageInfo_Optional_ScheduleParameterKind proto.InternalMessageInfo

func (m *Optional_ScheduleParameterKind) GetValue() ScheduleParameterKind {
	if m != nil {
		return m.Value
	}
	return ScheduleParameterKind_ScheduleParameterKind_none
}

// Grid connect mode kind
type ENG_ScheduleParameter struct {
	// Schedule parameter type
	ScheduleParameterType ScheduleParameterKind `protobuf:"varint,1,opt,name=scheduleParameterType,proto3,enum=commonmodule.ScheduleParameterKind" json:"scheduleParameterType,omitempty"`
	// MISSING DOCUMENTATION!!!
	Value                float32  `protobuf:"fixed32,2,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ENG_ScheduleParameter) Reset()         { *m = ENG_ScheduleParameter{} }
func (m *ENG_ScheduleParameter) String() string { return proto.CompactTextString(m) }
func (*ENG_ScheduleParameter) ProtoMessage()    {}
func (*ENG_ScheduleParameter) Descriptor() ([]byte, []int) {
	return fileDescriptor_018fa6cbfd386c3e, []int{34}
}

func (m *ENG_ScheduleParameter) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ENG_ScheduleParameter.Unmarshal(m, b)
}
func (m *ENG_ScheduleParameter) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ENG_ScheduleParameter.Marshal(b, m, deterministic)
}
func (m *ENG_ScheduleParameter) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ENG_ScheduleParameter.Merge(m, src)
}
func (m *ENG_ScheduleParameter) XXX_Size() int {
	return xxx_messageInfo_ENG_ScheduleParameter.Size(m)
}
func (m *ENG_ScheduleParameter) XXX_DiscardUnknown() {
	xxx_messageInfo_ENG_ScheduleParameter.DiscardUnknown(m)
}

var xxx_messageInfo_ENG_ScheduleParameter proto.InternalMessageInfo

func (m *ENG_ScheduleParameter) GetScheduleParameterType() ScheduleParameterKind {
	if m != nil {
		return m.ScheduleParameterType
	}
	return ScheduleParameterKind_ScheduleParameterKind_none
}

func (m *ENG_ScheduleParameter) GetValue() float32 {
	if m != nil {
		return m.Value
	}
	return 0
}

// Point definition (Point)
type SchedulePoint struct {
	// Schedule parameter
	ScheduleParameter []*ENG_ScheduleParameter `protobuf:"bytes,1,rep,name=scheduleParameter,proto3" json:"scheduleParameter,omitempty"`
	// Start time
	StartTime            *ControlTimestamp `protobuf:"bytes,2,opt,name=startTime,proto3" json:"startTime,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *SchedulePoint) Reset()         { *m = SchedulePoint{} }
func (m *SchedulePoint) String() string { return proto.CompactTextString(m) }
func (*SchedulePoint) ProtoMessage()    {}
func (*SchedulePoint) Descriptor() ([]byte, []int) {
	return fileDescriptor_018fa6cbfd386c3e, []int{35}
}

func (m *SchedulePoint) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SchedulePoint.Unmarshal(m, b)
}
func (m *SchedulePoint) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SchedulePoint.Marshal(b, m, deterministic)
}
func (m *SchedulePoint) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SchedulePoint.Merge(m, src)
}
func (m *SchedulePoint) XXX_Size() int {
	return xxx_messageInfo_SchedulePoint.Size(m)
}
func (m *SchedulePoint) XXX_DiscardUnknown() {
	xxx_messageInfo_SchedulePoint.DiscardUnknown(m)
}

var xxx_messageInfo_SchedulePoint proto.InternalMessageInfo

func (m *SchedulePoint) GetScheduleParameter() []*ENG_ScheduleParameter {
	if m != nil {
		return m.ScheduleParameter
	}
	return nil
}

func (m *SchedulePoint) GetStartTime() *ControlTimestamp {
	if m != nil {
		return m.StartTime
	}
	return nil
}

// Curve shape setting (FC=SP) (CSG_SP)
type ScheduleCSG struct {
	// The array with the points specifying a time schedule
	SchPts               []*SchedulePoint `protobuf:"bytes,1,rep,name=schPts,proto3" json:"schPts,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *ScheduleCSG) Reset()         { *m = ScheduleCSG{} }
func (m *ScheduleCSG) String() string { return proto.CompactTextString(m) }
func (*ScheduleCSG) ProtoMessage()    {}
func (*ScheduleCSG) Descriptor() ([]byte, []int) {
	return fileDescriptor_018fa6cbfd386c3e, []int{36}
}

func (m *ScheduleCSG) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ScheduleCSG.Unmarshal(m, b)
}
func (m *ScheduleCSG) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ScheduleCSG.Marshal(b, m, deterministic)
}
func (m *ScheduleCSG) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ScheduleCSG.Merge(m, src)
}
func (m *ScheduleCSG) XXX_Size() int {
	return xxx_messageInfo_ScheduleCSG.Size(m)
}
func (m *ScheduleCSG) XXX_DiscardUnknown() {
	xxx_messageInfo_ScheduleCSG.DiscardUnknown(m)
}

var xxx_messageInfo_ScheduleCSG proto.InternalMessageInfo

func (m *ScheduleCSG) GetSchPts() []*SchedulePoint {
	if m != nil {
		return m.SchPts
	}
	return nil
}

// OpenFMB specialization for control schedule using:  LN: Schedule   Name: FSCH
type ControlScheduleFSCH struct {
	// Analog CSG
	ValACSG              *ScheduleCSG `protobuf:"bytes,1,opt,name=ValACSG,proto3" json:"ValACSG,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *ControlScheduleFSCH) Reset()         { *m = ControlScheduleFSCH{} }
func (m *ControlScheduleFSCH) String() string { return proto.CompactTextString(m) }
func (*ControlScheduleFSCH) ProtoMessage()    {}
func (*ControlScheduleFSCH) Descriptor() ([]byte, []int) {
	return fileDescriptor_018fa6cbfd386c3e, []int{37}
}

func (m *ControlScheduleFSCH) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ControlScheduleFSCH.Unmarshal(m, b)
}
func (m *ControlScheduleFSCH) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ControlScheduleFSCH.Marshal(b, m, deterministic)
}
func (m *ControlScheduleFSCH) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ControlScheduleFSCH.Merge(m, src)
}
func (m *ControlScheduleFSCH) XXX_Size() int {
	return xxx_messageInfo_ControlScheduleFSCH.Size(m)
}
func (m *ControlScheduleFSCH) XXX_DiscardUnknown() {
	xxx_messageInfo_ControlScheduleFSCH.DiscardUnknown(m)
}

var xxx_messageInfo_ControlScheduleFSCH proto.InternalMessageInfo

func (m *ControlScheduleFSCH) GetValACSG() *ScheduleCSG {
	if m != nil {
		return m.ValACSG
	}
	return nil
}

// OpenFMB specialization for logical node control
type LogicalNodeForControl struct {
	// UML inherited base object
	LogicalNode          *LogicalNode `protobuf:"bytes,1,opt,name=logicalNode,proto3" json:"logicalNode,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *LogicalNodeForControl) Reset()         { *m = LogicalNodeForControl{} }
func (m *LogicalNodeForControl) String() string { return proto.CompactTextString(m) }
func (*LogicalNodeForControl) ProtoMessage()    {}
func (*LogicalNodeForControl) Descriptor() ([]byte, []int) {
	return fileDescriptor_018fa6cbfd386c3e, []int{38}
}

func (m *LogicalNodeForControl) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LogicalNodeForControl.Unmarshal(m, b)
}
func (m *LogicalNodeForControl) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LogicalNodeForControl.Marshal(b, m, deterministic)
}
func (m *LogicalNodeForControl) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LogicalNodeForControl.Merge(m, src)
}
func (m *LogicalNodeForControl) XXX_Size() int {
	return xxx_messageInfo_LogicalNodeForControl.Size(m)
}
func (m *LogicalNodeForControl) XXX_DiscardUnknown() {
	xxx_messageInfo_LogicalNodeForControl.DiscardUnknown(m)
}

var xxx_messageInfo_LogicalNodeForControl proto.InternalMessageInfo

func (m *LogicalNodeForControl) GetLogicalNode() *LogicalNode {
	if m != nil {
		return m.LogicalNode
	}
	return nil
}

// LN: Schedule controller   Name: FSCC  F:    Function (generic) SC:  Schedule Controller C:
// Control (execution)
type ControlFSCC struct {
	// UML inherited base object
	LogicalNodeForControl *LogicalNodeForControl `protobuf:"bytes,1,opt,name=logicalNodeForControl,proto3" json:"logicalNodeForControl,omitempty"`
	// MISSING DOCUMENTATION!!!
	ControlScheduleFSCH *ControlScheduleFSCH `protobuf:"bytes,2,opt,name=controlScheduleFSCH,proto3" json:"controlScheduleFSCH,omitempty"`
	// MISSING DOCUMENTATION!!!
	IslandControlScheduleFSCH *ControlScheduleFSCH `protobuf:"bytes,3,opt,name=islandControlScheduleFSCH,proto3" json:"islandControlScheduleFSCH,omitempty"`
	XXX_NoUnkeyedLiteral      struct{}             `json:"-"`
	XXX_unrecognized          []byte               `json:"-"`
	XXX_sizecache             int32                `json:"-"`
}

func (m *ControlFSCC) Reset()         { *m = ControlFSCC{} }
func (m *ControlFSCC) String() string { return proto.CompactTextString(m) }
func (*ControlFSCC) ProtoMessage()    {}
func (*ControlFSCC) Descriptor() ([]byte, []int) {
	return fileDescriptor_018fa6cbfd386c3e, []int{39}
}

func (m *ControlFSCC) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ControlFSCC.Unmarshal(m, b)
}
func (m *ControlFSCC) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ControlFSCC.Marshal(b, m, deterministic)
}
func (m *ControlFSCC) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ControlFSCC.Merge(m, src)
}
func (m *ControlFSCC) XXX_Size() int {
	return xxx_messageInfo_ControlFSCC.Size(m)
}
func (m *ControlFSCC) XXX_DiscardUnknown() {
	xxx_messageInfo_ControlFSCC.DiscardUnknown(m)
}

var xxx_messageInfo_ControlFSCC proto.InternalMessageInfo

func (m *ControlFSCC) GetLogicalNodeForControl() *LogicalNodeForControl {
	if m != nil {
		return m.LogicalNodeForControl
	}
	return nil
}

func (m *ControlFSCC) GetControlScheduleFSCH() *ControlScheduleFSCH {
	if m != nil {
		return m.ControlScheduleFSCH
	}
	return nil
}

func (m *ControlFSCC) GetIslandControlScheduleFSCH() *ControlScheduleFSCH {
	if m != nil {
		return m.IslandControlScheduleFSCH
	}
	return nil
}

// Integer status setting (FC=SP) (ING_SP)
type ControlING struct {
	// The value of the status setting.
	SetVal int32 `protobuf:"varint,1,opt,name=setVal,proto3" json:"setVal,omitempty"`
	// Unit for 'setVal', 'minVal', 'maxVal', 'stepSize'.
	Units                *Unit    `protobuf:"bytes,2,opt,name=units,proto3" json:"units,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ControlING) Reset()         { *m = ControlING{} }
func (m *ControlING) String() string { return proto.CompactTextString(m) }
func (*ControlING) ProtoMessage()    {}
func (*ControlING) Descriptor() ([]byte, []int) {
	return fileDescriptor_018fa6cbfd386c3e, []int{40}
}

func (m *ControlING) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ControlING.Unmarshal(m, b)
}
func (m *ControlING) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ControlING.Marshal(b, m, deterministic)
}
func (m *ControlING) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ControlING.Merge(m, src)
}
func (m *ControlING) XXX_Size() int {
	return xxx_messageInfo_ControlING.Size(m)
}
func (m *ControlING) XXX_DiscardUnknown() {
	xxx_messageInfo_ControlING.DiscardUnknown(m)
}

var xxx_messageInfo_ControlING proto.InternalMessageInfo

func (m *ControlING) GetSetVal() int32 {
	if m != nil {
		return m.SetVal
	}
	return 0
}

func (m *ControlING) GetUnits() *Unit {
	if m != nil {
		return m.Units
	}
	return nil
}

// &lt;&lt;statistics&gt;&gt; Integer controlled step position information (ISC)
type ControlISC struct {
	// Service parameter that determines the control activity.
	CtlVal               int32    `protobuf:"varint,1,opt,name=ctlVal,proto3" json:"ctlVal,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ControlISC) Reset()         { *m = ControlISC{} }
func (m *ControlISC) String() string { return proto.CompactTextString(m) }
func (*ControlISC) ProtoMessage()    {}
func (*ControlISC) Descriptor() ([]byte, []int) {
	return fileDescriptor_018fa6cbfd386c3e, []int{41}
}

func (m *ControlISC) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ControlISC.Unmarshal(m, b)
}
func (m *ControlISC) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ControlISC.Marshal(b, m, deterministic)
}
func (m *ControlISC) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ControlISC.Merge(m, src)
}
func (m *ControlISC) XXX_Size() int {
	return xxx_messageInfo_ControlISC.Size(m)
}
func (m *ControlISC) XXX_DiscardUnknown() {
	xxx_messageInfo_ControlISC.DiscardUnknown(m)
}

var xxx_messageInfo_ControlISC proto.InternalMessageInfo

func (m *ControlISC) GetCtlVal() int32 {
	if m != nil {
		return m.CtlVal
	}
	return 0
}

// Generic control message info.
type MessageInfo struct {
	// UML inherited base object
	IdentifiedObject *IdentifiedObject `protobuf:"bytes,1,opt,name=identifiedObject,proto3" json:"identifiedObject,omitempty"`
	// MISSING DOCUMENTATION!!!
	MessageTimeStamp     *Timestamp `protobuf:"bytes,2,opt,name=messageTimeStamp,proto3" json:"messageTimeStamp,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *MessageInfo) Reset()         { *m = MessageInfo{} }
func (m *MessageInfo) String() string { return proto.CompactTextString(m) }
func (*MessageInfo) ProtoMessage()    {}
func (*MessageInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_018fa6cbfd386c3e, []int{42}
}

func (m *MessageInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MessageInfo.Unmarshal(m, b)
}
func (m *MessageInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MessageInfo.Marshal(b, m, deterministic)
}
func (m *MessageInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MessageInfo.Merge(m, src)
}
func (m *MessageInfo) XXX_Size() int {
	return xxx_messageInfo_MessageInfo.Size(m)
}
func (m *MessageInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_MessageInfo.DiscardUnknown(m)
}

var xxx_messageInfo_MessageInfo proto.InternalMessageInfo

func (m *MessageInfo) GetIdentifiedObject() *IdentifiedObject {
	if m != nil {
		return m.IdentifiedObject
	}
	return nil
}

func (m *MessageInfo) GetMessageTimeStamp() *Timestamp {
	if m != nil {
		return m.MessageTimeStamp
	}
	return nil
}

// Generic control message info.
type ControlMessageInfo struct {
	// UML inherited base object
	MessageInfo          *MessageInfo `protobuf:"bytes,1,opt,name=messageInfo,proto3" json:"messageInfo,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *ControlMessageInfo) Reset()         { *m = ControlMessageInfo{} }
func (m *ControlMessageInfo) String() string { return proto.CompactTextString(m) }
func (*ControlMessageInfo) ProtoMessage()    {}
func (*ControlMessageInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_018fa6cbfd386c3e, []int{43}
}

func (m *ControlMessageInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ControlMessageInfo.Unmarshal(m, b)
}
func (m *ControlMessageInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ControlMessageInfo.Marshal(b, m, deterministic)
}
func (m *ControlMessageInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ControlMessageInfo.Merge(m, src)
}
func (m *ControlMessageInfo) XXX_Size() int {
	return xxx_messageInfo_ControlMessageInfo.Size(m)
}
func (m *ControlMessageInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_ControlMessageInfo.DiscardUnknown(m)
}

var xxx_messageInfo_ControlMessageInfo proto.InternalMessageInfo

func (m *ControlMessageInfo) GetMessageInfo() *MessageInfo {
	if m != nil {
		return m.MessageInfo
	}
	return nil
}

// Controllable single point (SPC)
type ControlSPC struct {
	// Service parameter that determines the control activity ('false' for off or deactivation, 'true'
	// for on or activation).
	CtlVal               bool     `protobuf:"varint,1,opt,name=ctlVal,proto3" json:"ctlVal,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ControlSPC) Reset()         { *m = ControlSPC{} }
func (m *ControlSPC) String() string { return proto.CompactTextString(m) }
func (*ControlSPC) ProtoMessage()    {}
func (*ControlSPC) Descriptor() ([]byte, []int) {
	return fileDescriptor_018fa6cbfd386c3e, []int{44}
}

func (m *ControlSPC) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ControlSPC.Unmarshal(m, b)
}
func (m *ControlSPC) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ControlSPC.Marshal(b, m, deterministic)
}
func (m *ControlSPC) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ControlSPC.Merge(m, src)
}
func (m *ControlSPC) XXX_Size() int {
	return xxx_messageInfo_ControlSPC.Size(m)
}
func (m *ControlSPC) XXX_DiscardUnknown() {
	xxx_messageInfo_ControlSPC.DiscardUnknown(m)
}

var xxx_messageInfo_ControlSPC proto.InternalMessageInfo

func (m *ControlSPC) GetCtlVal() bool {
	if m != nil {
		return m.CtlVal
	}
	return false
}

// The value of a control command which could either be a setpoint or a control schedule in curve.
// The attribute modBlk is used to tag out a device. if it is TRUE, any setpoints and control schedule
// in a message payload should be ignored.   It should also be presented in a status profile.  Any
// modBlk value change (i.e. TRUE to FALSE and vice versa) should trigger an event.
type ControlValue struct {
	// UML inherited base object
	IdentifiedObject *IdentifiedObject `protobuf:"bytes,1,opt,name=identifiedObject,proto3" json:"identifiedObject,omitempty"`
	// The attribute modBlk is used to tag out a device. if it is TRUE, any setpoints and control
	// schedule in a message payload should be ignored.   It should also be presented in a status profile.
	// Any modBlk value change (i.e. TRUE to FALSE and vice versa) should trigger an event.
	ModBlk               *wrappers.BoolValue `protobuf:"bytes,2,opt,name=modBlk,proto3" json:"modBlk,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *ControlValue) Reset()         { *m = ControlValue{} }
func (m *ControlValue) String() string { return proto.CompactTextString(m) }
func (*ControlValue) ProtoMessage()    {}
func (*ControlValue) Descriptor() ([]byte, []int) {
	return fileDescriptor_018fa6cbfd386c3e, []int{45}
}

func (m *ControlValue) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ControlValue.Unmarshal(m, b)
}
func (m *ControlValue) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ControlValue.Marshal(b, m, deterministic)
}
func (m *ControlValue) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ControlValue.Merge(m, src)
}
func (m *ControlValue) XXX_Size() int {
	return xxx_messageInfo_ControlValue.Size(m)
}
func (m *ControlValue) XXX_DiscardUnknown() {
	xxx_messageInfo_ControlValue.DiscardUnknown(m)
}

var xxx_messageInfo_ControlValue proto.InternalMessageInfo

func (m *ControlValue) GetIdentifiedObject() *IdentifiedObject {
	if m != nil {
		return m.IdentifiedObject
	}
	return nil
}

func (m *ControlValue) GetModBlk() *wrappers.BoolValue {
	if m != nil {
		return m.ModBlk
	}
	return nil
}

// Interval between two date and time points.
type DateTimeInterval struct {
	// End date and time of this interval.
	End *wrappers.Int64Value `protobuf:"bytes,1,opt,name=end,proto3" json:"end,omitempty"`
	// Start date and time of this interval.
	Start                *wrappers.Int64Value `protobuf:"bytes,2,opt,name=start,proto3" json:"start,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *DateTimeInterval) Reset()         { *m = DateTimeInterval{} }
func (m *DateTimeInterval) String() string { return proto.CompactTextString(m) }
func (*DateTimeInterval) ProtoMessage()    {}
func (*DateTimeInterval) Descriptor() ([]byte, []int) {
	return fileDescriptor_018fa6cbfd386c3e, []int{46}
}

func (m *DateTimeInterval) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DateTimeInterval.Unmarshal(m, b)
}
func (m *DateTimeInterval) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DateTimeInterval.Marshal(b, m, deterministic)
}
func (m *DateTimeInterval) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DateTimeInterval.Merge(m, src)
}
func (m *DateTimeInterval) XXX_Size() int {
	return xxx_messageInfo_DateTimeInterval.Size(m)
}
func (m *DateTimeInterval) XXX_DiscardUnknown() {
	xxx_messageInfo_DateTimeInterval.DiscardUnknown(m)
}

var xxx_messageInfo_DateTimeInterval proto.InternalMessageInfo

func (m *DateTimeInterval) GetEnd() *wrappers.Int64Value {
	if m != nil {
		return m.End
	}
	return nil
}

func (m *DateTimeInterval) GetStart() *wrappers.Int64Value {
	if m != nil {
		return m.Start
	}
	return nil
}

// Phase to phase related measured values of a three-phase system (DEL)
type DEL struct {
	// Value of phase A to phase B measurement.
	PhsAB *CMV `protobuf:"bytes,1,opt,name=phsAB,proto3" json:"phsAB,omitempty"`
	// Value of phase B to phase C measurement.
	PhsBC *CMV `protobuf:"bytes,2,opt,name=phsBC,proto3" json:"phsBC,omitempty"`
	// Value of phase C to phase A measurement.
	PhsCA                *CMV     `protobuf:"bytes,3,opt,name=phsCA,proto3" json:"phsCA,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DEL) Reset()         { *m = DEL{} }
func (m *DEL) String() string { return proto.CompactTextString(m) }
func (*DEL) ProtoMessage()    {}
func (*DEL) Descriptor() ([]byte, []int) {
	return fileDescriptor_018fa6cbfd386c3e, []int{47}
}

func (m *DEL) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DEL.Unmarshal(m, b)
}
func (m *DEL) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DEL.Marshal(b, m, deterministic)
}
func (m *DEL) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DEL.Merge(m, src)
}
func (m *DEL) XXX_Size() int {
	return xxx_messageInfo_DEL.Size(m)
}
func (m *DEL) XXX_DiscardUnknown() {
	xxx_messageInfo_DEL.DiscardUnknown(m)
}

var xxx_messageInfo_DEL proto.InternalMessageInfo

func (m *DEL) GetPhsAB() *CMV {
	if m != nil {
		return m.PhsAB
	}
	return nil
}

func (m *DEL) GetPhsBC() *CMV {
	if m != nil {
		return m.PhsBC
	}
	return nil
}

func (m *DEL) GetPhsCA() *CMV {
	if m != nil {
		return m.PhsCA
	}
	return nil
}

// Generic user of energy - a  point of consumption on the power system model.
type EnergyConsumer struct {
	// UML inherited base object
	ConductingEquipment *ConductingEquipment `protobuf:"bytes,1,opt,name=conductingEquipment,proto3" json:"conductingEquipment,omitempty"`
	// MISSING DOCUMENTATION!!!
	OperatingLimit       *wrappers.StringValue `protobuf:"bytes,2,opt,name=operatingLimit,proto3" json:"operatingLimit,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *EnergyConsumer) Reset()         { *m = EnergyConsumer{} }
func (m *EnergyConsumer) String() string { return proto.CompactTextString(m) }
func (*EnergyConsumer) ProtoMessage()    {}
func (*EnergyConsumer) Descriptor() ([]byte, []int) {
	return fileDescriptor_018fa6cbfd386c3e, []int{48}
}

func (m *EnergyConsumer) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EnergyConsumer.Unmarshal(m, b)
}
func (m *EnergyConsumer) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EnergyConsumer.Marshal(b, m, deterministic)
}
func (m *EnergyConsumer) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EnergyConsumer.Merge(m, src)
}
func (m *EnergyConsumer) XXX_Size() int {
	return xxx_messageInfo_EnergyConsumer.Size(m)
}
func (m *EnergyConsumer) XXX_DiscardUnknown() {
	xxx_messageInfo_EnergyConsumer.DiscardUnknown(m)
}

var xxx_messageInfo_EnergyConsumer proto.InternalMessageInfo

func (m *EnergyConsumer) GetConductingEquipment() *ConductingEquipment {
	if m != nil {
		return m.ConductingEquipment
	}
	return nil
}

func (m *EnergyConsumer) GetOperatingLimit() *wrappers.StringValue {
	if m != nil {
		return m.OperatingLimit
	}
	return nil
}

type Optional_CalcMethodKind struct {
	Value                CalcMethodKind `protobuf:"varint,1,opt,name=value,proto3,enum=commonmodule.CalcMethodKind" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *Optional_CalcMethodKind) Reset()         { *m = Optional_CalcMethodKind{} }
func (m *Optional_CalcMethodKind) String() string { return proto.CompactTextString(m) }
func (*Optional_CalcMethodKind) ProtoMessage()    {}
func (*Optional_CalcMethodKind) Descriptor() ([]byte, []int) {
	return fileDescriptor_018fa6cbfd386c3e, []int{49}
}

func (m *Optional_CalcMethodKind) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Optional_CalcMethodKind.Unmarshal(m, b)
}
func (m *Optional_CalcMethodKind) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Optional_CalcMethodKind.Marshal(b, m, deterministic)
}
func (m *Optional_CalcMethodKind) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Optional_CalcMethodKind.Merge(m, src)
}
func (m *Optional_CalcMethodKind) XXX_Size() int {
	return xxx_messageInfo_Optional_CalcMethodKind.Size(m)
}
func (m *Optional_CalcMethodKind) XXX_DiscardUnknown() {
	xxx_messageInfo_Optional_CalcMethodKind.DiscardUnknown(m)
}

var xxx_messageInfo_Optional_CalcMethodKind proto.InternalMessageInfo

func (m *Optional_CalcMethodKind) GetValue() CalcMethodKind {
	if m != nil {
		return m.Value
	}
	return CalcMethodKind_CalcMethodKind_UNDEFINED
}

// Calc method kind
type ENG_CalcMethodKind struct {
	// The value of the status setting.
	SetVal               CalcMethodKind `protobuf:"varint,1,opt,name=setVal,proto3,enum=commonmodule.CalcMethodKind" json:"setVal,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *ENG_CalcMethodKind) Reset()         { *m = ENG_CalcMethodKind{} }
func (m *ENG_CalcMethodKind) String() string { return proto.CompactTextString(m) }
func (*ENG_CalcMethodKind) ProtoMessage()    {}
func (*ENG_CalcMethodKind) Descriptor() ([]byte, []int) {
	return fileDescriptor_018fa6cbfd386c3e, []int{50}
}

func (m *ENG_CalcMethodKind) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ENG_CalcMethodKind.Unmarshal(m, b)
}
func (m *ENG_CalcMethodKind) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ENG_CalcMethodKind.Marshal(b, m, deterministic)
}
func (m *ENG_CalcMethodKind) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ENG_CalcMethodKind.Merge(m, src)
}
func (m *ENG_CalcMethodKind) XXX_Size() int {
	return xxx_messageInfo_ENG_CalcMethodKind.Size(m)
}
func (m *ENG_CalcMethodKind) XXX_DiscardUnknown() {
	xxx_messageInfo_ENG_CalcMethodKind.DiscardUnknown(m)
}

var xxx_messageInfo_ENG_CalcMethodKind proto.InternalMessageInfo

func (m *ENG_CalcMethodKind) GetSetVal() CalcMethodKind {
	if m != nil {
		return m.SetVal
	}
	return CalcMethodKind_CalcMethodKind_UNDEFINED
}

type Optional_GridConnectModeKind struct {
	Value                GridConnectModeKind `protobuf:"varint,1,opt,name=value,proto3,enum=commonmodule.GridConnectModeKind" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *Optional_GridConnectModeKind) Reset()         { *m = Optional_GridConnectModeKind{} }
func (m *Optional_GridConnectModeKind) String() string { return proto.CompactTextString(m) }
func (*Optional_GridConnectModeKind) ProtoMessage()    {}
func (*Optional_GridConnectModeKind) Descriptor() ([]byte, []int) {
	return fileDescriptor_018fa6cbfd386c3e, []int{51}
}

func (m *Optional_GridConnectModeKind) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Optional_GridConnectModeKind.Unmarshal(m, b)
}
func (m *Optional_GridConnectModeKind) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Optional_GridConnectModeKind.Marshal(b, m, deterministic)
}
func (m *Optional_GridConnectModeKind) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Optional_GridConnectModeKind.Merge(m, src)
}
func (m *Optional_GridConnectModeKind) XXX_Size() int {
	return xxx_messageInfo_Optional_GridConnectModeKind.Size(m)
}
func (m *Optional_GridConnectModeKind) XXX_DiscardUnknown() {
	xxx_messageInfo_Optional_GridConnectModeKind.DiscardUnknown(m)
}

var xxx_messageInfo_Optional_GridConnectModeKind proto.InternalMessageInfo

func (m *Optional_GridConnectModeKind) GetValue() GridConnectModeKind {
	if m != nil {
		return m.Value
	}
	return GridConnectModeKind_GridConnectModeKind_UNDEFINED
}

// Grid connect mode kind
type ENG_GridConnectModeKind struct {
	// The value of the status setting.
	SetVal GridConnectModeKind `protobuf:"varint,1,opt,name=setVal,proto3,enum=commonmodule.GridConnectModeKind" json:"setVal,omitempty"`
	// MISSING DOCUMENTATION!!!
	SetValExtension      *wrappers.StringValue `protobuf:"bytes,2,opt,name=setValExtension,proto3" json:"setValExtension,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *ENG_GridConnectModeKind) Reset()         { *m = ENG_GridConnectModeKind{} }
func (m *ENG_GridConnectModeKind) String() string { return proto.CompactTextString(m) }
func (*ENG_GridConnectModeKind) ProtoMessage()    {}
func (*ENG_GridConnectModeKind) Descriptor() ([]byte, []int) {
	return fileDescriptor_018fa6cbfd386c3e, []int{52}
}

func (m *ENG_GridConnectModeKind) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ENG_GridConnectModeKind.Unmarshal(m, b)
}
func (m *ENG_GridConnectModeKind) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ENG_GridConnectModeKind.Marshal(b, m, deterministic)
}
func (m *ENG_GridConnectModeKind) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ENG_GridConnectModeKind.Merge(m, src)
}
func (m *ENG_GridConnectModeKind) XXX_Size() int {
	return xxx_messageInfo_ENG_GridConnectModeKind.Size(m)
}
func (m *ENG_GridConnectModeKind) XXX_DiscardUnknown() {
	xxx_messageInfo_ENG_GridConnectModeKind.DiscardUnknown(m)
}

var xxx_messageInfo_ENG_GridConnectModeKind proto.InternalMessageInfo

func (m *ENG_GridConnectModeKind) GetSetVal() GridConnectModeKind {
	if m != nil {
		return m.SetVal
	}
	return GridConnectModeKind_GridConnectModeKind_UNDEFINED
}

func (m *ENG_GridConnectModeKind) GetSetValExtension() *wrappers.StringValue {
	if m != nil {
		return m.SetValExtension
	}
	return nil
}

type Optional_PFSignKind struct {
	Value                PFSignKind `protobuf:"varint,1,opt,name=value,proto3,enum=commonmodule.PFSignKind" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *Optional_PFSignKind) Reset()         { *m = Optional_PFSignKind{} }
func (m *Optional_PFSignKind) String() string { return proto.CompactTextString(m) }
func (*Optional_PFSignKind) ProtoMessage()    {}
func (*Optional_PFSignKind) Descriptor() ([]byte, []int) {
	return fileDescriptor_018fa6cbfd386c3e, []int{53}
}

func (m *Optional_PFSignKind) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Optional_PFSignKind.Unmarshal(m, b)
}
func (m *Optional_PFSignKind) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Optional_PFSignKind.Marshal(b, m, deterministic)
}
func (m *Optional_PFSignKind) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Optional_PFSignKind.Merge(m, src)
}
func (m *Optional_PFSignKind) XXX_Size() int {
	return xxx_messageInfo_Optional_PFSignKind.Size(m)
}
func (m *Optional_PFSignKind) XXX_DiscardUnknown() {
	xxx_messageInfo_Optional_PFSignKind.DiscardUnknown(m)
}

var xxx_messageInfo_Optional_PFSignKind proto.InternalMessageInfo

func (m *Optional_PFSignKind) GetValue() PFSignKind {
	if m != nil {
		return m.Value
	}
	return PFSignKind_PFSignKind_UNDEFINED
}

// Enumerated status setting (FC=SP) (ENG_SP)
type ENG_PFSignKind struct {
	// The value of the status setting.
	SetVal               PFSignKind `protobuf:"varint,1,opt,name=setVal,proto3,enum=commonmodule.PFSignKind" json:"setVal,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *ENG_PFSignKind) Reset()         { *m = ENG_PFSignKind{} }
func (m *ENG_PFSignKind) String() string { return proto.CompactTextString(m) }
func (*ENG_PFSignKind) ProtoMessage()    {}
func (*ENG_PFSignKind) Descriptor() ([]byte, []int) {
	return fileDescriptor_018fa6cbfd386c3e, []int{54}
}

func (m *ENG_PFSignKind) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ENG_PFSignKind.Unmarshal(m, b)
}
func (m *ENG_PFSignKind) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ENG_PFSignKind.Marshal(b, m, deterministic)
}
func (m *ENG_PFSignKind) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ENG_PFSignKind.Merge(m, src)
}
func (m *ENG_PFSignKind) XXX_Size() int {
	return xxx_messageInfo_ENG_PFSignKind.Size(m)
}
func (m *ENG_PFSignKind) XXX_DiscardUnknown() {
	xxx_messageInfo_ENG_PFSignKind.DiscardUnknown(m)
}

var xxx_messageInfo_ENG_PFSignKind proto.InternalMessageInfo

func (m *ENG_PFSignKind) GetSetVal() PFSignKind {
	if m != nil {
		return m.SetVal
	}
	return PFSignKind_PFSignKind_UNDEFINED
}

type Optional_BehaviourModeKind struct {
	Value                BehaviourModeKind `protobuf:"varint,1,opt,name=value,proto3,enum=commonmodule.BehaviourModeKind" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *Optional_BehaviourModeKind) Reset()         { *m = Optional_BehaviourModeKind{} }
func (m *Optional_BehaviourModeKind) String() string { return proto.CompactTextString(m) }
func (*Optional_BehaviourModeKind) ProtoMessage()    {}
func (*Optional_BehaviourModeKind) Descriptor() ([]byte, []int) {
	return fileDescriptor_018fa6cbfd386c3e, []int{55}
}

func (m *Optional_BehaviourModeKind) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Optional_BehaviourModeKind.Unmarshal(m, b)
}
func (m *Optional_BehaviourModeKind) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Optional_BehaviourModeKind.Marshal(b, m, deterministic)
}
func (m *Optional_BehaviourModeKind) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Optional_BehaviourModeKind.Merge(m, src)
}
func (m *Optional_BehaviourModeKind) XXX_Size() int {
	return xxx_messageInfo_Optional_BehaviourModeKind.Size(m)
}
func (m *Optional_BehaviourModeKind) XXX_DiscardUnknown() {
	xxx_messageInfo_Optional_BehaviourModeKind.DiscardUnknown(m)
}

var xxx_messageInfo_Optional_BehaviourModeKind proto.InternalMessageInfo

func (m *Optional_BehaviourModeKind) GetValue() BehaviourModeKind {
	if m != nil {
		return m.Value
	}
	return BehaviourModeKind_BehaviourModeKind_UNDEFINED
}

// Behavior mode kind. ENS stands for Enumerated status
type ENS_BehaviourModeKind struct {
	// Quality of the value in 'stVal'.
	Q *Quality `protobuf:"bytes,1,opt,name=q,proto3" json:"q,omitempty"`
	// Value of the data.
	StVal BehaviourModeKind `protobuf:"varint,2,opt,name=stVal,proto3,enum=commonmodule.BehaviourModeKind" json:"stVal,omitempty"`
	// Timestamp of the last change or update event of 'stVal' or the last change of value in 'q'.
	T                    *Timestamp `protobuf:"bytes,3,opt,name=t,proto3" json:"t,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *ENS_BehaviourModeKind) Reset()         { *m = ENS_BehaviourModeKind{} }
func (m *ENS_BehaviourModeKind) String() string { return proto.CompactTextString(m) }
func (*ENS_BehaviourModeKind) ProtoMessage()    {}
func (*ENS_BehaviourModeKind) Descriptor() ([]byte, []int) {
	return fileDescriptor_018fa6cbfd386c3e, []int{56}
}

func (m *ENS_BehaviourModeKind) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ENS_BehaviourModeKind.Unmarshal(m, b)
}
func (m *ENS_BehaviourModeKind) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ENS_BehaviourModeKind.Marshal(b, m, deterministic)
}
func (m *ENS_BehaviourModeKind) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ENS_BehaviourModeKind.Merge(m, src)
}
func (m *ENS_BehaviourModeKind) XXX_Size() int {
	return xxx_messageInfo_ENS_BehaviourModeKind.Size(m)
}
func (m *ENS_BehaviourModeKind) XXX_DiscardUnknown() {
	xxx_messageInfo_ENS_BehaviourModeKind.DiscardUnknown(m)
}

var xxx_messageInfo_ENS_BehaviourModeKind proto.InternalMessageInfo

func (m *ENS_BehaviourModeKind) GetQ() *Quality {
	if m != nil {
		return m.Q
	}
	return nil
}

func (m *ENS_BehaviourModeKind) GetStVal() BehaviourModeKind {
	if m != nil {
		return m.StVal
	}
	return BehaviourModeKind_BehaviourModeKind_UNDEFINED
}

func (m *ENS_BehaviourModeKind) GetT() *Timestamp {
	if m != nil {
		return m.T
	}
	return nil
}

type Optional_DERGeneratorStateKind struct {
	Value                DERGeneratorStateKind `protobuf:"varint,1,opt,name=value,proto3,enum=commonmodule.DERGeneratorStateKind" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *Optional_DERGeneratorStateKind) Reset()         { *m = Optional_DERGeneratorStateKind{} }
func (m *Optional_DERGeneratorStateKind) String() string { return proto.CompactTextString(m) }
func (*Optional_DERGeneratorStateKind) ProtoMessage()    {}
func (*Optional_DERGeneratorStateKind) Descriptor() ([]byte, []int) {
	return fileDescriptor_018fa6cbfd386c3e, []int{57}
}

func (m *Optional_DERGeneratorStateKind) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Optional_DERGeneratorStateKind.Unmarshal(m, b)
}
func (m *Optional_DERGeneratorStateKind) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Optional_DERGeneratorStateKind.Marshal(b, m, deterministic)
}
func (m *Optional_DERGeneratorStateKind) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Optional_DERGeneratorStateKind.Merge(m, src)
}
func (m *Optional_DERGeneratorStateKind) XXX_Size() int {
	return xxx_messageInfo_Optional_DERGeneratorStateKind.Size(m)
}
func (m *Optional_DERGeneratorStateKind) XXX_DiscardUnknown() {
	xxx_messageInfo_Optional_DERGeneratorStateKind.DiscardUnknown(m)
}

var xxx_messageInfo_Optional_DERGeneratorStateKind proto.InternalMessageInfo

func (m *Optional_DERGeneratorStateKind) GetValue() DERGeneratorStateKind {
	if m != nil {
		return m.Value
	}
	return DERGeneratorStateKind_DERGeneratorStateKind_UNDEFINED
}

// DER generation state kind. ENS stands for Enumerated status
type ENS_DERGeneratorStateKind struct {
	// Quality of the value in 'stVal'.
	Q *Quality `protobuf:"bytes,1,opt,name=q,proto3" json:"q,omitempty"`
	// Value of the data.
	StVal DERGeneratorStateKind `protobuf:"varint,2,opt,name=stVal,proto3,enum=commonmodule.DERGeneratorStateKind" json:"stVal,omitempty"`
	// Timestamp of the last change or update event of 'stVal' or the last change of value in 'q'.
	T                    *Timestamp `protobuf:"bytes,3,opt,name=t,proto3" json:"t,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *ENS_DERGeneratorStateKind) Reset()         { *m = ENS_DERGeneratorStateKind{} }
func (m *ENS_DERGeneratorStateKind) String() string { return proto.CompactTextString(m) }
func (*ENS_DERGeneratorStateKind) ProtoMessage()    {}
func (*ENS_DERGeneratorStateKind) Descriptor() ([]byte, []int) {
	return fileDescriptor_018fa6cbfd386c3e, []int{58}
}

func (m *ENS_DERGeneratorStateKind) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ENS_DERGeneratorStateKind.Unmarshal(m, b)
}
func (m *ENS_DERGeneratorStateKind) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ENS_DERGeneratorStateKind.Marshal(b, m, deterministic)
}
func (m *ENS_DERGeneratorStateKind) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ENS_DERGeneratorStateKind.Merge(m, src)
}
func (m *ENS_DERGeneratorStateKind) XXX_Size() int {
	return xxx_messageInfo_ENS_DERGeneratorStateKind.Size(m)
}
func (m *ENS_DERGeneratorStateKind) XXX_DiscardUnknown() {
	xxx_messageInfo_ENS_DERGeneratorStateKind.DiscardUnknown(m)
}

var xxx_messageInfo_ENS_DERGeneratorStateKind proto.InternalMessageInfo

func (m *ENS_DERGeneratorStateKind) GetQ() *Quality {
	if m != nil {
		return m.Q
	}
	return nil
}

func (m *ENS_DERGeneratorStateKind) GetStVal() DERGeneratorStateKind {
	if m != nil {
		return m.StVal
	}
	return DERGeneratorStateKind_DERGeneratorStateKind_UNDEFINED
}

func (m *ENS_DERGeneratorStateKind) GetT() *Timestamp {
	if m != nil {
		return m.T
	}
	return nil
}

type Optional_DynamicTestKind struct {
	Value                DynamicTestKind `protobuf:"varint,1,opt,name=value,proto3,enum=commonmodule.DynamicTestKind" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *Optional_DynamicTestKind) Reset()         { *m = Optional_DynamicTestKind{} }
func (m *Optional_DynamicTestKind) String() string { return proto.CompactTextString(m) }
func (*Optional_DynamicTestKind) ProtoMessage()    {}
func (*Optional_DynamicTestKind) Descriptor() ([]byte, []int) {
	return fileDescriptor_018fa6cbfd386c3e, []int{59}
}

func (m *Optional_DynamicTestKind) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Optional_DynamicTestKind.Unmarshal(m, b)
}
func (m *Optional_DynamicTestKind) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Optional_DynamicTestKind.Marshal(b, m, deterministic)
}
func (m *Optional_DynamicTestKind) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Optional_DynamicTestKind.Merge(m, src)
}
func (m *Optional_DynamicTestKind) XXX_Size() int {
	return xxx_messageInfo_Optional_DynamicTestKind.Size(m)
}
func (m *Optional_DynamicTestKind) XXX_DiscardUnknown() {
	xxx_messageInfo_Optional_DynamicTestKind.DiscardUnknown(m)
}

var xxx_messageInfo_Optional_DynamicTestKind proto.InternalMessageInfo

func (m *Optional_DynamicTestKind) GetValue() DynamicTestKind {
	if m != nil {
		return m.Value
	}
	return DynamicTestKind_DynamicTestKind_none
}

// Dynamic test kind. ENS stands for Enumerated status
type ENS_DynamicTestKind struct {
	// Quality of the value in 'stVal'.
	Q *Quality `protobuf:"bytes,1,opt,name=q,proto3" json:"q,omitempty"`
	// Value of the data.
	StVal DynamicTestKind `protobuf:"varint,2,opt,name=stVal,proto3,enum=commonmodule.DynamicTestKind" json:"stVal,omitempty"`
	// Timestamp of the last change or update event of 'stVal' or the last change of value in 'q'.
	T                    *Timestamp `protobuf:"bytes,3,opt,name=t,proto3" json:"t,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *ENS_DynamicTestKind) Reset()         { *m = ENS_DynamicTestKind{} }
func (m *ENS_DynamicTestKind) String() string { return proto.CompactTextString(m) }
func (*ENS_DynamicTestKind) ProtoMessage()    {}
func (*ENS_DynamicTestKind) Descriptor() ([]byte, []int) {
	return fileDescriptor_018fa6cbfd386c3e, []int{60}
}

func (m *ENS_DynamicTestKind) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ENS_DynamicTestKind.Unmarshal(m, b)
}
func (m *ENS_DynamicTestKind) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ENS_DynamicTestKind.Marshal(b, m, deterministic)
}
func (m *ENS_DynamicTestKind) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ENS_DynamicTestKind.Merge(m, src)
}
func (m *ENS_DynamicTestKind) XXX_Size() int {
	return xxx_messageInfo_ENS_DynamicTestKind.Size(m)
}
func (m *ENS_DynamicTestKind) XXX_DiscardUnknown() {
	xxx_messageInfo_ENS_DynamicTestKind.DiscardUnknown(m)
}

var xxx_messageInfo_ENS_DynamicTestKind proto.InternalMessageInfo

func (m *ENS_DynamicTestKind) GetQ() *Quality {
	if m != nil {
		return m.Q
	}
	return nil
}

func (m *ENS_DynamicTestKind) GetStVal() DynamicTestKind {
	if m != nil {
		return m.StVal
	}
	return DynamicTestKind_DynamicTestKind_none
}

func (m *ENS_DynamicTestKind) GetT() *Timestamp {
	if m != nil {
		return m.T
	}
	return nil
}

// Grid connect event &amp; status mode kind
type ENS_GridConnectModeKind struct {
	// Actual Grid Connection Mode
	StVal GridConnectModeKind `protobuf:"varint,1,opt,name=stVal,proto3,enum=commonmodule.GridConnectModeKind" json:"stVal,omitempty"`
	// MISSING DOCUMENTATION!!!
	StValExtension       string   `protobuf:"bytes,2,opt,name=stValExtension,proto3" json:"stValExtension,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ENS_GridConnectModeKind) Reset()         { *m = ENS_GridConnectModeKind{} }
func (m *ENS_GridConnectModeKind) String() string { return proto.CompactTextString(m) }
func (*ENS_GridConnectModeKind) ProtoMessage()    {}
func (*ENS_GridConnectModeKind) Descriptor() ([]byte, []int) {
	return fileDescriptor_018fa6cbfd386c3e, []int{61}
}

func (m *ENS_GridConnectModeKind) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ENS_GridConnectModeKind.Unmarshal(m, b)
}
func (m *ENS_GridConnectModeKind) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ENS_GridConnectModeKind.Marshal(b, m, deterministic)
}
func (m *ENS_GridConnectModeKind) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ENS_GridConnectModeKind.Merge(m, src)
}
func (m *ENS_GridConnectModeKind) XXX_Size() int {
	return xxx_messageInfo_ENS_GridConnectModeKind.Size(m)
}
func (m *ENS_GridConnectModeKind) XXX_DiscardUnknown() {
	xxx_messageInfo_ENS_GridConnectModeKind.DiscardUnknown(m)
}

var xxx_messageInfo_ENS_GridConnectModeKind proto.InternalMessageInfo

func (m *ENS_GridConnectModeKind) GetStVal() GridConnectModeKind {
	if m != nil {
		return m.StVal
	}
	return GridConnectModeKind_GridConnectModeKind_UNDEFINED
}

func (m *ENS_GridConnectModeKind) GetStValExtension() string {
	if m != nil {
		return m.StValExtension
	}
	return ""
}

type Optional_HealthKind struct {
	Value                HealthKind `protobuf:"varint,1,opt,name=value,proto3,enum=commonmodule.HealthKind" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *Optional_HealthKind) Reset()         { *m = Optional_HealthKind{} }
func (m *Optional_HealthKind) String() string { return proto.CompactTextString(m) }
func (*Optional_HealthKind) ProtoMessage()    {}
func (*Optional_HealthKind) Descriptor() ([]byte, []int) {
	return fileDescriptor_018fa6cbfd386c3e, []int{62}
}

func (m *Optional_HealthKind) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Optional_HealthKind.Unmarshal(m, b)
}
func (m *Optional_HealthKind) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Optional_HealthKind.Marshal(b, m, deterministic)
}
func (m *Optional_HealthKind) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Optional_HealthKind.Merge(m, src)
}
func (m *Optional_HealthKind) XXX_Size() int {
	return xxx_messageInfo_Optional_HealthKind.Size(m)
}
func (m *Optional_HealthKind) XXX_DiscardUnknown() {
	xxx_messageInfo_Optional_HealthKind.DiscardUnknown(m)
}

var xxx_messageInfo_Optional_HealthKind proto.InternalMessageInfo

func (m *Optional_HealthKind) GetValue() HealthKind {
	if m != nil {
		return m.Value
	}
	return HealthKind_HealthKind_none
}

// &lt;&gt; Enumerated status (ENS)
type ENS_HealthKind struct {
	// Textual description of the data. In case it is used within the CDC LPL, the description refers
	// to the logical node.
	D *wrappers.StringValue `protobuf:"bytes,1,opt,name=d,proto3" json:"d,omitempty"`
	// Value of the data.
	StVal                HealthKind `protobuf:"varint,2,opt,name=stVal,proto3,enum=commonmodule.HealthKind" json:"stVal,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *ENS_HealthKind) Reset()         { *m = ENS_HealthKind{} }
func (m *ENS_HealthKind) String() string { return proto.CompactTextString(m) }
func (*ENS_HealthKind) ProtoMessage()    {}
func (*ENS_HealthKind) Descriptor() ([]byte, []int) {
	return fileDescriptor_018fa6cbfd386c3e, []int{63}
}

func (m *ENS_HealthKind) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ENS_HealthKind.Unmarshal(m, b)
}
func (m *ENS_HealthKind) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ENS_HealthKind.Marshal(b, m, deterministic)
}
func (m *ENS_HealthKind) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ENS_HealthKind.Merge(m, src)
}
func (m *ENS_HealthKind) XXX_Size() int {
	return xxx_messageInfo_ENS_HealthKind.Size(m)
}
func (m *ENS_HealthKind) XXX_DiscardUnknown() {
	xxx_messageInfo_ENS_HealthKind.DiscardUnknown(m)
}

var xxx_messageInfo_ENS_HealthKind proto.InternalMessageInfo

func (m *ENS_HealthKind) GetD() *wrappers.StringValue {
	if m != nil {
		return m.D
	}
	return nil
}

func (m *ENS_HealthKind) GetStVal() HealthKind {
	if m != nil {
		return m.StVal
	}
	return HealthKind_HealthKind_none
}

// MISSING DOCUMENTATION!!!
type ESS struct {
	// UML inherited base object
	ConductingEquipment  *ConductingEquipment `protobuf:"bytes,1,opt,name=conductingEquipment,proto3" json:"conductingEquipment,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *ESS) Reset()         { *m = ESS{} }
func (m *ESS) String() string { return proto.CompactTextString(m) }
func (*ESS) ProtoMessage()    {}
func (*ESS) Descriptor() ([]byte, []int) {
	return fileDescriptor_018fa6cbfd386c3e, []int{64}
}

func (m *ESS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ESS.Unmarshal(m, b)
}
func (m *ESS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ESS.Marshal(b, m, deterministic)
}
func (m *ESS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ESS.Merge(m, src)
}
func (m *ESS) XXX_Size() int {
	return xxx_messageInfo_ESS.Size(m)
}
func (m *ESS) XXX_DiscardUnknown() {
	xxx_messageInfo_ESS.DiscardUnknown(m)
}

var xxx_messageInfo_ESS proto.InternalMessageInfo

func (m *ESS) GetConductingEquipment() *ConductingEquipment {
	if m != nil {
		return m.ConductingEquipment
	}
	return nil
}

// Generic event message information
type EventMessageInfo struct {
	// UML inherited base object
	MessageInfo          *MessageInfo `protobuf:"bytes,1,opt,name=messageInfo,proto3" json:"messageInfo,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *EventMessageInfo) Reset()         { *m = EventMessageInfo{} }
func (m *EventMessageInfo) String() string { return proto.CompactTextString(m) }
func (*EventMessageInfo) ProtoMessage()    {}
func (*EventMessageInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_018fa6cbfd386c3e, []int{65}
}

func (m *EventMessageInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EventMessageInfo.Unmarshal(m, b)
}
func (m *EventMessageInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EventMessageInfo.Marshal(b, m, deterministic)
}
func (m *EventMessageInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EventMessageInfo.Merge(m, src)
}
func (m *EventMessageInfo) XXX_Size() int {
	return xxx_messageInfo_EventMessageInfo.Size(m)
}
func (m *EventMessageInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_EventMessageInfo.DiscardUnknown(m)
}

var xxx_messageInfo_EventMessageInfo proto.InternalMessageInfo

func (m *EventMessageInfo) GetMessageInfo() *MessageInfo {
	if m != nil {
		return m.MessageInfo
	}
	return nil
}

// Event value
type EventValue struct {
	// UML inherited base object
	IdentifiedObject     *IdentifiedObject `protobuf:"bytes,1,opt,name=identifiedObject,proto3" json:"identifiedObject,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *EventValue) Reset()         { *m = EventValue{} }
func (m *EventValue) String() string { return proto.CompactTextString(m) }
func (*EventValue) ProtoMessage()    {}
func (*EventValue) Descriptor() ([]byte, []int) {
	return fileDescriptor_018fa6cbfd386c3e, []int{66}
}

func (m *EventValue) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EventValue.Unmarshal(m, b)
}
func (m *EventValue) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EventValue.Marshal(b, m, deterministic)
}
func (m *EventValue) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EventValue.Merge(m, src)
}
func (m *EventValue) XXX_Size() int {
	return xxx_messageInfo_EventValue.Size(m)
}
func (m *EventValue) XXX_DiscardUnknown() {
	xxx_messageInfo_EventValue.DiscardUnknown(m)
}

var xxx_messageInfo_EventValue proto.InternalMessageInfo

func (m *EventValue) GetIdentifiedObject() *IdentifiedObject {
	if m != nil {
		return m.IdentifiedObject
	}
	return nil
}

// The source where a forecast value is issued.
type ForecastValueSource struct {
	// UML inherited base object
	IdentifiedObject     *IdentifiedObject `protobuf:"bytes,1,opt,name=identifiedObject,proto3" json:"identifiedObject,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *ForecastValueSource) Reset()         { *m = ForecastValueSource{} }
func (m *ForecastValueSource) String() string { return proto.CompactTextString(m) }
func (*ForecastValueSource) ProtoMessage()    {}
func (*ForecastValueSource) Descriptor() ([]byte, []int) {
	return fileDescriptor_018fa6cbfd386c3e, []int{67}
}

func (m *ForecastValueSource) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ForecastValueSource.Unmarshal(m, b)
}
func (m *ForecastValueSource) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ForecastValueSource.Marshal(b, m, deterministic)
}
func (m *ForecastValueSource) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ForecastValueSource.Merge(m, src)
}
func (m *ForecastValueSource) XXX_Size() int {
	return xxx_messageInfo_ForecastValueSource.Size(m)
}
func (m *ForecastValueSource) XXX_DiscardUnknown() {
	xxx_messageInfo_ForecastValueSource.DiscardUnknown(m)
}

var xxx_messageInfo_ForecastValueSource proto.InternalMessageInfo

func (m *ForecastValueSource) GetIdentifiedObject() *IdentifiedObject {
	if m != nil {
		return m.IdentifiedObject
	}
	return nil
}

// Intelligent Electronic Device is a device with a microprocessor that can contain one or more
// (IEC61850) SERVERs. In the context of IEC61850, IED could be an electronic protection device, a
// controller or even a laptop/desktop computer. <b>Modelling note</b>: This class is not explicitly
// defined in IEC61850-7-2 (but only in SCL: IEC61850-6). However, it is an important concept that
// deserves its place in the meta-model. When the meta-model gets instantiated from a direct link to an
// IED with an IEC61850 SERVER, we typically create an instance of the meta-model IED per connection.
// When the meta-model gets instantiated from an SCL file, there is the full description of IED and its
// functions.
type ForecastIED struct {
	// UML inherited base object
	ForecastValueSource *ForecastValueSource `protobuf:"bytes,1,opt,name=forecastValueSource,proto3" json:"forecastValueSource,omitempty"`
	// For control, this is an application ID, unique within communication system, and if the message
	// is transformed between gateway the original source application ID should be kept.
	SourceApplicationID string `protobuf:"bytes,2,opt,name=sourceApplicationID,proto3" json:"sourceApplicationID,omitempty"`
	// Message publication date time
	SourceDateTime       int64    `protobuf:"varint,3,opt,name=sourceDateTime,proto3" json:"sourceDateTime,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ForecastIED) Reset()         { *m = ForecastIED{} }
func (m *ForecastIED) String() string { return proto.CompactTextString(m) }
func (*ForecastIED) ProtoMessage()    {}
func (*ForecastIED) Descriptor() ([]byte, []int) {
	return fileDescriptor_018fa6cbfd386c3e, []int{68}
}

func (m *ForecastIED) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ForecastIED.Unmarshal(m, b)
}
func (m *ForecastIED) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ForecastIED.Marshal(b, m, deterministic)
}
func (m *ForecastIED) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ForecastIED.Merge(m, src)
}
func (m *ForecastIED) XXX_Size() int {
	return xxx_messageInfo_ForecastIED.Size(m)
}
func (m *ForecastIED) XXX_DiscardUnknown() {
	xxx_messageInfo_ForecastIED.DiscardUnknown(m)
}

var xxx_messageInfo_ForecastIED proto.InternalMessageInfo

func (m *ForecastIED) GetForecastValueSource() *ForecastValueSource {
	if m != nil {
		return m.ForecastValueSource
	}
	return nil
}

func (m *ForecastIED) GetSourceApplicationID() string {
	if m != nil {
		return m.SourceApplicationID
	}
	return ""
}

func (m *ForecastIED) GetSourceDateTime() int64 {
	if m != nil {
		return m.SourceDateTime
	}
	return 0
}

// Forecast value
type ForecastValue struct {
	// UML inherited base object
	IdentifiedObject     *IdentifiedObject `protobuf:"bytes,1,opt,name=identifiedObject,proto3" json:"identifiedObject,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *ForecastValue) Reset()         { *m = ForecastValue{} }
func (m *ForecastValue) String() string { return proto.CompactTextString(m) }
func (*ForecastValue) ProtoMessage()    {}
func (*ForecastValue) Descriptor() ([]byte, []int) {
	return fileDescriptor_018fa6cbfd386c3e, []int{69}
}

func (m *ForecastValue) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ForecastValue.Unmarshal(m, b)
}
func (m *ForecastValue) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ForecastValue.Marshal(b, m, deterministic)
}
func (m *ForecastValue) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ForecastValue.Merge(m, src)
}
func (m *ForecastValue) XXX_Size() int {
	return xxx_messageInfo_ForecastValue.Size(m)
}
func (m *ForecastValue) XXX_DiscardUnknown() {
	xxx_messageInfo_ForecastValue.DiscardUnknown(m)
}

var xxx_messageInfo_ForecastValue proto.InternalMessageInfo

func (m *ForecastValue) GetIdentifiedObject() *IdentifiedObject {
	if m != nil {
		return m.IdentifiedObject
	}
	return nil
}

// Intelligent Electronic Device is a device with a microprocessor that can contain one or more
// (IEC61850) SERVERs. In the context of IEC61850, IED could be an electronic protection device, a
// controller or even a laptop/desktop computer. <b>Modelling note</b>: This class is not explicitly
// defined in IEC61850-7-2 (but only in SCL: IEC61850-6). However, it is an important concept that
// deserves its place in the meta-model. When the meta-model gets instantiated from a direct link to an
// IED with an IEC61850 SERVER, we typically create an instance of the meta-model IED per connection.
// When the meta-model gets instantiated from an SCL file, there is the full description of IED and its
// functions.
type IED struct {
	// UML inherited base object
	IdentifiedObject     *IdentifiedObject `protobuf:"bytes,1,opt,name=identifiedObject,proto3" json:"identifiedObject,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *IED) Reset()         { *m = IED{} }
func (m *IED) String() string { return proto.CompactTextString(m) }
func (*IED) ProtoMessage()    {}
func (*IED) Descriptor() ([]byte, []int) {
	return fileDescriptor_018fa6cbfd386c3e, []int{70}
}

func (m *IED) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IED.Unmarshal(m, b)
}
func (m *IED) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IED.Marshal(b, m, deterministic)
}
func (m *IED) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IED.Merge(m, src)
}
func (m *IED) XXX_Size() int {
	return xxx_messageInfo_IED.Size(m)
}
func (m *IED) XXX_DiscardUnknown() {
	xxx_messageInfo_IED.DiscardUnknown(m)
}

var xxx_messageInfo_IED proto.InternalMessageInfo

func (m *IED) GetIdentifiedObject() *IdentifiedObject {
	if m != nil {
		return m.IdentifiedObject
	}
	return nil
}

// <<statistics>> Integer status (INS)
type StatusINS struct {
	// Quality of the value in 'stVal'.
	Q *Quality `protobuf:"bytes,1,opt,name=q,proto3" json:"q,omitempty"`
	// Value of the data.
	StVal int32 `protobuf:"varint,2,opt,name=stVal,proto3" json:"stVal,omitempty"`
	// Timestamp of the last change or update event of 'stVal' or the last change of value in 'q'.
	T *Timestamp `protobuf:"bytes,3,opt,name=t,proto3" json:"t,omitempty"`
	// Units for: 'stVal', 'subVal'.
	Units                *Unit    `protobuf:"bytes,4,opt,name=units,proto3" json:"units,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StatusINS) Reset()         { *m = StatusINS{} }
func (m *StatusINS) String() string { return proto.CompactTextString(m) }
func (*StatusINS) ProtoMessage()    {}
func (*StatusINS) Descriptor() ([]byte, []int) {
	return fileDescriptor_018fa6cbfd386c3e, []int{71}
}

func (m *StatusINS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StatusINS.Unmarshal(m, b)
}
func (m *StatusINS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StatusINS.Marshal(b, m, deterministic)
}
func (m *StatusINS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StatusINS.Merge(m, src)
}
func (m *StatusINS) XXX_Size() int {
	return xxx_messageInfo_StatusINS.Size(m)
}
func (m *StatusINS) XXX_DiscardUnknown() {
	xxx_messageInfo_StatusINS.DiscardUnknown(m)
}

var xxx_messageInfo_StatusINS proto.InternalMessageInfo

func (m *StatusINS) GetQ() *Quality {
	if m != nil {
		return m.Q
	}
	return nil
}

func (m *StatusINS) GetStVal() int32 {
	if m != nil {
		return m.StVal
	}
	return 0
}

func (m *StatusINS) GetT() *Timestamp {
	if m != nil {
		return m.T
	}
	return nil
}

func (m *StatusINS) GetUnits() *Unit {
	if m != nil {
		return m.Units
	}
	return nil
}

// Status expressed in integer based on IEC61850 GGIO.
type IntegerStatusGGIO struct {
	// UML inherited base object
	LogicalNode *LogicalNode `protobuf:"bytes,1,opt,name=logicalNode,proto3" json:"logicalNode,omitempty"`
	// Generic integer status input <i>n</i>.
	IntIn *StatusINS `protobuf:"bytes,2,opt,name=IntIn,proto3" json:"IntIn,omitempty"`
	// Phase code
	Phase                *Optional_PhaseCodeKind `protobuf:"bytes,3,opt,name=Phase,proto3" json:"Phase,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *IntegerStatusGGIO) Reset()         { *m = IntegerStatusGGIO{} }
func (m *IntegerStatusGGIO) String() string { return proto.CompactTextString(m) }
func (*IntegerStatusGGIO) ProtoMessage()    {}
func (*IntegerStatusGGIO) Descriptor() ([]byte, []int) {
	return fileDescriptor_018fa6cbfd386c3e, []int{72}
}

func (m *IntegerStatusGGIO) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IntegerStatusGGIO.Unmarshal(m, b)
}
func (m *IntegerStatusGGIO) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IntegerStatusGGIO.Marshal(b, m, deterministic)
}
func (m *IntegerStatusGGIO) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IntegerStatusGGIO.Merge(m, src)
}
func (m *IntegerStatusGGIO) XXX_Size() int {
	return xxx_messageInfo_IntegerStatusGGIO.Size(m)
}
func (m *IntegerStatusGGIO) XXX_DiscardUnknown() {
	xxx_messageInfo_IntegerStatusGGIO.DiscardUnknown(m)
}

var xxx_messageInfo_IntegerStatusGGIO proto.InternalMessageInfo

func (m *IntegerStatusGGIO) GetLogicalNode() *LogicalNode {
	if m != nil {
		return m.LogicalNode
	}
	return nil
}

func (m *IntegerStatusGGIO) GetIntIn() *StatusINS {
	if m != nil {
		return m.IntIn
	}
	return nil
}

func (m *IntegerStatusGGIO) GetPhase() *Optional_PhaseCodeKind {
	if m != nil {
		return m.Phase
	}
	return nil
}

// Logical node for event and status
type LogicalNodeForEventAndStatus struct {
	// UML inherited base object
	LogicalNode *LogicalNode `protobuf:"bytes,1,opt,name=logicalNode,proto3" json:"logicalNode,omitempty"`
	// Behavior of the function
	Beh *ENS_BehaviourModeKind `protobuf:"bytes,2,opt,name=Beh,proto3" json:"Beh,omitempty"`
	// Asset health
	EEHealth             *ENS_HealthKind `protobuf:"bytes,3,opt,name=EEHealth,proto3" json:"EEHealth,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *LogicalNodeForEventAndStatus) Reset()         { *m = LogicalNodeForEventAndStatus{} }
func (m *LogicalNodeForEventAndStatus) String() string { return proto.CompactTextString(m) }
func (*LogicalNodeForEventAndStatus) ProtoMessage()    {}
func (*LogicalNodeForEventAndStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor_018fa6cbfd386c3e, []int{73}
}

func (m *LogicalNodeForEventAndStatus) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LogicalNodeForEventAndStatus.Unmarshal(m, b)
}
func (m *LogicalNodeForEventAndStatus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LogicalNodeForEventAndStatus.Marshal(b, m, deterministic)
}
func (m *LogicalNodeForEventAndStatus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LogicalNodeForEventAndStatus.Merge(m, src)
}
func (m *LogicalNodeForEventAndStatus) XXX_Size() int {
	return xxx_messageInfo_LogicalNodeForEventAndStatus.Size(m)
}
func (m *LogicalNodeForEventAndStatus) XXX_DiscardUnknown() {
	xxx_messageInfo_LogicalNodeForEventAndStatus.DiscardUnknown(m)
}

var xxx_messageInfo_LogicalNodeForEventAndStatus proto.InternalMessageInfo

func (m *LogicalNodeForEventAndStatus) GetLogicalNode() *LogicalNode {
	if m != nil {
		return m.LogicalNode
	}
	return nil
}

func (m *LogicalNodeForEventAndStatus) GetBeh() *ENS_BehaviourModeKind {
	if m != nil {
		return m.Beh
	}
	return nil
}

func (m *LogicalNodeForEventAndStatus) GetEEHealth() *ENS_HealthKind {
	if m != nil {
		return m.EEHealth
	}
	return nil
}

// The current state for a measurement. A state value is an instance of a measurement from a
// specific source. Measurements can be associated with many state values, each representing a
// different source for the measurement.
type MeasurementValue struct {
	// UML inherited base object
	IdentifiedObject     *IdentifiedObject `protobuf:"bytes,1,opt,name=identifiedObject,proto3" json:"identifiedObject,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *MeasurementValue) Reset()         { *m = MeasurementValue{} }
func (m *MeasurementValue) String() string { return proto.CompactTextString(m) }
func (*MeasurementValue) ProtoMessage()    {}
func (*MeasurementValue) Descriptor() ([]byte, []int) {
	return fileDescriptor_018fa6cbfd386c3e, []int{74}
}

func (m *MeasurementValue) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MeasurementValue.Unmarshal(m, b)
}
func (m *MeasurementValue) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MeasurementValue.Marshal(b, m, deterministic)
}
func (m *MeasurementValue) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MeasurementValue.Merge(m, src)
}
func (m *MeasurementValue) XXX_Size() int {
	return xxx_messageInfo_MeasurementValue.Size(m)
}
func (m *MeasurementValue) XXX_DiscardUnknown() {
	xxx_messageInfo_MeasurementValue.DiscardUnknown(m)
}

var xxx_messageInfo_MeasurementValue proto.InternalMessageInfo

func (m *MeasurementValue) GetIdentifiedObject() *IdentifiedObject {
	if m != nil {
		return m.IdentifiedObject
	}
	return nil
}

// Physical asset that performs the metering role of the usage point. Used for measuring
// consumption and detection of events.
type Meter struct {
	// UML inherited base object
	ConductingEquipment  *ConductingEquipment `protobuf:"bytes,1,opt,name=conductingEquipment,proto3" json:"conductingEquipment,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Meter) Reset()         { *m = Meter{} }
func (m *Meter) String() string { return proto.CompactTextString(m) }
func (*Meter) ProtoMessage()    {}
func (*Meter) Descriptor() ([]byte, []int) {
	return fileDescriptor_018fa6cbfd386c3e, []int{75}
}

func (m *Meter) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Meter.Unmarshal(m, b)
}
func (m *Meter) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Meter.Marshal(b, m, deterministic)
}
func (m *Meter) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Meter.Merge(m, src)
}
func (m *Meter) XXX_Size() int {
	return xxx_messageInfo_Meter.Size(m)
}
func (m *Meter) XXX_DiscardUnknown() {
	xxx_messageInfo_Meter.DiscardUnknown(m)
}

var xxx_messageInfo_Meter proto.InternalMessageInfo

func (m *Meter) GetConductingEquipment() *ConductingEquipment {
	if m != nil {
		return m.ConductingEquipment
	}
	return nil
}

// Generic event message information
type OptimizationMessageInfo struct {
	// UML inherited base object
	MessageInfo          *MessageInfo `protobuf:"bytes,1,opt,name=messageInfo,proto3" json:"messageInfo,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *OptimizationMessageInfo) Reset()         { *m = OptimizationMessageInfo{} }
func (m *OptimizationMessageInfo) String() string { return proto.CompactTextString(m) }
func (*OptimizationMessageInfo) ProtoMessage()    {}
func (*OptimizationMessageInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_018fa6cbfd386c3e, []int{76}
}

func (m *OptimizationMessageInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OptimizationMessageInfo.Unmarshal(m, b)
}
func (m *OptimizationMessageInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OptimizationMessageInfo.Marshal(b, m, deterministic)
}
func (m *OptimizationMessageInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OptimizationMessageInfo.Merge(m, src)
}
func (m *OptimizationMessageInfo) XXX_Size() int {
	return xxx_messageInfo_OptimizationMessageInfo.Size(m)
}
func (m *OptimizationMessageInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_OptimizationMessageInfo.DiscardUnknown(m)
}

var xxx_messageInfo_OptimizationMessageInfo proto.InternalMessageInfo

func (m *OptimizationMessageInfo) GetMessageInfo() *MessageInfo {
	if m != nil {
		return m.MessageInfo
	}
	return nil
}

// Specialized 61850 MMTN LN class
type ReadingMMTN struct {
	// UML inherited base object
	LogicalNode *LogicalNode `protobuf:"bytes,1,opt,name=logicalNode,proto3" json:"logicalNode,omitempty"`
	// Apparent energy demand (direction: from busbar).
	DmdVAh *BCR `protobuf:"bytes,2,opt,name=DmdVAh,proto3" json:"DmdVAh,omitempty"`
	// Reactive energy demand (direction: from busbar).
	DmdVArh *BCR `protobuf:"bytes,3,opt,name=DmdVArh,proto3" json:"DmdVArh,omitempty"`
	// Real energy demand (direction: from busbar).
	DmdWh *BCR `protobuf:"bytes,4,opt,name=DmdWh,proto3" json:"DmdWh,omitempty"`
	// Apparent energy supply (default direction: towards busbar).
	SupVAh *BCR `protobuf:"bytes,5,opt,name=SupVAh,proto3" json:"SupVAh,omitempty"`
	// Reactive energy supply (default direction: towards busbar).
	SupVArh *BCR `protobuf:"bytes,6,opt,name=SupVArh,proto3" json:"SupVArh,omitempty"`
	// Real energy supply (default direction: towards busbar).
	SupWh *BCR `protobuf:"bytes,7,opt,name=SupWh,proto3" json:"SupWh,omitempty"`
	// Net apparent energy since last reset.
	TotVAh *BCR `protobuf:"bytes,8,opt,name=TotVAh,proto3" json:"TotVAh,omitempty"`
	// Net reactive energy since last reset.
	TotVArh *BCR `protobuf:"bytes,9,opt,name=TotVArh,proto3" json:"TotVArh,omitempty"`
	// Net real energy since last reset.
	TotWh                *BCR     `protobuf:"bytes,10,opt,name=TotWh,proto3" json:"TotWh,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReadingMMTN) Reset()         { *m = ReadingMMTN{} }
func (m *ReadingMMTN) String() string { return proto.CompactTextString(m) }
func (*ReadingMMTN) ProtoMessage()    {}
func (*ReadingMMTN) Descriptor() ([]byte, []int) {
	return fileDescriptor_018fa6cbfd386c3e, []int{77}
}

func (m *ReadingMMTN) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReadingMMTN.Unmarshal(m, b)
}
func (m *ReadingMMTN) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReadingMMTN.Marshal(b, m, deterministic)
}
func (m *ReadingMMTN) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReadingMMTN.Merge(m, src)
}
func (m *ReadingMMTN) XXX_Size() int {
	return xxx_messageInfo_ReadingMMTN.Size(m)
}
func (m *ReadingMMTN) XXX_DiscardUnknown() {
	xxx_messageInfo_ReadingMMTN.DiscardUnknown(m)
}

var xxx_messageInfo_ReadingMMTN proto.InternalMessageInfo

func (m *ReadingMMTN) GetLogicalNode() *LogicalNode {
	if m != nil {
		return m.LogicalNode
	}
	return nil
}

func (m *ReadingMMTN) GetDmdVAh() *BCR {
	if m != nil {
		return m.DmdVAh
	}
	return nil
}

func (m *ReadingMMTN) GetDmdVArh() *BCR {
	if m != nil {
		return m.DmdVArh
	}
	return nil
}

func (m *ReadingMMTN) GetDmdWh() *BCR {
	if m != nil {
		return m.DmdWh
	}
	return nil
}

func (m *ReadingMMTN) GetSupVAh() *BCR {
	if m != nil {
		return m.SupVAh
	}
	return nil
}

func (m *ReadingMMTN) GetSupVArh() *BCR {
	if m != nil {
		return m.SupVArh
	}
	return nil
}

func (m *ReadingMMTN) GetSupWh() *BCR {
	if m != nil {
		return m.SupWh
	}
	return nil
}

func (m *ReadingMMTN) GetTotVAh() *BCR {
	if m != nil {
		return m.TotVAh
	}
	return nil
}

func (m *ReadingMMTN) GetTotVArh() *BCR {
	if m != nil {
		return m.TotVArh
	}
	return nil
}

func (m *ReadingMMTN) GetTotWh() *BCR {
	if m != nil {
		return m.TotWh
	}
	return nil
}

// Specialized 61850 MMTN LN class
type PhaseMMTN struct {
	// MISSING DOCUMENTATION!!!
	PhsA *ReadingMMTN `protobuf:"bytes,1,opt,name=phsA,proto3" json:"phsA,omitempty"`
	// MISSING DOCUMENTATION!!!
	PhsAB *ReadingMMTN `protobuf:"bytes,2,opt,name=phsAB,proto3" json:"phsAB,omitempty"`
	// MISSING DOCUMENTATION!!!
	PhsB *ReadingMMTN `protobuf:"bytes,3,opt,name=phsB,proto3" json:"phsB,omitempty"`
	// MISSING DOCUMENTATION!!!
	PhsBC *ReadingMMTN `protobuf:"bytes,4,opt,name=phsBC,proto3" json:"phsBC,omitempty"`
	// MISSING DOCUMENTATION!!!
	PhsC *ReadingMMTN `protobuf:"bytes,5,opt,name=phsC,proto3" json:"phsC,omitempty"`
	// MISSING DOCUMENTATION!!!
	PhsCA                *ReadingMMTN `protobuf:"bytes,6,opt,name=phsCA,proto3" json:"phsCA,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *PhaseMMTN) Reset()         { *m = PhaseMMTN{} }
func (m *PhaseMMTN) String() string { return proto.CompactTextString(m) }
func (*PhaseMMTN) ProtoMessage()    {}
func (*PhaseMMTN) Descriptor() ([]byte, []int) {
	return fileDescriptor_018fa6cbfd386c3e, []int{78}
}

func (m *PhaseMMTN) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PhaseMMTN.Unmarshal(m, b)
}
func (m *PhaseMMTN) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PhaseMMTN.Marshal(b, m, deterministic)
}
func (m *PhaseMMTN) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PhaseMMTN.Merge(m, src)
}
func (m *PhaseMMTN) XXX_Size() int {
	return xxx_messageInfo_PhaseMMTN.Size(m)
}
func (m *PhaseMMTN) XXX_DiscardUnknown() {
	xxx_messageInfo_PhaseMMTN.DiscardUnknown(m)
}

var xxx_messageInfo_PhaseMMTN proto.InternalMessageInfo

func (m *PhaseMMTN) GetPhsA() *ReadingMMTN {
	if m != nil {
		return m.PhsA
	}
	return nil
}

func (m *PhaseMMTN) GetPhsAB() *ReadingMMTN {
	if m != nil {
		return m.PhsAB
	}
	return nil
}

func (m *PhaseMMTN) GetPhsB() *ReadingMMTN {
	if m != nil {
		return m.PhsB
	}
	return nil
}

func (m *PhaseMMTN) GetPhsBC() *ReadingMMTN {
	if m != nil {
		return m.PhsBC
	}
	return nil
}

func (m *PhaseMMTN) GetPhsC() *ReadingMMTN {
	if m != nil {
		return m.PhsC
	}
	return nil
}

func (m *PhaseMMTN) GetPhsCA() *ReadingMMTN {
	if m != nil {
		return m.PhsCA
	}
	return nil
}

// Grid connect mode kind
type RampRate struct {
	// MISSING DOCUMENTATION!!!
	NegativeReactivePowerKVArPerMin *wrappers.FloatValue `protobuf:"bytes,1,opt,name=negativeReactivePowerKVArPerMin,proto3" json:"negativeReactivePowerKVArPerMin,omitempty"`
	// MISSING DOCUMENTATION!!!
	NegativeRealPowerKWPerMin *wrappers.FloatValue `protobuf:"bytes,2,opt,name=negativeRealPowerKWPerMin,proto3" json:"negativeRealPowerKWPerMin,omitempty"`
	// MISSING DOCUMENTATION!!!
	PositiveReactivePowerKVArPerMin *wrappers.FloatValue `protobuf:"bytes,3,opt,name=positiveReactivePowerKVArPerMin,proto3" json:"positiveReactivePowerKVArPerMin,omitempty"`
	// MISSING DOCUMENTATION!!!
	PositiveRealPowerKWPerMin *wrappers.FloatValue `protobuf:"bytes,4,opt,name=positiveRealPowerKWPerMin,proto3" json:"positiveRealPowerKWPerMin,omitempty"`
	XXX_NoUnkeyedLiteral      struct{}             `json:"-"`
	XXX_unrecognized          []byte               `json:"-"`
	XXX_sizecache             int32                `json:"-"`
}

func (m *RampRate) Reset()         { *m = RampRate{} }
func (m *RampRate) String() string { return proto.CompactTextString(m) }
func (*RampRate) ProtoMessage()    {}
func (*RampRate) Descriptor() ([]byte, []int) {
	return fileDescriptor_018fa6cbfd386c3e, []int{79}
}

func (m *RampRate) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RampRate.Unmarshal(m, b)
}
func (m *RampRate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RampRate.Marshal(b, m, deterministic)
}
func (m *RampRate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RampRate.Merge(m, src)
}
func (m *RampRate) XXX_Size() int {
	return xxx_messageInfo_RampRate.Size(m)
}
func (m *RampRate) XXX_DiscardUnknown() {
	xxx_messageInfo_RampRate.DiscardUnknown(m)
}

var xxx_messageInfo_RampRate proto.InternalMessageInfo

func (m *RampRate) GetNegativeReactivePowerKVArPerMin() *wrappers.FloatValue {
	if m != nil {
		return m.NegativeReactivePowerKVArPerMin
	}
	return nil
}

func (m *RampRate) GetNegativeRealPowerKWPerMin() *wrappers.FloatValue {
	if m != nil {
		return m.NegativeRealPowerKWPerMin
	}
	return nil
}

func (m *RampRate) GetPositiveReactivePowerKVArPerMin() *wrappers.FloatValue {
	if m != nil {
		return m.PositiveReactivePowerKVArPerMin
	}
	return nil
}

func (m *RampRate) GetPositiveRealPowerKWPerMin() *wrappers.FloatValue {
	if m != nil {
		return m.PositiveRealPowerKWPerMin
	}
	return nil
}

// Generic reading message information
type ReadingMessageInfo struct {
	// UML inherited base object
	MessageInfo          *MessageInfo `protobuf:"bytes,1,opt,name=messageInfo,proto3" json:"messageInfo,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *ReadingMessageInfo) Reset()         { *m = ReadingMessageInfo{} }
func (m *ReadingMessageInfo) String() string { return proto.CompactTextString(m) }
func (*ReadingMessageInfo) ProtoMessage()    {}
func (*ReadingMessageInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_018fa6cbfd386c3e, []int{80}
}

func (m *ReadingMessageInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReadingMessageInfo.Unmarshal(m, b)
}
func (m *ReadingMessageInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReadingMessageInfo.Marshal(b, m, deterministic)
}
func (m *ReadingMessageInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReadingMessageInfo.Merge(m, src)
}
func (m *ReadingMessageInfo) XXX_Size() int {
	return xxx_messageInfo_ReadingMessageInfo.Size(m)
}
func (m *ReadingMessageInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_ReadingMessageInfo.DiscardUnknown(m)
}

var xxx_messageInfo_ReadingMessageInfo proto.InternalMessageInfo

func (m *ReadingMessageInfo) GetMessageInfo() *MessageInfo {
	if m != nil {
		return m.MessageInfo
	}
	return nil
}

// Specialized 61850 MMTR class
type ReadingMMTR struct {
	// UML inherited base object
	LogicalNode *LogicalNode `protobuf:"bytes,1,opt,name=logicalNode,proto3" json:"logicalNode,omitempty"`
	// Apparent energy demand (direction: from busbar).
	DmdVAh *BCR `protobuf:"bytes,2,opt,name=DmdVAh,proto3" json:"DmdVAh,omitempty"`
	// Reactive energy demand (direction: from busbar).
	DmdVArh *BCR `protobuf:"bytes,3,opt,name=DmdVArh,proto3" json:"DmdVArh,omitempty"`
	// Real energy demand (direction: from busbar).
	DmdWh *BCR `protobuf:"bytes,4,opt,name=DmdWh,proto3" json:"DmdWh,omitempty"`
	// Apparent energy supply (default direction: towards busbar).
	SupVAh *BCR `protobuf:"bytes,5,opt,name=SupVAh,proto3" json:"SupVAh,omitempty"`
	// Reactive energy supply (default direction: towards busbar).
	SupVArh *BCR `protobuf:"bytes,6,opt,name=SupVArh,proto3" json:"SupVArh,omitempty"`
	// Real energy supply (default direction: towards busbar).
	SupWh *BCR `protobuf:"bytes,7,opt,name=SupWh,proto3" json:"SupWh,omitempty"`
	// Net apparent energy since last reset.
	TotVAh *BCR `protobuf:"bytes,8,opt,name=TotVAh,proto3" json:"TotVAh,omitempty"`
	// Net reactive energy since last reset.
	TotVArh *BCR `protobuf:"bytes,9,opt,name=TotVArh,proto3" json:"TotVArh,omitempty"`
	// Net real energy since last reset.
	TotWh                *BCR     `protobuf:"bytes,10,opt,name=TotWh,proto3" json:"TotWh,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReadingMMTR) Reset()         { *m = ReadingMMTR{} }
func (m *ReadingMMTR) String() string { return proto.CompactTextString(m) }
func (*ReadingMMTR) ProtoMessage()    {}
func (*ReadingMMTR) Descriptor() ([]byte, []int) {
	return fileDescriptor_018fa6cbfd386c3e, []int{81}
}

func (m *ReadingMMTR) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReadingMMTR.Unmarshal(m, b)
}
func (m *ReadingMMTR) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReadingMMTR.Marshal(b, m, deterministic)
}
func (m *ReadingMMTR) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReadingMMTR.Merge(m, src)
}
func (m *ReadingMMTR) XXX_Size() int {
	return xxx_messageInfo_ReadingMMTR.Size(m)
}
func (m *ReadingMMTR) XXX_DiscardUnknown() {
	xxx_messageInfo_ReadingMMTR.DiscardUnknown(m)
}

var xxx_messageInfo_ReadingMMTR proto.InternalMessageInfo

func (m *ReadingMMTR) GetLogicalNode() *LogicalNode {
	if m != nil {
		return m.LogicalNode
	}
	return nil
}

func (m *ReadingMMTR) GetDmdVAh() *BCR {
	if m != nil {
		return m.DmdVAh
	}
	return nil
}

func (m *ReadingMMTR) GetDmdVArh() *BCR {
	if m != nil {
		return m.DmdVArh
	}
	return nil
}

func (m *ReadingMMTR) GetDmdWh() *BCR {
	if m != nil {
		return m.DmdWh
	}
	return nil
}

func (m *ReadingMMTR) GetSupVAh() *BCR {
	if m != nil {
		return m.SupVAh
	}
	return nil
}

func (m *ReadingMMTR) GetSupVArh() *BCR {
	if m != nil {
		return m.SupVArh
	}
	return nil
}

func (m *ReadingMMTR) GetSupWh() *BCR {
	if m != nil {
		return m.SupWh
	}
	return nil
}

func (m *ReadingMMTR) GetTotVAh() *BCR {
	if m != nil {
		return m.TotVAh
	}
	return nil
}

func (m *ReadingMMTR) GetTotVArh() *BCR {
	if m != nil {
		return m.TotVArh
	}
	return nil
}

func (m *ReadingMMTR) GetTotWh() *BCR {
	if m != nil {
		return m.TotWh
	}
	return nil
}

// Phase to ground/neutral related measured values of a three-phase system (WYE)
type WYE struct {
	// Net current, as the algebraic sum of the instantaneous values of currents flowing through all
	// live conductors and the neutral of a circuit at one point of the electrical installation ('phsA
	// instCVal'+'phsB.instCVal'+'phsC.instCVal'+'neut.instCVal').
	Net *CMV `protobuf:"bytes,1,opt,name=net,proto3" json:"net,omitempty"`
	// Value of the measured phase neutral. If a direct measurement of this value is not available, it
	// is acceptable to substitute an estimate computed by creating the algebraic sum of the instantaneous
	// values of currents flowing through all live conductors ('phsA.instCVal'+'phsB.instCVal'+'phsC
	// instCVal'); in that case, 'neut'='res'.
	Neut *CMV `protobuf:"bytes,2,opt,name=neut,proto3" json:"neut,omitempty"`
	// Value of phase A.
	PhsA *CMV `protobuf:"bytes,3,opt,name=phsA,proto3" json:"phsA,omitempty"`
	// Value of phase B.
	PhsB *CMV `protobuf:"bytes,4,opt,name=phsB,proto3" json:"phsB,omitempty"`
	// Value of phase C.
	PhsC                 *CMV     `protobuf:"bytes,5,opt,name=phsC,proto3" json:"phsC,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WYE) Reset()         { *m = WYE{} }
func (m *WYE) String() string { return proto.CompactTextString(m) }
func (*WYE) ProtoMessage()    {}
func (*WYE) Descriptor() ([]byte, []int) {
	return fileDescriptor_018fa6cbfd386c3e, []int{82}
}

func (m *WYE) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WYE.Unmarshal(m, b)
}
func (m *WYE) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WYE.Marshal(b, m, deterministic)
}
func (m *WYE) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WYE.Merge(m, src)
}
func (m *WYE) XXX_Size() int {
	return xxx_messageInfo_WYE.Size(m)
}
func (m *WYE) XXX_DiscardUnknown() {
	xxx_messageInfo_WYE.DiscardUnknown(m)
}

var xxx_messageInfo_WYE proto.InternalMessageInfo

func (m *WYE) GetNet() *CMV {
	if m != nil {
		return m.Net
	}
	return nil
}

func (m *WYE) GetNeut() *CMV {
	if m != nil {
		return m.Neut
	}
	return nil
}

func (m *WYE) GetPhsA() *CMV {
	if m != nil {
		return m.PhsA
	}
	return nil
}

func (m *WYE) GetPhsB() *CMV {
	if m != nil {
		return m.PhsB
	}
	return nil
}

func (m *WYE) GetPhsC() *CMV {
	if m != nil {
		return m.PhsC
	}
	return nil
}

// Specialized 61850 MMXU LN class
type ReadingMMXU struct {
	// UML inherited base object
	LogicalNode *LogicalNode `protobuf:"bytes,1,opt,name=logicalNode,proto3" json:"logicalNode,omitempty"`
	// Phase to ground/phase to neutral three phase currents.
	A *WYE `protobuf:"bytes,2,opt,name=A,proto3" json:"A,omitempty"`
	// Kind of statistical calculation, specifying how the data attributes that represent analogue
	// values have been calculated. The calculation method shall be the same for all data objects of the
	// logical node instance.If the value is 'PEAK_FUNDAMENTAL', angle may be present in a data object of
	// complex measured value type (CMV, such as in WYE, DEL, etc.), otherwise angle is not used (if
	// ‘TRUE_RMS’ and ‘RMS_FUNDAMENTAL’).If the value is 'unspecified', the dependent data objects may be
	// meaningless.
	ClcMth *ENG_CalcMethodKind `protobuf:"bytes,3,opt,name=ClcMth,proto3" json:"ClcMth,omitempty"`
	// Frequency [Hz].
	Hz *MV `protobuf:"bytes,4,opt,name=Hz,proto3" json:"Hz,omitempty"`
	// Phase to ground/phase to neutral power factors.The power factor is defined as P (active power) /
	// S (apparent power), so the value range is 0...1. If current (I) and voltage (U) are sinusoidal and
	// displaced by the angle phi, then the power factor is |cos phi|, again with the value range 0...1.
	// Therefore, for the power factor per phase, value is contained in 'mag' and 'ang' is not used.
	PF *WYE `protobuf:"bytes,5,opt,name=PF,proto3" json:"PF,omitempty"`
	// Sign convention for power factor 'PF' (and reactive power 'VAr').
	PFSign *ENG_PFSignKind `protobuf:"bytes,6,opt,name=PFSign,proto3" json:"PFSign,omitempty"`
	// Phase to ground (line) voltages.
	PhV *WYE `protobuf:"bytes,7,opt,name=PhV,proto3" json:"PhV,omitempty"`
	// Phase to phase voltages.
	PPV *DEL `protobuf:"bytes,8,opt,name=PPV,proto3" json:"PPV,omitempty"`
	// Phase to ground/phase to neutral apparent powers S.
	VA *WYE `protobuf:"bytes,9,opt,name=VA,proto3" json:"VA,omitempty"`
	// Phase to ground/phase to neutral reactive powers Q.
	VAr *WYE `protobuf:"bytes,10,opt,name=VAr,proto3" json:"VAr,omitempty"`
	// Phase to ground/phase to neutral real powers P.
	W                    *WYE     `protobuf:"bytes,11,opt,name=W,proto3" json:"W,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReadingMMXU) Reset()         { *m = ReadingMMXU{} }
func (m *ReadingMMXU) String() string { return proto.CompactTextString(m) }
func (*ReadingMMXU) ProtoMessage()    {}
func (*ReadingMMXU) Descriptor() ([]byte, []int) {
	return fileDescriptor_018fa6cbfd386c3e, []int{83}
}

func (m *ReadingMMXU) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReadingMMXU.Unmarshal(m, b)
}
func (m *ReadingMMXU) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReadingMMXU.Marshal(b, m, deterministic)
}
func (m *ReadingMMXU) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReadingMMXU.Merge(m, src)
}
func (m *ReadingMMXU) XXX_Size() int {
	return xxx_messageInfo_ReadingMMXU.Size(m)
}
func (m *ReadingMMXU) XXX_DiscardUnknown() {
	xxx_messageInfo_ReadingMMXU.DiscardUnknown(m)
}

var xxx_messageInfo_ReadingMMXU proto.InternalMessageInfo

func (m *ReadingMMXU) GetLogicalNode() *LogicalNode {
	if m != nil {
		return m.LogicalNode
	}
	return nil
}

func (m *ReadingMMXU) GetA() *WYE {
	if m != nil {
		return m.A
	}
	return nil
}

func (m *ReadingMMXU) GetClcMth() *ENG_CalcMethodKind {
	if m != nil {
		return m.ClcMth
	}
	return nil
}

func (m *ReadingMMXU) GetHz() *MV {
	if m != nil {
		return m.Hz
	}
	return nil
}

func (m *ReadingMMXU) GetPF() *WYE {
	if m != nil {
		return m.PF
	}
	return nil
}

func (m *ReadingMMXU) GetPFSign() *ENG_PFSignKind {
	if m != nil {
		return m.PFSign
	}
	return nil
}

func (m *ReadingMMXU) GetPhV() *WYE {
	if m != nil {
		return m.PhV
	}
	return nil
}

func (m *ReadingMMXU) GetPPV() *DEL {
	if m != nil {
		return m.PPV
	}
	return nil
}

func (m *ReadingMMXU) GetVA() *WYE {
	if m != nil {
		return m.VA
	}
	return nil
}

func (m *ReadingMMXU) GetVAr() *WYE {
	if m != nil {
		return m.VAr
	}
	return nil
}

func (m *ReadingMMXU) GetW() *WYE {
	if m != nil {
		return m.W
	}
	return nil
}

type Optional_DbPosKind struct {
	Value                DbPosKind `protobuf:"varint,1,opt,name=value,proto3,enum=commonmodule.DbPosKind" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *Optional_DbPosKind) Reset()         { *m = Optional_DbPosKind{} }
func (m *Optional_DbPosKind) String() string { return proto.CompactTextString(m) }
func (*Optional_DbPosKind) ProtoMessage()    {}
func (*Optional_DbPosKind) Descriptor() ([]byte, []int) {
	return fileDescriptor_018fa6cbfd386c3e, []int{84}
}

func (m *Optional_DbPosKind) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Optional_DbPosKind.Unmarshal(m, b)
}
func (m *Optional_DbPosKind) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Optional_DbPosKind.Marshal(b, m, deterministic)
}
func (m *Optional_DbPosKind) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Optional_DbPosKind.Merge(m, src)
}
func (m *Optional_DbPosKind) XXX_Size() int {
	return xxx_messageInfo_Optional_DbPosKind.Size(m)
}
func (m *Optional_DbPosKind) XXX_DiscardUnknown() {
	xxx_messageInfo_Optional_DbPosKind.DiscardUnknown(m)
}

var xxx_messageInfo_Optional_DbPosKind proto.InternalMessageInfo

func (m *Optional_DbPosKind) GetValue() DbPosKind {
	if m != nil {
		return m.Value
	}
	return DbPosKind_DbPosKind_transient
}

// Specialized 61850 DPS class
type StatusDPS struct {
	// Quality of the value in 'stVal'.
	Q *Quality `protobuf:"bytes,1,opt,name=q,proto3" json:"q,omitempty"`
	// Status value of the controllable data object.
	StVal DbPosKind `protobuf:"varint,2,opt,name=stVal,proto3,enum=commonmodule.DbPosKind" json:"stVal,omitempty"`
	// Timestamp of the last change of the value in any of 'stVal' or 'q'.
	T                    *Timestamp `protobuf:"bytes,3,opt,name=t,proto3" json:"t,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *StatusDPS) Reset()         { *m = StatusDPS{} }
func (m *StatusDPS) String() string { return proto.CompactTextString(m) }
func (*StatusDPS) ProtoMessage()    {}
func (*StatusDPS) Descriptor() ([]byte, []int) {
	return fileDescriptor_018fa6cbfd386c3e, []int{85}
}

func (m *StatusDPS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StatusDPS.Unmarshal(m, b)
}
func (m *StatusDPS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StatusDPS.Marshal(b, m, deterministic)
}
func (m *StatusDPS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StatusDPS.Merge(m, src)
}
func (m *StatusDPS) XXX_Size() int {
	return xxx_messageInfo_StatusDPS.Size(m)
}
func (m *StatusDPS) XXX_DiscardUnknown() {
	xxx_messageInfo_StatusDPS.DiscardUnknown(m)
}

var xxx_messageInfo_StatusDPS proto.InternalMessageInfo

func (m *StatusDPS) GetQ() *Quality {
	if m != nil {
		return m.Q
	}
	return nil
}

func (m *StatusDPS) GetStVal() DbPosKind {
	if m != nil {
		return m.StVal
	}
	return DbPosKind_DbPosKind_transient
}

func (m *StatusDPS) GetT() *Timestamp {
	if m != nil {
		return m.T
	}
	return nil
}

// OpenFMB specialization for breaker, recloser and switch status and event profiles:  LN: Circuit
// breaker   Name: XCBR
type StatusAndEventXCBR struct {
	// UML inherited base object
	LogicalNodeForEventAndStatus *LogicalNodeForEventAndStatus `protobuf:"bytes,1,opt,name=logicalNodeForEventAndStatus,proto3" json:"logicalNodeForEventAndStatus,omitempty"`
	// MISSING DOCUMENTATION!!!
	DynamicTest *ENS_DynamicTestKind `protobuf:"bytes,2,opt,name=DynamicTest,proto3" json:"DynamicTest,omitempty"`
	// MISSING DOCUMENTATION!!!
	Pos                  *StatusDPS `protobuf:"bytes,3,opt,name=Pos,proto3" json:"Pos,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *StatusAndEventXCBR) Reset()         { *m = StatusAndEventXCBR{} }
func (m *StatusAndEventXCBR) String() string { return proto.CompactTextString(m) }
func (*StatusAndEventXCBR) ProtoMessage()    {}
func (*StatusAndEventXCBR) Descriptor() ([]byte, []int) {
	return fileDescriptor_018fa6cbfd386c3e, []int{86}
}

func (m *StatusAndEventXCBR) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StatusAndEventXCBR.Unmarshal(m, b)
}
func (m *StatusAndEventXCBR) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StatusAndEventXCBR.Marshal(b, m, deterministic)
}
func (m *StatusAndEventXCBR) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StatusAndEventXCBR.Merge(m, src)
}
func (m *StatusAndEventXCBR) XXX_Size() int {
	return xxx_messageInfo_StatusAndEventXCBR.Size(m)
}
func (m *StatusAndEventXCBR) XXX_DiscardUnknown() {
	xxx_messageInfo_StatusAndEventXCBR.DiscardUnknown(m)
}

var xxx_messageInfo_StatusAndEventXCBR proto.InternalMessageInfo

func (m *StatusAndEventXCBR) GetLogicalNodeForEventAndStatus() *LogicalNodeForEventAndStatus {
	if m != nil {
		return m.LogicalNodeForEventAndStatus
	}
	return nil
}

func (m *StatusAndEventXCBR) GetDynamicTest() *ENS_DynamicTestKind {
	if m != nil {
		return m.DynamicTest
	}
	return nil
}

func (m *StatusAndEventXCBR) GetPos() *StatusDPS {
	if m != nil {
		return m.Pos
	}
	return nil
}

// &lt;&lt;statistics&gt;&gt; Integer controlled step position information (ISC)
type StatusISC struct {
	// Quality of the value in 'valWTr'.
	Q *Quality `protobuf:"bytes,1,opt,name=q,proto3" json:"q,omitempty"`
	// Status value
	StVal int32 `protobuf:"varint,2,opt,name=stVal,proto3" json:"stVal,omitempty"`
	// Timestamp of the last change of the value in any of 'valWTr' or 'q'.
	T                    *Timestamp `protobuf:"bytes,3,opt,name=t,proto3" json:"t,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *StatusISC) Reset()         { *m = StatusISC{} }
func (m *StatusISC) String() string { return proto.CompactTextString(m) }
func (*StatusISC) ProtoMessage()    {}
func (*StatusISC) Descriptor() ([]byte, []int) {
	return fileDescriptor_018fa6cbfd386c3e, []int{87}
}

func (m *StatusISC) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StatusISC.Unmarshal(m, b)
}
func (m *StatusISC) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StatusISC.Marshal(b, m, deterministic)
}
func (m *StatusISC) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StatusISC.Merge(m, src)
}
func (m *StatusISC) XXX_Size() int {
	return xxx_messageInfo_StatusISC.Size(m)
}
func (m *StatusISC) XXX_DiscardUnknown() {
	xxx_messageInfo_StatusISC.DiscardUnknown(m)
}

var xxx_messageInfo_StatusISC proto.InternalMessageInfo

func (m *StatusISC) GetQ() *Quality {
	if m != nil {
		return m.Q
	}
	return nil
}

func (m *StatusISC) GetStVal() int32 {
	if m != nil {
		return m.StVal
	}
	return 0
}

func (m *StatusISC) GetT() *Timestamp {
	if m != nil {
		return m.T
	}
	return nil
}

// Generic status message information
type StatusMessageInfo struct {
	// UML inherited base object
	MessageInfo          *MessageInfo `protobuf:"bytes,1,opt,name=messageInfo,proto3" json:"messageInfo,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *StatusMessageInfo) Reset()         { *m = StatusMessageInfo{} }
func (m *StatusMessageInfo) String() string { return proto.CompactTextString(m) }
func (*StatusMessageInfo) ProtoMessage()    {}
func (*StatusMessageInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_018fa6cbfd386c3e, []int{88}
}

func (m *StatusMessageInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StatusMessageInfo.Unmarshal(m, b)
}
func (m *StatusMessageInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StatusMessageInfo.Marshal(b, m, deterministic)
}
func (m *StatusMessageInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StatusMessageInfo.Merge(m, src)
}
func (m *StatusMessageInfo) XXX_Size() int {
	return xxx_messageInfo_StatusMessageInfo.Size(m)
}
func (m *StatusMessageInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_StatusMessageInfo.DiscardUnknown(m)
}

var xxx_messageInfo_StatusMessageInfo proto.InternalMessageInfo

func (m *StatusMessageInfo) GetMessageInfo() *MessageInfo {
	if m != nil {
		return m.MessageInfo
	}
	return nil
}

// Controllable single point (SPC)
type StatusSPC struct {
	// Quality of the value in 'stVal'.
	Q *Quality `protobuf:"bytes,1,opt,name=q,proto3" json:"q,omitempty"`
	// Status value of the controllable data object.
	StVal bool `protobuf:"varint,2,opt,name=stVal,proto3" json:"stVal,omitempty"`
	// Timestamp of the last change of the value in any of 'stVal' or 'q'.
	T                    *Timestamp `protobuf:"bytes,3,opt,name=t,proto3" json:"t,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *StatusSPC) Reset()         { *m = StatusSPC{} }
func (m *StatusSPC) String() string { return proto.CompactTextString(m) }
func (*StatusSPC) ProtoMessage()    {}
func (*StatusSPC) Descriptor() ([]byte, []int) {
	return fileDescriptor_018fa6cbfd386c3e, []int{89}
}

func (m *StatusSPC) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StatusSPC.Unmarshal(m, b)
}
func (m *StatusSPC) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StatusSPC.Marshal(b, m, deterministic)
}
func (m *StatusSPC) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StatusSPC.Merge(m, src)
}
func (m *StatusSPC) XXX_Size() int {
	return xxx_messageInfo_StatusSPC.Size(m)
}
func (m *StatusSPC) XXX_DiscardUnknown() {
	xxx_messageInfo_StatusSPC.DiscardUnknown(m)
}

var xxx_messageInfo_StatusSPC proto.InternalMessageInfo

func (m *StatusSPC) GetQ() *Quality {
	if m != nil {
		return m.Q
	}
	return nil
}

func (m *StatusSPC) GetStVal() bool {
	if m != nil {
		return m.StVal
	}
	return false
}

func (m *StatusSPC) GetT() *Timestamp {
	if m != nil {
		return m.T
	}
	return nil
}

// Status value
type StatusValue struct {
	// UML inherited base object
	IdentifiedObject     *IdentifiedObject `protobuf:"bytes,1,opt,name=identifiedObject,proto3" json:"identifiedObject,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *StatusValue) Reset()         { *m = StatusValue{} }
func (m *StatusValue) String() string { return proto.CompactTextString(m) }
func (*StatusValue) ProtoMessage()    {}
func (*StatusValue) Descriptor() ([]byte, []int) {
	return fileDescriptor_018fa6cbfd386c3e, []int{90}
}

func (m *StatusValue) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StatusValue.Unmarshal(m, b)
}
func (m *StatusValue) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StatusValue.Marshal(b, m, deterministic)
}
func (m *StatusValue) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StatusValue.Merge(m, src)
}
func (m *StatusValue) XXX_Size() int {
	return xxx_messageInfo_StatusValue.Size(m)
}
func (m *StatusValue) XXX_DiscardUnknown() {
	xxx_messageInfo_StatusValue.DiscardUnknown(m)
}

var xxx_messageInfo_StatusValue proto.InternalMessageInfo

func (m *StatusValue) GetIdentifiedObject() *IdentifiedObject {
	if m != nil {
		return m.IdentifiedObject
	}
	return nil
}

// Visible string status (VSS)
type VSS struct {
	// Quality of the value in 'stVal'.
	Q *Quality `protobuf:"bytes,1,opt,name=q,proto3" json:"q,omitempty"`
	// Value of the data.
	StVal string `protobuf:"bytes,2,opt,name=stVal,proto3" json:"stVal,omitempty"`
	// Timestamp of the last change of the value in any of 'stVal' or 'q'.
	T                    *Timestamp `protobuf:"bytes,3,opt,name=t,proto3" json:"t,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *VSS) Reset()         { *m = VSS{} }
func (m *VSS) String() string { return proto.CompactTextString(m) }
func (*VSS) ProtoMessage()    {}
func (*VSS) Descriptor() ([]byte, []int) {
	return fileDescriptor_018fa6cbfd386c3e, []int{91}
}

func (m *VSS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VSS.Unmarshal(m, b)
}
func (m *VSS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VSS.Marshal(b, m, deterministic)
}
func (m *VSS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VSS.Merge(m, src)
}
func (m *VSS) XXX_Size() int {
	return xxx_messageInfo_VSS.Size(m)
}
func (m *VSS) XXX_DiscardUnknown() {
	xxx_messageInfo_VSS.DiscardUnknown(m)
}

var xxx_messageInfo_VSS proto.InternalMessageInfo

func (m *VSS) GetQ() *Quality {
	if m != nil {
		return m.Q
	}
	return nil
}

func (m *VSS) GetStVal() string {
	if m != nil {
		return m.StVal
	}
	return ""
}

func (m *VSS) GetT() *Timestamp {
	if m != nil {
		return m.T
	}
	return nil
}

// LN: Generic process I/O   Name: GGIO
type StringStatusGGIO struct {
	// UML inherited base object
	LogicalNode *LogicalNode `protobuf:"bytes,1,opt,name=logicalNode,proto3" json:"logicalNode,omitempty"`
	// Phase code
	Phase *Optional_PhaseCodeKind `protobuf:"bytes,2,opt,name=Phase,proto3" json:"Phase,omitempty"`
	// String status
	StrIn                *VSS     `protobuf:"bytes,3,opt,name=StrIn,proto3" json:"StrIn,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StringStatusGGIO) Reset()         { *m = StringStatusGGIO{} }
func (m *StringStatusGGIO) String() string { return proto.CompactTextString(m) }
func (*StringStatusGGIO) ProtoMessage()    {}
func (*StringStatusGGIO) Descriptor() ([]byte, []int) {
	return fileDescriptor_018fa6cbfd386c3e, []int{92}
}

func (m *StringStatusGGIO) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StringStatusGGIO.Unmarshal(m, b)
}
func (m *StringStatusGGIO) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StringStatusGGIO.Marshal(b, m, deterministic)
}
func (m *StringStatusGGIO) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StringStatusGGIO.Merge(m, src)
}
func (m *StringStatusGGIO) XXX_Size() int {
	return xxx_messageInfo_StringStatusGGIO.Size(m)
}
func (m *StringStatusGGIO) XXX_DiscardUnknown() {
	xxx_messageInfo_StringStatusGGIO.DiscardUnknown(m)
}

var xxx_messageInfo_StringStatusGGIO proto.InternalMessageInfo

func (m *StringStatusGGIO) GetLogicalNode() *LogicalNode {
	if m != nil {
		return m.LogicalNode
	}
	return nil
}

func (m *StringStatusGGIO) GetPhase() *Optional_PhaseCodeKind {
	if m != nil {
		return m.Phase
	}
	return nil
}

func (m *StringStatusGGIO) GetStrIn() *VSS {
	if m != nil {
		return m.StrIn
	}
	return nil
}

// Point definition (Point)
type SwitchPoint struct {
	// Switch position
	Pos *ControlDPC `protobuf:"bytes,1,opt,name=Pos,proto3" json:"Pos,omitempty"`
	// Start time
	StartTime            *ControlTimestamp `protobuf:"bytes,2,opt,name=startTime,proto3" json:"startTime,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *SwitchPoint) Reset()         { *m = SwitchPoint{} }
func (m *SwitchPoint) String() string { return proto.CompactTextString(m) }
func (*SwitchPoint) ProtoMessage()    {}
func (*SwitchPoint) Descriptor() ([]byte, []int) {
	return fileDescriptor_018fa6cbfd386c3e, []int{93}
}

func (m *SwitchPoint) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SwitchPoint.Unmarshal(m, b)
}
func (m *SwitchPoint) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SwitchPoint.Marshal(b, m, deterministic)
}
func (m *SwitchPoint) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SwitchPoint.Merge(m, src)
}
func (m *SwitchPoint) XXX_Size() int {
	return xxx_messageInfo_SwitchPoint.Size(m)
}
func (m *SwitchPoint) XXX_DiscardUnknown() {
	xxx_messageInfo_SwitchPoint.DiscardUnknown(m)
}

var xxx_messageInfo_SwitchPoint proto.InternalMessageInfo

func (m *SwitchPoint) GetPos() *ControlDPC {
	if m != nil {
		return m.Pos
	}
	return nil
}

func (m *SwitchPoint) GetStartTime() *ControlTimestamp {
	if m != nil {
		return m.StartTime
	}
	return nil
}

// Curve shape setting (FC=SP) (CSG_SP)
type SwitchCSG struct {
	// The array with the points specifying a curve shape.
	CrvPts               []*SwitchPoint `protobuf:"bytes,1,rep,name=crvPts,proto3" json:"crvPts,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *SwitchCSG) Reset()         { *m = SwitchCSG{} }
func (m *SwitchCSG) String() string { return proto.CompactTextString(m) }
func (*SwitchCSG) ProtoMessage()    {}
func (*SwitchCSG) Descriptor() ([]byte, []int) {
	return fileDescriptor_018fa6cbfd386c3e, []int{94}
}

func (m *SwitchCSG) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SwitchCSG.Unmarshal(m, b)
}
func (m *SwitchCSG) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SwitchCSG.Marshal(b, m, deterministic)
}
func (m *SwitchCSG) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SwitchCSG.Merge(m, src)
}
func (m *SwitchCSG) XXX_Size() int {
	return xxx_messageInfo_SwitchCSG.Size(m)
}
func (m *SwitchCSG) XXX_DiscardUnknown() {
	xxx_messageInfo_SwitchCSG.DiscardUnknown(m)
}

var xxx_messageInfo_SwitchCSG proto.InternalMessageInfo

func (m *SwitchCSG) GetCrvPts() []*SwitchPoint {
	if m != nil {
		return m.CrvPts
	}
	return nil
}

// OpenFMB specialization for control schedule using:  LN: Schedule   Name: FSCH
type SwitchControlScheduleFSCH struct {
	// Discrete value in SwitchCSG type
	ValDCSG              *SwitchCSG `protobuf:"bytes,1,opt,name=ValDCSG,proto3" json:"ValDCSG,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *SwitchControlScheduleFSCH) Reset()         { *m = SwitchControlScheduleFSCH{} }
func (m *SwitchControlScheduleFSCH) String() string { return proto.CompactTextString(m) }
func (*SwitchControlScheduleFSCH) ProtoMessage()    {}
func (*SwitchControlScheduleFSCH) Descriptor() ([]byte, []int) {
	return fileDescriptor_018fa6cbfd386c3e, []int{95}
}

func (m *SwitchControlScheduleFSCH) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SwitchControlScheduleFSCH.Unmarshal(m, b)
}
func (m *SwitchControlScheduleFSCH) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SwitchControlScheduleFSCH.Marshal(b, m, deterministic)
}
func (m *SwitchControlScheduleFSCH) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SwitchControlScheduleFSCH.Merge(m, src)
}
func (m *SwitchControlScheduleFSCH) XXX_Size() int {
	return xxx_messageInfo_SwitchControlScheduleFSCH.Size(m)
}
func (m *SwitchControlScheduleFSCH) XXX_DiscardUnknown() {
	xxx_messageInfo_SwitchControlScheduleFSCH.DiscardUnknown(m)
}

var xxx_messageInfo_SwitchControlScheduleFSCH proto.InternalMessageInfo

func (m *SwitchControlScheduleFSCH) GetValDCSG() *SwitchCSG {
	if m != nil {
		return m.ValDCSG
	}
	return nil
}

type Optional_StateKind struct {
	Value                StateKind `protobuf:"varint,1,opt,name=value,proto3,enum=commonmodule.StateKind" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *Optional_StateKind) Reset()         { *m = Optional_StateKind{} }
func (m *Optional_StateKind) String() string { return proto.CompactTextString(m) }
func (*Optional_StateKind) ProtoMessage()    {}
func (*Optional_StateKind) Descriptor() ([]byte, []int) {
	return fileDescriptor_018fa6cbfd386c3e, []int{96}
}

func (m *Optional_StateKind) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Optional_StateKind.Unmarshal(m, b)
}
func (m *Optional_StateKind) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Optional_StateKind.Marshal(b, m, deterministic)
}
func (m *Optional_StateKind) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Optional_StateKind.Merge(m, src)
}
func (m *Optional_StateKind) XXX_Size() int {
	return xxx_messageInfo_Optional_StateKind.Size(m)
}
func (m *Optional_StateKind) XXX_DiscardUnknown() {
	xxx_messageInfo_Optional_StateKind.DiscardUnknown(m)
}

var xxx_messageInfo_Optional_StateKind proto.InternalMessageInfo

func (m *Optional_StateKind) GetValue() StateKind {
	if m != nil {
		return m.Value
	}
	return StateKind_StateKind_off
}

func init() {
	proto.RegisterEnum("commonmodule.UnitSymbolKind", UnitSymbolKind_name, UnitSymbolKind_value)
	proto.RegisterEnum("commonmodule.UnitMultiplierKind", UnitMultiplierKind_name, UnitMultiplierKind_value)
	proto.RegisterEnum("commonmodule.PhaseCodeKind", PhaseCodeKind_name, PhaseCodeKind_value)
	proto.RegisterEnum("commonmodule.ValidityKind", ValidityKind_name, ValidityKind_value)
	proto.RegisterEnum("commonmodule.SourceKind", SourceKind_name, SourceKind_value)
	proto.RegisterEnum("commonmodule.TimeAccuracyKind", TimeAccuracyKind_name, TimeAccuracyKind_value)
	proto.RegisterEnum("commonmodule.ScheduleParameterKind", ScheduleParameterKind_name, ScheduleParameterKind_value)
	proto.RegisterEnum("commonmodule.CalcMethodKind", CalcMethodKind_name, CalcMethodKind_value)
	proto.RegisterEnum("commonmodule.GridConnectModeKind", GridConnectModeKind_name, GridConnectModeKind_value)
	proto.RegisterEnum("commonmodule.PFSignKind", PFSignKind_name, PFSignKind_value)
	proto.RegisterEnum("commonmodule.BehaviourModeKind", BehaviourModeKind_name, BehaviourModeKind_value)
	proto.RegisterEnum("commonmodule.DERGeneratorStateKind", DERGeneratorStateKind_name, DERGeneratorStateKind_value)
	proto.RegisterEnum("commonmodule.DynamicTestKind", DynamicTestKind_name, DynamicTestKind_value)
	proto.RegisterEnum("commonmodule.HealthKind", HealthKind_name, HealthKind_value)
	proto.RegisterEnum("commonmodule.DbPosKind", DbPosKind_name, DbPosKind_value)
	proto.RegisterEnum("commonmodule.StateKind", StateKind_name, StateKind_value)
	proto.RegisterType((*IdentifiedObject)(nil), "commonmodule.IdentifiedObject")
	proto.RegisterType((*ACDCTerminal)(nil), "commonmodule.ACDCTerminal")
	proto.RegisterType((*Optional_UnitSymbolKind)(nil), "commonmodule.Optional_UnitSymbolKind")
	proto.RegisterType((*Optional_UnitMultiplierKind)(nil), "commonmodule.Optional_UnitMultiplierKind")
	proto.RegisterType((*ActivePower)(nil), "commonmodule.ActivePower")
	proto.RegisterType((*Optional_PhaseCodeKind)(nil), "commonmodule.Optional_PhaseCodeKind")
	proto.RegisterType((*AnalogueValue)(nil), "commonmodule.AnalogueValue")
	proto.RegisterType((*Optional_ValidityKind)(nil), "commonmodule.Optional_ValidityKind")
	proto.RegisterType((*DetailQual)(nil), "commonmodule.DetailQual")
	proto.RegisterType((*Optional_SourceKind)(nil), "commonmodule.Optional_SourceKind")
	proto.RegisterType((*Quality)(nil), "commonmodule.Quality")
	proto.RegisterType((*Optional_TimeAccuracyKind)(nil), "commonmodule.Optional_TimeAccuracyKind")
	proto.RegisterType((*TimeQuality)(nil), "commonmodule.TimeQuality")
	proto.RegisterType((*Timestamp)(nil), "commonmodule.Timestamp")
	proto.RegisterType((*Unit)(nil), "commonmodule.Unit")
	proto.RegisterType((*MV)(nil), "commonmodule.MV")
	proto.RegisterType((*LogicalNode)(nil), "commonmodule.LogicalNode")
	proto.RegisterType((*AnalogStatusGGIO)(nil), "commonmodule.AnalogStatusGGIO")
	proto.RegisterType((*AnalogueValueCtl)(nil), "commonmodule.AnalogueValueCtl")
	proto.RegisterType((*NamedObject)(nil), "commonmodule.NamedObject")
	proto.RegisterType((*ApplicationSystem)(nil), "commonmodule.ApplicationSystem")
	proto.RegisterType((*ASG)(nil), "commonmodule.ASG")
	proto.RegisterType((*BCR)(nil), "commonmodule.BCR")
	proto.RegisterType((*StatusSPS)(nil), "commonmodule.StatusSPS")
	proto.RegisterType((*BooleanStatusGGIO)(nil), "commonmodule.BooleanStatusGGIO")
	proto.RegisterType((*CheckConditions)(nil), "commonmodule.CheckConditions")
	proto.RegisterType((*Vector)(nil), "commonmodule.Vector")
	proto.RegisterType((*CMV)(nil), "commonmodule.CMV")
	proto.RegisterType((*ConductingEquipment)(nil), "commonmodule.ConductingEquipment")
	proto.RegisterType((*Terminal)(nil), "commonmodule.Terminal")
	proto.RegisterType((*ConductingEquipmentTerminalReading)(nil), "commonmodule.ConductingEquipmentTerminalReading")
	proto.RegisterType((*ControlDPC)(nil), "commonmodule.ControlDPC")
	proto.RegisterType((*ControlTimestamp)(nil), "commonmodule.ControlTimestamp")
	proto.RegisterType((*Optional_ScheduleParameterKind)(nil), "commonmodule.Optional_ScheduleParameterKind")
	proto.RegisterType((*ENG_ScheduleParameter)(nil), "commonmodule.ENG_ScheduleParameter")
	proto.RegisterType((*SchedulePoint)(nil), "commonmodule.SchedulePoint")
	proto.RegisterType((*ScheduleCSG)(nil), "commonmodule.ScheduleCSG")
	proto.RegisterType((*ControlScheduleFSCH)(nil), "commonmodule.ControlScheduleFSCH")
	proto.RegisterType((*LogicalNodeForControl)(nil), "commonmodule.LogicalNodeForControl")
	proto.RegisterType((*ControlFSCC)(nil), "commonmodule.ControlFSCC")
	proto.RegisterType((*ControlING)(nil), "commonmodule.ControlING")
	proto.RegisterType((*ControlISC)(nil), "commonmodule.ControlISC")
	proto.RegisterType((*MessageInfo)(nil), "commonmodule.MessageInfo")
	proto.RegisterType((*ControlMessageInfo)(nil), "commonmodule.ControlMessageInfo")
	proto.RegisterType((*ControlSPC)(nil), "commonmodule.ControlSPC")
	proto.RegisterType((*ControlValue)(nil), "commonmodule.ControlValue")
	proto.RegisterType((*DateTimeInterval)(nil), "commonmodule.DateTimeInterval")
	proto.RegisterType((*DEL)(nil), "commonmodule.DEL")
	proto.RegisterType((*EnergyConsumer)(nil), "commonmodule.EnergyConsumer")
	proto.RegisterType((*Optional_CalcMethodKind)(nil), "commonmodule.Optional_CalcMethodKind")
	proto.RegisterType((*ENG_CalcMethodKind)(nil), "commonmodule.ENG_CalcMethodKind")
	proto.RegisterType((*Optional_GridConnectModeKind)(nil), "commonmodule.Optional_GridConnectModeKind")
	proto.RegisterType((*ENG_GridConnectModeKind)(nil), "commonmodule.ENG_GridConnectModeKind")
	proto.RegisterType((*Optional_PFSignKind)(nil), "commonmodule.Optional_PFSignKind")
	proto.RegisterType((*ENG_PFSignKind)(nil), "commonmodule.ENG_PFSignKind")
	proto.RegisterType((*Optional_BehaviourModeKind)(nil), "commonmodule.Optional_BehaviourModeKind")
	proto.RegisterType((*ENS_BehaviourModeKind)(nil), "commonmodule.ENS_BehaviourModeKind")
	proto.RegisterType((*Optional_DERGeneratorStateKind)(nil), "commonmodule.Optional_DERGeneratorStateKind")
	proto.RegisterType((*ENS_DERGeneratorStateKind)(nil), "commonmodule.ENS_DERGeneratorStateKind")
	proto.RegisterType((*Optional_DynamicTestKind)(nil), "commonmodule.Optional_DynamicTestKind")
	proto.RegisterType((*ENS_DynamicTestKind)(nil), "commonmodule.ENS_DynamicTestKind")
	proto.RegisterType((*ENS_GridConnectModeKind)(nil), "commonmodule.ENS_GridConnectModeKind")
	proto.RegisterType((*Optional_HealthKind)(nil), "commonmodule.Optional_HealthKind")
	proto.RegisterType((*ENS_HealthKind)(nil), "commonmodule.ENS_HealthKind")
	proto.RegisterType((*ESS)(nil), "commonmodule.ESS")
	proto.RegisterType((*EventMessageInfo)(nil), "commonmodule.EventMessageInfo")
	proto.RegisterType((*EventValue)(nil), "commonmodule.EventValue")
	proto.RegisterType((*ForecastValueSource)(nil), "commonmodule.ForecastValueSource")
	proto.RegisterType((*ForecastIED)(nil), "commonmodule.ForecastIED")
	proto.RegisterType((*ForecastValue)(nil), "commonmodule.ForecastValue")
	proto.RegisterType((*IED)(nil), "commonmodule.IED")
	proto.RegisterType((*StatusINS)(nil), "commonmodule.StatusINS")
	proto.RegisterType((*IntegerStatusGGIO)(nil), "commonmodule.IntegerStatusGGIO")
	proto.RegisterType((*LogicalNodeForEventAndStatus)(nil), "commonmodule.LogicalNodeForEventAndStatus")
	proto.RegisterType((*MeasurementValue)(nil), "commonmodule.MeasurementValue")
	proto.RegisterType((*Meter)(nil), "commonmodule.Meter")
	proto.RegisterType((*OptimizationMessageInfo)(nil), "commonmodule.OptimizationMessageInfo")
	proto.RegisterType((*ReadingMMTN)(nil), "commonmodule.ReadingMMTN")
	proto.RegisterType((*PhaseMMTN)(nil), "commonmodule.PhaseMMTN")
	proto.RegisterType((*RampRate)(nil), "commonmodule.RampRate")
	proto.RegisterType((*ReadingMessageInfo)(nil), "commonmodule.ReadingMessageInfo")
	proto.RegisterType((*ReadingMMTR)(nil), "commonmodule.ReadingMMTR")
	proto.RegisterType((*WYE)(nil), "commonmodule.WYE")
	proto.RegisterType((*ReadingMMXU)(nil), "commonmodule.ReadingMMXU")
	proto.RegisterType((*Optional_DbPosKind)(nil), "commonmodule.Optional_DbPosKind")
	proto.RegisterType((*StatusDPS)(nil), "commonmodule.StatusDPS")
	proto.RegisterType((*StatusAndEventXCBR)(nil), "commonmodule.StatusAndEventXCBR")
	proto.RegisterType((*StatusISC)(nil), "commonmodule.StatusISC")
	proto.RegisterType((*StatusMessageInfo)(nil), "commonmodule.StatusMessageInfo")
	proto.RegisterType((*StatusSPC)(nil), "commonmodule.StatusSPC")
	proto.RegisterType((*StatusValue)(nil), "commonmodule.StatusValue")
	proto.RegisterType((*VSS)(nil), "commonmodule.VSS")
	proto.RegisterType((*StringStatusGGIO)(nil), "commonmodule.StringStatusGGIO")
	proto.RegisterType((*SwitchPoint)(nil), "commonmodule.SwitchPoint")
	proto.RegisterType((*SwitchCSG)(nil), "commonmodule.SwitchCSG")
	proto.RegisterType((*SwitchControlScheduleFSCH)(nil), "commonmodule.SwitchControlScheduleFSCH")
	proto.RegisterType((*Optional_StateKind)(nil), "commonmodule.Optional_StateKind")
}

func init() { proto.RegisterFile("commonmodule/commonmodule.proto", fileDescriptor_018fa6cbfd386c3e) }

var fileDescriptor_018fa6cbfd386c3e = []byte{
	// 4827 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xec, 0x5c, 0x5d, 0x6c, 0x1b, 0xc9,
	0x7d, 0xbf, 0x25, 0x25, 0x59, 0xfa, 0x53, 0x96, 0x47, 0x23, 0xc9, 0xa2, 0x25, 0xd9, 0x92, 0xd7,
	0xe7, 0x3b, 0x5b, 0x89, 0xed, 0xb3, 0xec, 0xfb, 0xc8, 0x7d, 0xe5, 0xc8, 0xd5, 0x87, 0x59, 0x5b,
	0x34, 0x8f, 0x2b, 0x53, 0x77, 0x49, 0x50, 0x75, 0xb5, 0x1c, 0x91, 0x9b, 0x5b, 0xee, 0xd2, 0xbb,
	0x4b, 0x29, 0xf2, 0x43, 0xe3, 0x43, 0x53, 0xa0, 0x40, 0x81, 0x43, 0x0b, 0xb4, 0xe8, 0x4b, 0x8b,
	0x26, 0x40, 0x10, 0x14, 0x2d, 0x50, 0xa0, 0x68, 0x53, 0xf4, 0xa1, 0x0f, 0x0d, 0x12, 0xa4, 0x05,
	0xfa, 0xd2, 0xa6, 0x40, 0x80, 0x3e, 0x35, 0x7d, 0xed, 0x73, 0xfa, 0x58, 0xa0, 0x98, 0xd9, 0x59,
	0x72, 0x3f, 0x66, 0x49, 0xfa, 0x42, 0xdd, 0x43, 0xd1, 0x37, 0x73, 0xfe, 0xbf, 0xff, 0xf7, 0xcc,
	0x7f, 0x66, 0xfe, 0x3b, 0x32, 0xac, 0xea, 0x76, 0xab, 0x65, 0x5b, 0x2d, 0xbb, 0xde, 0x31, 0xc9,
	0x9d, 0xf0, 0x8f, 0xdb, 0x6d, 0xc7, 0xf6, 0x6c, 0x3c, 0x1d, 0x1e, 0x5b, 0x9a, 0xea, 0xb4, 0x4c,
	0x9f, 0xb0, 0x74, 0xa5, 0x61, 0xdb, 0x0d, 0x93, 0xdc, 0x61, 0xbf, 0x0e, 0x3b, 0x47, 0x77, 0x4e,
	0x1c, 0xad, 0xdd, 0x26, 0x8e, 0xeb, 0xd3, 0xe5, 0xbf, 0x97, 0x00, 0x95, 0xea, 0xc4, 0xf2, 0x8c,
	0x23, 0x83, 0xd4, 0x1f, 0x1f, 0x7e, 0x93, 0xe8, 0x1e, 0x7e, 0x1f, 0x72, 0x75, 0xe2, 0xea, 0x8e,
	0xd1, 0xf6, 0x0c, 0xdb, 0xca, 0x4b, 0x6b, 0xd2, 0x8d, 0xdc, 0xc6, 0xca, 0x6d, 0x5f, 0xd4, 0xed,
	0x40, 0xd4, 0x6d, 0xd5, 0x73, 0x0c, 0xab, 0x51, 0xd3, 0xcc, 0x0e, 0xa9, 0x86, 0x19, 0xf0, 0x1b,
	0x30, 0xd6, 0xaa, 0x96, 0x36, 0xf3, 0x99, 0xc1, 0x8c, 0xc5, 0xb1, 0xef, 0xfe, 0x30, 0x2f, 0x55,
	0x19, 0x1e, 0xbf, 0x06, 0x63, 0x96, 0xd6, 0x22, 0xf9, 0xec, 0x10, 0x0a, 0x19, 0x52, 0xfe, 0x0f,
	0x09, 0xa6, 0x0b, 0xca, 0xa6, 0xb2, 0x47, 0x9c, 0x96, 0x61, 0x69, 0x26, 0xae, 0x00, 0x32, 0x62,
	0xee, 0x70, 0xfb, 0xaf, 0xdc, 0x8e, 0xc4, 0x2d, 0xee, 0x74, 0x71, 0xec, 0x39, 0x35, 0x24, 0xc1,
	0x8d, 0xdf, 0x82, 0x29, 0xdd, 0xb6, 0x2c, 0xa2, 0x7b, 0xa4, 0xce, 0x3d, 0x5a, 0x4a, 0x58, 0x56,
	0xb4, 0x6d, 0xd3, 0xb7, 0xab, 0x07, 0xc6, 0x0a, 0xcc, 0xb8, 0xe4, 0x69, 0x87, 0x58, 0x3a, 0x29,
	0x77, 0x5a, 0x87, 0xc4, 0xe1, 0x8e, 0x2d, 0x27, 0xd8, 0x4b, 0x96, 0x77, 0x6f, 0xc3, 0xe7, 0x8f,
	0xb1, 0xc8, 0xbb, 0xb0, 0xf8, 0x98, 0x45, 0x55, 0x33, 0x0f, 0x9e, 0x58, 0x86, 0xa7, 0x9e, 0xb6,
	0x0e, 0x6d, 0xf3, 0xa1, 0x61, 0xd5, 0xf1, 0x06, 0x8c, 0x1f, 0x53, 0x1e, 0xe6, 0xe0, 0xcc, 0xc6,
	0x4a, 0xd4, 0xc1, 0x28, 0xb8, 0xea, 0x43, 0xe5, 0x27, 0xb0, 0x1c, 0x11, 0xb7, 0xdb, 0x31, 0x3d,
	0xa3, 0x6d, 0x1a, 0xc4, 0x61, 0x22, 0xdf, 0x88, 0x8a, 0x5c, 0x4b, 0x8a, 0x8c, 0x32, 0x04, 0x62,
	0x7f, 0x2a, 0x41, 0xae, 0xa0, 0x7b, 0xc6, 0x31, 0xa9, 0xd8, 0x27, 0xc4, 0xc1, 0x25, 0x80, 0x56,
	0x17, 0xc8, 0x13, 0x70, 0x33, 0x2a, 0xac, 0x8f, 0x19, 0xd5, 0x10, 0x33, 0xfe, 0x0a, 0x8c, 0x75,
	0x2c, 0xc3, 0xe3, 0xa1, 0xbf, 0xde, 0x47, 0x48, 0xc8, 0x5b, 0xc6, 0x82, 0xef, 0x06, 0xde, 0xa4,
	0xc5, 0x7d, 0xdb, 0xb4, 0x35, 0xcf, 0x8f, 0x3b, 0x77, 0xe4, 0x21, 0x5c, 0xec, 0xca, 0xac, 0x34,
	0x35, 0x97, 0x28, 0x76, 0x9d, 0xb0, 0xd0, 0xdc, 0x8d, 0x86, 0x66, 0x39, 0x6a, 0x48, 0x04, 0x1b,
	0x08, 0x23, 0x70, 0xbe, 0x60, 0x69, 0xa6, 0xdd, 0xe8, 0x10, 0xa6, 0x04, 0xdf, 0x04, 0xe9, 0x88,
	0x47, 0xa3, 0xaf, 0x31, 0xd2, 0x11, 0x85, 0x1a, 0xdc, 0xe7, 0xbe, 0xf3, 0x45, 0x32, 0xe4, 0x12,
	0x2c, 0x74, 0x6d, 0xae, 0x69, 0xa6, 0x51, 0x37, 0xbc, 0x53, 0x66, 0xf2, 0x6b, 0x51, 0x93, 0x97,
	0xa2, 0x26, 0x87, 0xa1, 0x81, 0xc5, 0x3f, 0xcf, 0x00, 0x6c, 0x12, 0x4f, 0x33, 0xcc, 0x0f, 0x3b,
	0x9a, 0x89, 0xbf, 0x0c, 0xd3, 0x87, 0x5a, 0xbd, 0x4a, 0x8e, 0x88, 0x43, 0xa7, 0x24, 0x93, 0x33,
	0x59, 0x9c, 0xfc, 0x9d, 0x1f, 0xe6, 0xa5, 0xdf, 0xa3, 0xab, 0x25, 0x42, 0xc5, 0x32, 0x9c, 0x3b,
	0xd2, 0x0c, 0xb3, 0xe3, 0x10, 0x66, 0x78, 0x18, 0x18, 0x10, 0xf0, 0x0d, 0x00, 0xc3, 0xd2, 0x74,
	0xbd, 0xe3, 0x68, 0x9e, 0x9f, 0x97, 0x30, 0x2c, 0x44, 0xa3, 0xba, 0x0d, 0x4b, 0xb7, 0x2d, 0xd7,
	0x70, 0x3d, 0x62, 0x79, 0xf9, 0xb1, 0xb8, 0xee, 0x30, 0x95, 0xea, 0xb6, 0xcd, 0xfa, 0xa6, 0xe6,
	0x69, 0xf9, 0xf1, 0xb8, 0x6e, 0x4e, 0xc0, 0xeb, 0x90, 0xb3, 0x5d, 0xdd, 0x30, 0x4d, 0xcd, 0xb3,
	0x9d, 0xd3, 0xfc, 0x44, 0x0c, 0x17, 0x26, 0x52, 0x3b, 0xed, 0x8e, 0xf7, 0xf8, 0xa8, 0xaa, 0x59,
	0x0d, 0x92, 0x3f, 0x17, 0xb7, 0xb3, 0x47, 0xc3, 0x2f, 0xc3, 0xa4, 0x7d, 0x4c, 0x9c, 0x23, 0xd3,
	0x3e, 0xc9, 0x4f, 0xc6, 0x70, 0x5d, 0x8a, 0xbc, 0x05, 0x73, 0xdd, 0x1c, 0xa9, 0x76, 0xc7, 0xd1,
	0xfd, 0x49, 0x75, 0x3b, 0x9a, 0xa1, 0x7c, 0x34, 0x43, 0x3d, 0x60, 0x90, 0x9f, 0x3f, 0xc9, 0xc0,
	0x39, 0x9a, 0x19, 0xc3, 0x3b, 0xc5, 0x45, 0x80, 0x7a, 0x37, 0x55, 0x7c, 0x56, 0xc5, 0x04, 0xf4,
	0x52, 0x19, 0x36, 0xbe, 0xc7, 0x85, 0x37, 0xe0, 0x82, 0xdd, 0x26, 0x0e, 0xf5, 0xb9, 0x68, 0xda,
	0xfa, 0x27, 0xbc, 0xc4, 0x85, 0x7d, 0x88, 0x03, 0xf0, 0xdb, 0x30, 0xe1, 0x32, 0xc3, 0x58, 0xfa,
	0xfa, 0x18, 0x1d, 0x12, 0xc2, 0x39, 0xf0, 0x0a, 0x8c, 0x79, 0xc4, 0x4d, 0x26, 0x93, 0x8d, 0xe2,
	0x0f, 0x60, 0xf2, 0x98, 0x4f, 0x4a, 0x96, 0xc5, 0xbe, 0x53, 0x36, 0x1c, 0xe6, 0x80, 0x4b, 0xfe,
	0x10, 0x2e, 0x75, 0xc3, 0xbc, 0x67, 0xb4, 0x48, 0x81, 0xcd, 0x26, 0xdd, 0x5f, 0x0e, 0xf7, 0xa3,
	0xc1, 0x8e, 0x6d, 0x08, 0x71, 0x78, 0x10, 0xf2, 0xff, 0x91, 0x20, 0x47, 0x69, 0x41, 0xd8, 0xbf,
	0x0c, 0xd3, 0x3a, 0x8d, 0xc4, 0x36, 0x9f, 0xea, 0x89, 0x35, 0x11, 0xa6, 0xe2, 0x77, 0x61, 0x9e,
	0xfd, 0x2e, 0xdb, 0x9e, 0x7a, 0x6a, 0xe9, 0x4d, 0xc7, 0xb6, 0x8c, 0x67, 0x82, 0x28, 0x0b, 0x51,
	0xf8, 0x3e, 0x20, 0x93, 0x68, 0x6d, 0x95, 0xe8, 0xb6, 0x55, 0x77, 0x1f, 0x5a, 0xf6, 0x89, 0x95,
	0x58, 0x33, 0x09, 0x04, 0x7e, 0x04, 0xd3, 0x5e, 0xc8, 0x19, 0x16, 0xec, 0x81, 0xee, 0x86, 0x3d,
	0x08, 0x73, 0xcb, 0xcf, 0x25, 0x98, 0xa2, 0x60, 0xd7, 0xd3, 0x5a, 0x6d, 0x3a, 0xdb, 0x8f, 0x1c,
	0x4d, 0xef, 0x9e, 0x0b, 0xce, 0x87, 0xd3, 0x10, 0x50, 0xe8, 0x6a, 0x74, 0x7d, 0x8b, 0x98, 0xa3,
	0x63, 0xe1, 0xd5, 0xc8, 0x09, 0xf8, 0x26, 0x64, 0xbc, 0xa7, 0xbc, 0x32, 0x5f, 0x4a, 0xda, 0xc6,
	0xc3, 0x5d, 0xcd, 0x78, 0x4f, 0xe5, 0xdf, 0x97, 0x60, 0x8c, 0x16, 0xf8, 0x51, 0x6e, 0x2b, 0xef,
	0xc3, 0x84, 0x5a, 0x7a, 0x12, 0x6c, 0x2c, 0x03, 0x76, 0xcf, 0xf0, 0x4c, 0xf6, 0xb9, 0xe4, 0x7f,
	0x94, 0x20, 0xb3, 0x5b, 0xc3, 0x6f, 0x42, 0xb6, 0xa5, 0x35, 0xba, 0x35, 0x3d, 0x22, 0x23, 0x52,
	0xfb, 0x43, 0x22, 0x28, 0x07, 0xbe, 0x05, 0xd2, 0x53, 0x5e, 0xdf, 0x17, 0xa2, 0x6c, 0xdc, 0xf3,
	0x10, 0x83, 0xf4, 0x14, 0xdf, 0x01, 0xc9, 0xe3, 0xc1, 0x5a, 0x4c, 0x06, 0x8b, 0xe5, 0x26, 0xcc,
	0xe0, 0xe1, 0x1b, 0x30, 0x4e, 0xf7, 0x40, 0x97, 0x65, 0x3f, 0xb7, 0x81, 0x93, 0xee, 0x55, 0x7d,
	0x80, 0x7c, 0x00, 0xb9, 0x47, 0x76, 0xc3, 0xd0, 0x35, 0xb3, 0x6c, 0xd7, 0xc9, 0xe8, 0x4f, 0x50,
	0xf2, 0x8f, 0x24, 0x40, 0x7e, 0x2c, 0x54, 0x4f, 0xf3, 0x3a, 0xee, 0xce, 0x4e, 0xe9, 0x31, 0x2e,
	0x40, 0xce, 0xec, 0x69, 0xe5, 0x1a, 0x62, 0xf3, 0x20, 0x64, 0x16, 0x17, 0x1e, 0xe6, 0xc1, 0xb7,
	0x61, 0xac, 0x60, 0x95, 0x2c, 0x1e, 0x45, 0x14, 0xe5, 0xdd, 0xad, 0x85, 0xcb, 0x0b, 0xc5, 0xe1,
	0xb7, 0x61, 0x9c, 0x6d, 0xd3, 0x3c, 0x8e, 0x2f, 0xa7, 0x4c, 0x9c, 0xd8, 0x56, 0xce, 0x7e, 0xca,
	0xcd, 0xc0, 0x05, 0x9e, 0x4e, 0xc5, 0x33, 0xcf, 0x68, 0x37, 0xff, 0x36, 0xe4, 0xca, 0x5a, 0x6b,
	0x64, 0x67, 0xf1, 0xe0, 0x4c, 0x9d, 0x19, 0xfa, 0x4c, 0xfd, 0x2d, 0x98, 0x2d, 0xb4, 0xdb, 0xa6,
	0xa1, 0x6b, 0x54, 0x80, 0x7a, 0xea, 0x7a, 0xa4, 0x45, 0xd3, 0x65, 0xf5, 0xac, 0x12, 0xa7, 0x2b,
	0x64, 0x76, 0x90, 0xae, 0x10, 0x0f, 0x5e, 0x0b, 0xdd, 0x0a, 0xa6, 0x8a, 0xd3, 0x41, 0x72, 0x7a,
	0xe7, 0x7f, 0xf9, 0x29, 0x64, 0x0b, 0xea, 0x0e, 0xfe, 0x00, 0x26, 0x5c, 0xe2, 0xed, 0x76, 0x97,
	0xd5, 0x95, 0x3e, 0xcb, 0x4a, 0xf1, 0xcc, 0xc8, 0x36, 0xc3, 0xf8, 0x7a, 0x93, 0x3f, 0x33, 0x68,
	0xf2, 0xff, 0x44, 0x82, 0x6c, 0x51, 0xa9, 0xe2, 0x35, 0x98, 0xd0, 0x74, 0x9a, 0x2f, 0xa6, 0x33,
	0x1b, 0x96, 0xe9, 0x8f, 0x9f, 0xf9, 0x82, 0x7d, 0x27, 0xba, 0x60, 0x87, 0x3c, 0xe8, 0x72, 0x37,
	0x4e, 0x60, 0xca, 0x5f, 0x5b, 0x6a, 0x45, 0xc5, 0xd7, 0xa8, 0xa5, 0x52, 0x1f, 0x4b, 0xa9, 0x7d,
	0x57, 0x60, 0xdc, 0x65, 0xfe, 0xc6, 0x77, 0x22, 0x7f, 0x18, 0x5f, 0x1f, 0x6c, 0x7f, 0x55, 0x62,
	0x65, 0x70, 0x96, 0x5e, 0x7e, 0x88, 0x66, 0x8d, 0x76, 0x71, 0xdf, 0x83, 0x6c, 0xc9, 0x0a, 0x2e,
	0x5c, 0x31, 0x0b, 0xba, 0xae, 0x86, 0x8b, 0x6a, 0xc9, 0xaa, 0xff, 0x4a, 0x2b, 0xfc, 0x0f, 0x25,
	0xb8, 0xa0, 0x34, 0x89, 0xfe, 0x89, 0x62, 0x5b, 0x75, 0x83, 0x22, 0x5d, 0x5c, 0x84, 0x19, 0xc3,
	0xf2, 0x88, 0x43, 0xf7, 0x66, 0x46, 0xe3, 0xae, 0xf4, 0xbb, 0x00, 0xc6, 0x38, 0xf0, 0xfb, 0x30,
	0xed, 0xfa, 0x7b, 0xba, 0x2f, 0x61, 0xf0, 0x15, 0x32, 0x82, 0x97, 0xdb, 0x30, 0x51, 0x23, 0xba,
	0x67, 0x3b, 0xf8, 0x16, 0x64, 0x35, 0x6b, 0x98, 0xbd, 0xa6, 0x4a, 0x71, 0xc1, 0xd6, 0x94, 0x79,
	0xd1, 0xad, 0x49, 0xfe, 0xb1, 0x04, 0x59, 0x65, 0xb7, 0x86, 0x37, 0x60, 0x4c, 0xaf, 0x75, 0x8f,
	0x96, 0xf3, 0xb1, 0xa3, 0x18, 0xb3, 0x29, 0x5c, 0x63, 0xf5, 0x2f, 0x62, 0x95, 0x0c, 0xbf, 0xad,
	0xfd, 0x26, 0xcc, 0xd1, 0x4c, 0x76, 0x74, 0xcf, 0xb0, 0x1a, 0x5b, 0x4f, 0x3b, 0x46, 0xbb, 0x45,
	0x2f, 0x0a, 0x23, 0x28, 0x64, 0x2f, 0x47, 0x0a, 0x19, 0x0a, 0x17, 0xb2, 0x3f, 0xeb, 0x15, 0xb3,
	0xcf, 0x24, 0x98, 0xec, 0xb6, 0x25, 0x36, 0x61, 0x5a, 0x0b, 0xb5, 0x29, 0xba, 0xd3, 0x28, 0x9a,
	0x94, 0x10, 0x82, 0xeb, 0x8d, 0x70, 0xe1, 0x77, 0x61, 0xa2, 0x4d, 0xe7, 0x6a, 0x50, 0xd7, 0x86,
	0x9b, 0xdf, 0x9c, 0x47, 0x3e, 0x04, 0x59, 0x10, 0x90, 0x40, 0x78, 0x95, 0x68, 0x75, 0xc3, 0x6a,
	0xe0, 0x77, 0x61, 0xd2, 0x8b, 0x5a, 0x79, 0x31, 0x96, 0x98, 0xc0, 0xc2, 0xd0, 0xc1, 0x2f, 0xe0,
	0x90, 0x6f, 0x03, 0x28, 0xb6, 0xe5, 0x39, 0xb6, 0xb9, 0x59, 0x51, 0x68, 0x51, 0xd5, 0x3d, 0x33,
	0x98, 0x42, 0xe1, 0x22, 0xc3, 0xc7, 0xe5, 0x6f, 0x00, 0xe2, 0xf8, 0x33, 0x38, 0x62, 0xca, 0x5f,
	0x87, 0x2b, 0xbd, 0x4b, 0x97, 0xde, 0x24, 0xd4, 0xfe, 0x8a, 0xe6, 0x68, 0x2d, 0xe2, 0xf1, 0x7e,
	0xc7, 0x57, 0xa2, 0x57, 0x82, 0x6b, 0xb1, 0x3a, 0x23, 0xe2, 0x09, 0xee, 0x05, 0x7f, 0x2c, 0xc1,
	0xc2, 0x56, 0x79, 0x27, 0x29, 0x18, 0xeb, 0xb0, 0xe0, 0xc6, 0x07, 0xf7, 0x4e, 0xdb, 0x2f, 0xa2,
	0x24, 0xe4, 0x8d, 0x58, 0x16, 0xad, 0xdf, 0xbe, 0xe5, 0xd4, 0xfb, 0x4c, 0xb8, 0x7e, 0xfb, 0xe6,
	0xfd, 0x8d, 0x04, 0xe7, 0xbb, 0xa2, 0x6d, 0xc3, 0xf2, 0xf0, 0xd7, 0x61, 0x36, 0x21, 0x2a, 0x2f,
	0xad, 0x65, 0x6f, 0xe4, 0xe2, 0x26, 0x09, 0xdd, 0x0a, 0xa9, 0x48, 0xca, 0xc1, 0xdb, 0x30, 0xe5,
	0x7a, 0x9a, 0xe3, 0xd1, 0x34, 0xf2, 0xd9, 0x19, 0xdb, 0xb6, 0xe3, 0x79, 0x0e, 0xc9, 0xeb, 0xb1,
	0xca, 0x8f, 0x20, 0x17, 0x68, 0x56, 0xd4, 0x1d, 0xfc, 0x1e, 0x4c, 0xb8, 0x7a, 0xb3, 0xe2, 0xb9,
	0xdc, 0xd0, 0xe5, 0x94, 0xd8, 0x51, 0x07, 0x23, 0xe7, 0x00, 0xc6, 0x24, 0xef, 0xb1, 0x1a, 0x40,
	0xd5, 0x06, 0xc8, 0x6d, 0x55, 0x79, 0x80, 0xdf, 0x83, 0x73, 0x35, 0xcd, 0x2c, 0x28, 0xea, 0x8e,
	0x78, 0xfd, 0x87, 0x2c, 0x08, 0x4f, 0x2b, 0xce, 0x23, 0x7f, 0x0d, 0x16, 0x42, 0x9b, 0xd7, 0xb6,
	0xed, 0x70, 0x1d, 0x23, 0xd8, 0xf6, 0xe4, 0xef, 0x67, 0x20, 0xc7, 0xc5, 0x6d, 0xab, 0x8a, 0x82,
	0x0f, 0x60, 0xc1, 0x14, 0xe9, 0xe2, 0xc2, 0xaf, 0xa5, 0x0a, 0xef, 0x41, 0xb9, 0x1a, 0xb1, 0x1c,
	0xac, 0xc2, 0x9c, 0x9e, 0x0c, 0x11, 0x4f, 0xe1, 0x55, 0x61, 0x0a, 0xc3, 0xc0, 0xaa, 0x88, 0x1b,
	0x1f, 0xc0, 0x25, 0xc3, 0x35, 0x35, 0xab, 0x2e, 0xe0, 0xe0, 0xe5, 0x7e, 0x08, 0xd1, 0xe9, 0x32,
	0xe4, 0x8f, 0xba, 0x75, 0xa6, 0x54, 0xde, 0xa1, 0x75, 0xc6, 0x25, 0xdd, 0xc3, 0xdb, 0x78, 0xec,
	0x40, 0x48, 0xb7, 0xa5, 0xe1, 0x0f, 0x84, 0xbd, 0x0a, 0x56, 0x52, 0xe3, 0x15, 0x6c, 0x5c, 0x50,
	0xc1, 0xfe, 0x52, 0x82, 0xdc, 0x2e, 0x71, 0x5d, 0xad, 0x41, 0x4a, 0xd6, 0x91, 0x7d, 0x06, 0x0d,
	0xe8, 0x5d, 0x40, 0x2d, 0x5f, 0x01, 0x5d, 0x21, 0x2a, 0x5d, 0x3b, 0xe2, 0x63, 0x91, 0x68, 0x69,
	0x25, 0x58, 0xe5, 0x7d, 0xc0, 0xdc, 0xc1, 0xb0, 0xd9, 0x05, 0xc8, 0xb5, 0x7a, 0x3f, 0xc5, 0x53,
	0x37, 0x84, 0x0f, 0xa6, 0x6e, 0x88, 0x27, 0x14, 0x39, 0x75, 0xa8, 0xda, 0xff, 0x07, 0x12, 0x4c,
	0x73, 0x06, 0xbf, 0x3b, 0x3a, 0xfa, 0xd0, 0x6d, 0xc0, 0x44, 0xcb, 0xae, 0x17, 0xcd, 0x61, 0x4e,
	0x5d, 0x1c, 0x29, 0x7b, 0x80, 0x36, 0x35, 0x8f, 0x05, 0xac, 0x44, 0x4f, 0x72, 0xc7, 0xec, 0x54,
	0x93, 0x25, 0x56, 0x3d, 0xf5, 0xae, 0x57, 0xb2, 0xbc, 0x37, 0xee, 0xf3, 0x93, 0x17, 0xf1, 0x5b,
	0xc5, 0xac, 0xa2, 0xf5, 0xbb, 0xf1, 0x05, 0x0c, 0x3e, 0x52, 0x7e, 0x2e, 0x41, 0x76, 0x73, 0xeb,
	0x11, 0x7e, 0x15, 0xc6, 0xdb, 0x4d, 0xb7, 0x50, 0xe4, 0xba, 0x66, 0x63, 0xab, 0x64, 0xb7, 0x56,
	0xf5, 0xe9, 0x1c, 0x58, 0x54, 0xb8, 0x8e, 0x14, 0x60, 0x51, 0xe1, 0x40, 0xa5, 0xc0, 0xd7, 0x5d,
	0x0a, 0x50, 0x29, 0xc8, 0x7f, 0x25, 0xc1, 0xcc, 0x96, 0x45, 0x9c, 0xc6, 0xa9, 0x62, 0x5b, 0x6e,
	0xa7, 0x45, 0x1c, 0xfc, 0x31, 0x2b, 0x0e, 0xf1, 0x23, 0x03, 0xb7, 0x2d, 0xb9, 0x82, 0xe3, 0x40,
	0x9e, 0x17, 0x91, 0x0c, 0xbc, 0x09, 0x33, 0x7e, 0x63, 0xd1, 0xb0, 0x1a, 0x8f, 0x8c, 0x56, 0xb7,
	0xc1, 0xdf, 0xff, 0x86, 0x1a, 0xe3, 0x89, 0x7c, 0x1d, 0x51, 0x34, 0x53, 0xdf, 0x25, 0x5e, 0xd3,
	0xae, 0x0f, 0xf1, 0x75, 0x24, 0x0a, 0x0e, 0x36, 0xcd, 0x3d, 0xc0, 0x74, 0xef, 0x8b, 0x49, 0x7a,
	0x3f, 0x52, 0x5e, 0x06, 0x88, 0x4a, 0x16, 0x1f, 0x79, 0x1f, 0x56, 0xba, 0x46, 0xee, 0x38, 0x06,
	0x2d, 0x68, 0x16, 0xd1, 0xbd, 0xdd, 0xe0, 0xcb, 0xc2, 0x9b, 0x51, 0x4b, 0x63, 0x71, 0x15, 0x70,
	0x04, 0xe6, 0xfe, 0x40, 0x82, 0x45, 0x6a, 0xaf, 0x48, 0xa8, 0x12, 0x33, 0x7a, 0xb0, 0x54, 0x41,
	0xd9, 0xdc, 0x86, 0x0b, 0xfe, 0xbf, 0xb6, 0xbe, 0xe5, 0x11, 0xcb, 0xa5, 0x27, 0xb2, 0x61, 0xb2,
	0x14, 0x67, 0x8a, 0x74, 0xbf, 0x2b, 0xdb, 0xaa, 0xd1, 0xb0, 0x86, 0xe8, 0x7e, 0xf7, 0x80, 0x81,
	0xbf, 0x8f, 0x60, 0x86, 0xba, 0x1b, 0x92, 0xf0, 0x76, 0xcc, 0xcb, 0x54, 0x11, 0x82, 0xb4, 0xa8,
	0xb0, 0xd4, 0x35, 0xaa, 0x48, 0x9a, 0xda, 0xb1, 0x61, 0x77, 0x9c, 0x6e, 0xfc, 0x5e, 0x8f, 0xda,
	0xb6, 0x1a, 0x15, 0x9c, 0xc0, 0x07, 0x26, 0xfe, 0x1d, 0x3b, 0x15, 0xaa, 0x02, 0x81, 0xb7, 0x06,
	0xdd, 0xca, 0xa3, 0x37, 0xa3, 0xaf, 0x86, 0xef, 0xe7, 0x83, 0xf5, 0x27, 0x2f, 0xf0, 0x2f, 0x7a,
	0xb5, 0x8a, 0x9c, 0x96, 0x37, 0xb7, 0xaa, 0x3b, 0xc4, 0xf2, 0xfb, 0xfe, 0xf4, 0xb6, 0x4d, 0x86,
	0x38, 0x2d, 0x0b, 0x79, 0x82, 0xb8, 0xfc, 0x83, 0x04, 0x97, 0x68, 0x5c, 0xc4, 0x82, 0x5f, 0x30,
	0x36, 0x4a, 0x34, 0x36, 0xc3, 0xd8, 0x31, 0x82, 0xf8, 0x3c, 0x86, 0x7c, 0x2f, 0x3e, 0xa7, 0x96,
	0xd6, 0x32, 0xf4, 0x3d, 0xe2, 0x7a, 0xcc, 0x81, 0x7b, 0xd1, 0xc8, 0x5c, 0x8e, 0x59, 0x14, 0x45,
	0x87, 0x8e, 0xe8, 0x73, 0x2c, 0x26, 0x31, 0x61, 0x2f, 0x18, 0x8d, 0xf7, 0xa2, 0xd1, 0xe8, 0xaf,
	0x7b, 0x04, 0x71, 0xf8, 0x8c, 0x55, 0x1d, 0x55, 0x58, 0x75, 0x0a, 0x81, 0x2d, 0x9f, 0xa3, 0xe8,
	0x70, 0x7b, 0x5e, 0x83, 0x19, 0x37, 0x59, 0x72, 0xa6, 0x42, 0xc0, 0x18, 0x3d, 0x52, 0x5d, 0x1e,
	0x10, 0xcd, 0xf4, 0x9a, 0x43, 0x54, 0x97, 0x1e, 0x30, 0x48, 0xc7, 0x31, 0xad, 0x2e, 0x6a, 0x58,
	0xc2, 0x3a, 0x48, 0xf5, 0xa1, 0x3a, 0xae, 0x52, 0x1d, 0xbf, 0x15, 0xcd, 0x42, 0xaa, 0xb6, 0x84,
	0xc3, 0xf2, 0x6f, 0x40, 0x76, 0x4b, 0x55, 0xcf, 0x70, 0xaf, 0x95, 0x9f, 0x00, 0xda, 0x3a, 0x26,
	0x96, 0x37, 0xe2, 0x03, 0xdf, 0xaf, 0x03, 0x30, 0xb1, 0x67, 0x74, 0x7a, 0x93, 0x1b, 0x30, 0xb7,
	0x6d, 0x3b, 0x44, 0xd7, 0x5c, 0x5f, 0x85, 0xff, 0x65, 0xf1, 0x0c, 0x14, 0xfd, 0x5c, 0x82, 0x5c,
	0xa0, 0xa9, 0xb4, 0xb5, 0x49, 0x53, 0x71, 0x94, 0x54, 0x2c, 0x4e, 0x85, 0xc0, 0xc2, 0x20, 0x15,
	0x02, 0x19, 0xf8, 0x6d, 0x98, 0xf3, 0x3f, 0x85, 0x86, 0x5a, 0xec, 0xdd, 0x56, 0x52, 0x6f, 0x6a,
	0x88, 0x40, 0x6c, 0x65, 0xb0, 0xe1, 0xe0, 0x7c, 0xca, 0x96, 0x6d, 0x36, 0xb2, 0x32, 0x22, 0x74,
	0x59, 0x83, 0xf3, 0x11, 0xfb, 0xce, 0x20, 0x76, 0xfb, 0x90, 0xa5, 0x21, 0x1b, 0xbd, 0xe0, 0xef,
	0x49, 0x41, 0x4f, 0xbb, 0x54, 0xfe, 0x3c, 0x3d, 0xed, 0xf1, 0xcf, 0xdb, 0xd3, 0x7e, 0x81, 0x1e,
	0xe3, 0x3f, 0x4b, 0x30, 0x4b, 0x2f, 0x09, 0x0d, 0xe2, 0x8c, 0xb6, 0xfb, 0xfd, 0x26, 0x8c, 0x97,
	0x2c, 0xaf, 0xfb, 0x6d, 0x4b, 0xd8, 0xff, 0x2e, 0x95, 0xc3, 0xfd, 0x6f, 0x1f, 0xff, 0x2b, 0x75,
	0xc0, 0x7f, 0x26, 0xc1, 0x4a, 0xb4, 0x83, 0xc0, 0x96, 0x77, 0xc1, 0xaa, 0xfb, 0x0a, 0x47, 0xe1,
	0xd8, 0xeb, 0x90, 0x2d, 0x92, 0x26, 0x77, 0x2b, 0xd1, 0x76, 0x12, 0x9c, 0x9b, 0xaa, 0x14, 0x8f,
	0xdf, 0x82, 0xc9, 0xad, 0x2d, 0xbf, 0x88, 0x76, 0x5f, 0x87, 0x25, 0x78, 0x43, 0x25, 0xbd, 0x8b,
	0x96, 0xeb, 0x80, 0x76, 0x89, 0xe6, 0x76, 0x1c, 0xd2, 0x3a, 0xc3, 0x52, 0x75, 0x08, 0xe3, 0xbb,
	0xac, 0x0f, 0x76, 0x86, 0x55, 0xfc, 0x1b, 0xfe, 0x5d, 0xa7, 0x65, 0x3c, 0x63, 0x05, 0x61, 0xc4,
	0xc5, 0xfc, 0xdf, 0xb2, 0x90, 0xe3, 0x3d, 0xe0, 0xdd, 0xdd, 0xbd, 0xf2, 0x28, 0x72, 0x7d, 0x13,
	0x26, 0x36, 0x5b, 0xf5, 0x5a, 0xa1, 0x29, 0xbe, 0xa3, 0x16, 0x95, 0x6a, 0x95, 0x03, 0xf0, 0x97,
	0xe0, 0x1c, 0xfb, 0x97, 0xd3, 0x14, 0x5f, 0x53, 0x29, 0x36, 0x40, 0xd0, 0x1b, 0xed, 0x66, 0xab,
	0xbe, 0xdf, 0xe4, 0xeb, 0x53, 0x00, 0xf5, 0xe9, 0xd4, 0x00, 0xb5, 0xd3, 0xa6, 0x06, 0x8c, 0xa7,
	0x1a, 0xe0, 0x03, 0xa8, 0x01, 0xec, 0x5f, 0x4e, 0x93, 0xbd, 0x0b, 0x12, 0x1b, 0xc0, 0x11, 0xd4,
	0x00, 0xb5, 0xd3, 0xde, 0x6f, 0xb2, 0x77, 0x41, 0x62, 0x03, 0x18, 0x9d, 0x1a, 0xb0, 0x67, 0x7b,
	0xd4, 0x80, 0xc9, 0x54, 0x03, 0x7c, 0x00, 0x35, 0x80, 0xfd, 0xcb, 0x69, 0xe6, 0xa7, 0x52, 0x0d,
	0xe0, 0x08, 0x6a, 0xc0, 0x9e, 0xed, 0xed, 0x37, 0xf3, 0x90, 0x6a, 0x00, 0xa3, 0xcb, 0x7f, 0x91,
	0x81, 0x29, 0xb6, 0xb8, 0x59, 0x4e, 0x6f, 0xc1, 0x58, 0xbb, 0xe9, 0x16, 0xc4, 0xc9, 0x0c, 0x25,
	0xbf, 0xca, 0x60, 0xf8, 0x4e, 0xd0, 0x8b, 0xc8, 0x0c, 0xc2, 0xf3, 0x9e, 0x84, 0x2f, 0xbf, 0x28,
	0x7e, 0xd4, 0x11, 0x97, 0x5f, 0xe4, 0xf2, 0x8b, 0x0a, 0xcf, 0xe3, 0x00, 0xf9, 0x45, 0x85, 0xcb,
	0x57, 0x78, 0x36, 0x07, 0xc8, 0x57, 0xb8, 0x7c, 0xa5, 0xc0, 0x33, 0x3a, 0x40, 0xbe, 0x52, 0x90,
	0x3f, 0xcb, 0xc2, 0x64, 0x95, 0x6e, 0x02, 0x9a, 0x47, 0x30, 0x81, 0x55, 0x8b, 0x34, 0x34, 0xcf,
	0x38, 0x26, 0x55, 0xa2, 0xf5, 0xde, 0x36, 0x3e, 0xac, 0x15, 0x9c, 0x0a, 0x71, 0x76, 0x0d, 0x6b,
	0x98, 0x6f, 0xff, 0x83, 0x64, 0xe0, 0x8f, 0xe1, 0x52, 0x08, 0x62, 0xfa, 0xe4, 0x7d, 0xae, 0x20,
	0x33, 0x58, 0x41, 0x3a, 0x37, 0xf5, 0xa0, 0x6d, 0xbb, 0x46, 0x3f, 0x0f, 0x86, 0x78, 0x18, 0x39,
	0x48, 0x06, 0xf5, 0x20, 0x04, 0x89, 0x79, 0x30, 0x36, 0x84, 0x07, 0xa9, 0xdc, 0xf2, 0x3e, 0xe0,
	0x20, 0x4d, 0x67, 0x59, 0xed, 0xaa, 0xff, 0x5f, 0xed, 0xfe, 0x4f, 0x54, 0xbb, 0x9f, 0x4a, 0x90,
	0xdd, 0xff, 0x78, 0x0b, 0x5f, 0x83, 0xac, 0x45, 0xbc, 0xf4, 0x16, 0x2a, 0xa5, 0xe2, 0xeb, 0x30,
	0x66, 0x91, 0x8e, 0x97, 0xde, 0x3f, 0x65, 0x64, 0x0a, 0x63, 0x35, 0x33, 0xb5, 0x7b, 0xea, 0xd7,
	0xca, 0xeb, 0xbc, 0xf4, 0x8d, 0xf5, 0x83, 0x15, 0x39, 0x4c, 0x11, 0x67, 0x28, 0x80, 0x29, 0xf2,
	0xbf, 0x87, 0xa7, 0xe7, 0x47, 0x4f, 0x46, 0x31, 0x3d, 0x57, 0x41, 0x2a, 0x88, 0x7d, 0xdd, 0xff,
	0x78, 0xab, 0x2a, 0x15, 0xf0, 0x5b, 0x30, 0xa1, 0x98, 0xfa, 0x6e, 0xf7, 0x80, 0xb5, 0x96, 0xfc,
	0x26, 0x18, 0x6b, 0x9a, 0x72, 0x3c, 0x5e, 0x83, 0xcc, 0x83, 0x67, 0xdc, 0xf3, 0xc4, 0x2b, 0xac,
	0x6a, 0xe6, 0xc1, 0x33, 0x7c, 0x15, 0x32, 0x95, 0x6d, 0xb1, 0xd3, 0x54, 0x7b, 0xa6, 0xb2, 0x8d,
	0xef, 0xc3, 0x84, 0xdf, 0xad, 0xe3, 0x33, 0x72, 0x25, 0xa9, 0x3e, 0xd4, 0x10, 0xe4, 0x58, 0x9a,
	0xe9, 0x4a, 0xb3, 0x26, 0x9e, 0x99, 0x54, 0x32, 0xa5, 0x32, 0x50, 0xa5, 0x26, 0x9e, 0x94, 0x9b,
	0x5b, 0x8f, 0xaa, 0x94, 0x4a, 0x4d, 0xac, 0x15, 0xc4, 0x93, 0x91, 0x99, 0x58, 0x2b, 0x50, 0x39,
	0xb5, 0x82, 0x23, 0x9e, 0x85, 0x4c, 0x59, 0xad, 0xe0, 0xd0, 0x38, 0xef, 0xe7, 0x73, 0xa9, 0x71,
	0xde, 0x97, 0x15, 0xc0, 0xbd, 0x36, 0xd2, 0x61, 0xc5, 0x76, 0x79, 0xcf, 0x27, 0xd2, 0xac, 0x88,
	0x1d, 0xf8, 0xbb, 0xb8, 0xa0, 0x57, 0xf1, 0xfd, 0xee, 0xe5, 0x68, 0xb3, 0xa2, 0xbe, 0x68, 0xc3,
	0xe8, 0xcd, 0x68, 0xab, 0x22, 0x4d, 0xd7, 0x08, 0x5a, 0x45, 0xdf, 0xc9, 0x00, 0xf6, 0xcd, 0x2c,
	0x58, 0x75, 0x76, 0x99, 0xf8, 0x48, 0x29, 0x56, 0xb1, 0x07, 0x2b, 0x66, 0x9f, 0x7b, 0x06, 0x77,
	0x65, 0xbd, 0xdf, 0xb7, 0xcd, 0x28, 0x07, 0x9f, 0xf0, 0x7d, 0xa5, 0x62, 0x05, 0x72, 0xa1, 0x66,
	0x98, 0xf8, 0x0b, 0xa7, 0xa0, 0x1d, 0x57, 0x0d, 0x73, 0xe1, 0x7b, 0x90, 0xad, 0xd8, 0xae, 0x38,
	0x08, 0xdd, 0x84, 0x84, 0x1f, 0xd4, 0x54, 0xec, 0xd0, 0xeb, 0xac, 0x92, 0xaa, 0x7c, 0x91, 0x37,
	0x59, 0xb9, 0x06, 0xb3, 0xbe, 0xe2, 0x11, 0x6f, 0x9f, 0xa1, 0xe7, 0x66, 0xca, 0x17, 0xfa, 0xdc,
	0xec, 0x00, 0x72, 0xbe, 0xe2, 0xb3, 0xba, 0xc8, 0xfd, 0xb6, 0x04, 0xd9, 0x9a, 0xfa, 0xc2, 0x4b,
	0x2a, 0xe2, 0xde, 0xd4, 0x08, 0x56, 0xce, 0x4f, 0x24, 0x40, 0x7e, 0x87, 0x71, 0xb4, 0x8d, 0x85,
	0x6e, 0x7f, 0x20, 0xf3, 0xc2, 0xfd, 0x01, 0x7c, 0x17, 0xc6, 0x55, 0xcf, 0x29, 0x59, 0xe2, 0xbd,
	0xb0, 0xa6, 0x46, 0xda, 0x11, 0x0c, 0x29, 0xff, 0xae, 0x04, 0x39, 0xf5, 0xc4, 0xf0, 0xf4, 0xa6,
	0xff, 0x06, 0xe5, 0xbe, 0xbf, 0x7c, 0x84, 0x7f, 0xac, 0xd0, 0x7b, 0x38, 0x14, 0x5b, 0x3f, 0x23,
	0x7b, 0x5c, 0xf2, 0x00, 0xa6, 0x7c, 0x63, 0x14, 0x75, 0x07, 0xbf, 0x03, 0x13, 0xba, 0x73, 0xdc,
	0x7b, 0x5a, 0x12, 0x7f, 0x03, 0xd2, 0xb3, 0x3a, 0xf2, 0xed, 0x9a, 0xb1, 0xc8, 0x1f, 0xc1, 0x25,
	0x2e, 0x49, 0xf0, 0xfa, 0xe1, 0x1d, 0xf6, 0xbc, 0x64, 0xb3, 0xf7, 0xbc, 0x64, 0x51, 0x24, 0x3a,
	0xf9, 0xb8, 0x84, 0x72, 0x44, 0xb6, 0x87, 0xf0, 0x07, 0x92, 0x7e, 0xdb, 0x43, 0xfc, 0x6b, 0xcb,
	0xfa, 0x7f, 0x4f, 0xc0, 0x4c, 0xec, 0x8f, 0xc5, 0x16, 0x61, 0x2e, 0x3a, 0x72, 0x60, 0xd9, 0x16,
	0x41, 0x2f, 0xe1, 0x3c, 0xcc, 0xc7, 0x08, 0xec, 0x45, 0x0f, 0xca, 0x08, 0x58, 0x1a, 0x8e, 0xd6,
	0x42, 0x59, 0x7c, 0x11, 0x70, 0x8c, 0x50, 0x68, 0xb5, 0xd1, 0xb8, 0x60, 0xbc, 0x4e, 0x1a, 0x68,
	0x4a, 0x30, 0xee, 0x68, 0x75, 0x04, 0x02, 0x05, 0x75, 0xd2, 0x50, 0xd0, 0xa2, 0xc0, 0xa6, 0x6d,
	0x8d, 0xb2, 0x5c, 0x12, 0x88, 0x72, 0x89, 0x8e, 0x96, 0x05, 0x1c, 0x0f, 0x88, 0xe5, 0x9c, 0xa2,
	0x15, 0x3c, 0x0f, 0x28, 0x46, 0xa9, 0xa1, 0xcb, 0x02, 0x39, 0x76, 0xb3, 0x85, 0xae, 0x08, 0xe4,
	0xfc, 0x9a, 0xdd, 0x31, 0x09, 0x5a, 0xc5, 0x97, 0x60, 0x21, 0x46, 0x29, 0x93, 0x13, 0xcf, 0xb6,
	0xd0, 0x1a, 0x5e, 0x80, 0xd9, 0xb8, 0xf2, 0x67, 0xe8, 0xaa, 0x40, 0xf3, 0x3e, 0x7a, 0x45, 0x00,
	0xae, 0x68, 0xe8, 0x55, 0xc1, 0x70, 0x6b, 0x03, 0xdd, 0xc4, 0x4b, 0x70, 0x31, 0x36, 0xac, 0x1a,
	0xa4, 0x45, 0x2c, 0x17, 0xbd, 0x2e, 0x60, 0xa9, 0x15, 0xd0, 0x7b, 0x02, 0xd7, 0x6a, 0x05, 0x07,
	0x7d, 0x55, 0xe0, 0xc0, 0x49, 0x85, 0x38, 0xb5, 0x02, 0x2a, 0x08, 0x59, 0x9a, 0x68, 0x47, 0xa0,
	0x61, 0xbf, 0x89, 0x1e, 0x08, 0xf2, 0x46, 0xcf, 0xe9, 0xa8, 0x24, 0x50, 0xd1, 0x7c, 0x56, 0x21,
	0x8e, 0x8a, 0x1e, 0x0a, 0x02, 0x7b, 0xc2, 0x28, 0x1f, 0x0a, 0x28, 0xb6, 0xd7, 0x24, 0x0e, 0xaa,
	0x0b, 0xd4, 0x17, 0x9a, 0xe8, 0x9b, 0x78, 0x31, 0x61, 0x6d, 0xcb, 0xb0, 0xd0, 0x9f, 0x4a, 0x38,
	0x9f, 0xb0, 0xab, 0x69, 0x77, 0x1c, 0xf4, 0x5d, 0x09, 0x5f, 0x4c, 0x46, 0xf7, 0x1e, 0xfa, 0x81,
	0x84, 0x97, 0x84, 0x31, 0xd9, 0xdd, 0x40, 0x7f, 0x2d, 0x92, 0x56, 0x27, 0x8d, 0x6d, 0xf4, 0x47,
	0x19, 0x91, 0x01, 0xed, 0x26, 0xfa, 0x65, 0x76, 0xfd, 0x97, 0x19, 0x9f, 0x12, 0xfb, 0xab, 0xca,
	0x65, 0x58, 0x4c, 0x8e, 0x06, 0xeb, 0x6f, 0x05, 0xf2, 0x02, 0xa2, 0x1f, 0x02, 0x29, 0x85, 0xaa,
	0xd3, 0x5d, 0x0b, 0x65, 0x52, 0x04, 0xd7, 0x89, 0x6e, 0xa0, 0x6c, 0x0a, 0x71, 0xc7, 0x68, 0x68,
	0x68, 0x2c, 0x85, 0xf8, 0x89, 0x61, 0xda, 0x68, 0x3c, 0x85, 0xb8, 0x4b, 0x1a, 0x1a, 0x9a, 0x48,
	0xb1, 0xa8, 0x65, 0xe8, 0x8e, 0x8d, 0xce, 0xa5, 0x52, 0x4d, 0xd3, 0x40, 0x93, 0x69, 0x81, 0xd0,
	0x2c, 0x1b, 0x4d, 0xa5, 0x10, 0xdb, 0x86, 0x6e, 0x23, 0x48, 0x21, 0xee, 0x11, 0x47, 0x43, 0xb9,
	0xf5, 0xef, 0x8d, 0xc1, 0xf9, 0xe8, 0x1f, 0x6b, 0x5e, 0x04, 0x1c, 0x19, 0x08, 0x82, 0xbd, 0x08,
	0x73, 0xd1, 0xf1, 0x20, 0xce, 0x73, 0x70, 0x21, 0x4a, 0x28, 0x23, 0x94, 0x1c, 0x54, 0xd0, 0x1a,
	0x5d, 0xd5, 0xb1, 0xc1, 0xb2, 0xbf, 0xd6, 0xa3, 0xa3, 0x05, 0x05, 0xdd, 0xa0, 0x13, 0x38, 0x3e,
	0x5a, 0x46, 0x37, 0x93, 0x72, 0x8b, 0xe8, 0x83, 0xa4, 0x84, 0x62, 0x19, 0x15, 0x04, 0xa3, 0x0a,
	0x2a, 0x26, 0xe5, 0x16, 0x95, 0x32, 0xd2, 0xf0, 0x7c, 0x5c, 0x6e, 0x01, 0x3d, 0x97, 0xf0, 0x42,
	0xc2, 0xb4, 0x32, 0xfa, 0x54, 0x34, 0x5c, 0x44, 0xdf, 0x61, 0x2b, 0x25, 0x3e, 0x5c, 0x46, 0x3f,
	0x12, 0x8e, 0x2b, 0xe8, 0x17, 0x12, 0x5d, 0x0b, 0x89, 0xf1, 0x32, 0xfa, 0x4f, 0x81, 0x7c, 0x77,
	0x03, 0x3d, 0xcf, 0x24, 0xe5, 0xb8, 0x1b, 0x65, 0xf4, 0x69, 0x46, 0x00, 0xbf, 0x8b, 0x9e, 0x8f,
	0x09, 0xe0, 0x77, 0xcb, 0xe8, 0x53, 0xe1, 0xf8, 0x06, 0x7a, 0x3e, 0x91, 0x34, 0xc7, 0xbd, 0x4b,
	0xe5, 0x4f, 0xac, 0x9f, 0xc2, 0x74, 0xe4, 0x6f, 0x63, 0x17, 0x60, 0x36, 0xfc, 0xfb, 0xa0, 0x61,
	0xdb, 0x75, 0x7f, 0x37, 0x8c, 0x0c, 0x1b, 0x16, 0xfb, 0xdb, 0x42, 0x24, 0xd1, 0xda, 0x16, 0xa1,
	0x38, 0xc4, 0x25, 0xce, 0x31, 0xa9, 0xa3, 0x0c, 0xbe, 0x0c, 0x97, 0x22, 0xa4, 0xa7, 0x1d, 0xe2,
	0xb2, 0x2d, 0xfc, 0xd0, 0x24, 0x28, 0xbb, 0xfe, 0x01, 0x40, 0xe8, 0x4f, 0x3e, 0x2f, 0x02, 0xee,
	0xfd, 0x3a, 0x68, 0x3b, 0xb6, 0x4e, 0x5c, 0x17, 0xbd, 0x44, 0x2b, 0x7d, 0x68, 0xdc, 0xed, 0x1c,
	0xba, 0x9e, 0xe1, 0x75, 0x3c, 0x52, 0x47, 0xd2, 0xfa, 0x7f, 0x49, 0x80, 0x12, 0x7f, 0xce, 0x78,
	0x05, 0x96, 0xe2, 0x63, 0x07, 0x4f, 0xca, 0x9b, 0x5b, 0xdb, 0xa5, 0xf2, 0xd6, 0xa6, 0x3f, 0xd7,
	0x13, 0xf4, 0xbd, 0xd7, 0xd0, 0x39, 0x31, 0xe1, 0xae, 0xbf, 0x1f, 0x27, 0x09, 0x1b, 0x68, 0x46,
	0x4c, 0xb8, 0x87, 0x90, 0x98, 0x70, 0x1f, 0x61, 0x31, 0xe1, 0x75, 0x34, 0x8f, 0xd7, 0x60, 0x25,
	0x41, 0xe8, 0x58, 0x6e, 0x9b, 0xe8, 0xec, 0x18, 0x8e, 0x56, 0xd7, 0x7f, 0x7c, 0x1e, 0x16, 0xc4,
	0xaf, 0xb5, 0xaf, 0xc0, 0x92, 0x90, 0x10, 0xac, 0xee, 0x55, 0x58, 0x16, 0xd3, 0x83, 0x55, 0x7e,
	0x0d, 0x56, 0xc5, 0x80, 0xc2, 0x81, 0x45, 0xbc, 0x83, 0x96, 0xd6, 0x40, 0x19, 0xfc, 0x32, 0xac,
	0xa5, 0x83, 0x3a, 0x3e, 0x2a, 0xdb, 0x0f, 0xd5, 0x6e, 0xba, 0x05, 0x86, 0x1a, 0x1b, 0x80, 0x2a,
	0x32, 0xd4, 0xf8, 0x00, 0x94, 0xc2, 0x50, 0x13, 0x34, 0x72, 0x62, 0xd4, 0x83, 0x67, 0x0c, 0x71,
	0x2e, 0x5d, 0x4e, 0x65, 0xbb, 0xeb, 0xdf, 0x24, 0xbe, 0x0e, 0x57, 0xfb, 0xa0, 0xb8, 0x83, 0x53,
	0x7d, 0x61, 0x5d, 0x0f, 0x61, 0x10, 0xcc, 0x77, 0x31, 0x37, 0x08, 0xe6, 0xfb, 0x38, 0xdd, 0x07,
	0xd6, 0xac, 0x31, 0x17, 0x34, 0xab, 0x81, 0xce, 0x0f, 0x86, 0x51, 0x69, 0x33, 0xf8, 0x15, 0x90,
	0xfb, 0xc1, 0x3a, 0xbe, 0xb8, 0x0b, 0x43, 0xe0, 0xa8, 0x3c, 0xd4, 0x1f, 0xc7, 0x62, 0x42, 0xe5,
	0xcd, 0x0e, 0x81, 0xa3, 0xf2, 0xf0, 0x40, 0x5c, 0x91, 0xc9, 0x9b, 0x1b, 0x02, 0x47, 0xe5, 0xcd,
	0x0f, 0xc4, 0x29, 0x4c, 0xde, 0xc2, 0x10, 0x38, 0x2a, 0xef, 0x22, 0x7e, 0x15, 0xae, 0xa5, 0xe0,
	0x2a, 0xbe, 0x1f, 0xbe, 0x81, 0x8b, 0xc3, 0x00, 0xa9, 0xc4, 0xfc, 0x40, 0x60, 0xd1, 0x37, 0xf1,
	0xd2, 0x30, 0x40, 0x2a, 0x71, 0x69, 0x20, 0x50, 0xf1, 0x93, 0xb2, 0x3c, 0x0c, 0x90, 0x4a, 0x5c,
	0x49, 0x5f, 0x45, 0xb5, 0x5e, 0x95, 0xb8, 0x9c, 0x3e, 0x05, 0x6b, 0xa1, 0x32, 0x71, 0xa5, 0x2f,
	0xac, 0x3b, 0x13, 0x56, 0x07, 0xc1, 0xfc, 0xf0, 0xad, 0x0d, 0x82, 0xf9, 0x31, 0xb9, 0xda, 0x0f,
	0xe6, 0x74, 0x5d, 0x90, 0xd3, 0xa7, 0x81, 0x0f, 0xe3, 0x3e, 0x5c, 0xeb, 0x8f, 0xeb, 0x3a, 0xf1,
	0xf2, 0x40, 0x9c, 0xef, 0xc5, 0xf5, 0x81, 0x38, 0xdf, 0x8d, 0x57, 0xd2, 0xab, 0xf5, 0x7e, 0xd7,
	0x89, 0x57, 0xd3, 0xb3, 0xb5, 0xdf, 0x73, 0xe1, 0x46, 0x3f, 0x54, 0xd7, 0x81, 0x9b, 0x03, 0x50,
	0xbe, 0xf9, 0xeb, 0x03, 0x50, 0xbe, 0xf1, 0x5f, 0x5a, 0xff, 0x36, 0xcc, 0xc4, 0x9e, 0x11, 0xaf,
	0x40, 0x3e, 0x3a, 0x12, 0xd9, 0xad, 0x97, 0xe0, 0x62, 0x8c, 0x5a, 0x39, 0x50, 0x1e, 0x15, 0x54,
	0x15, 0xe5, 0x04, 0xb4, 0x5d, 0x4e, 0x9b, 0xa6, 0x1b, 0x6d, 0x8c, 0xb6, 0x59, 0xda, 0xde, 0x46,
	0xe7, 0xd7, 0xff, 0x36, 0x03, 0x73, 0xa2, 0x27, 0x7a, 0x57, 0xe1, 0xb2, 0x60, 0x38, 0x62, 0xcb,
	0x32, 0x2c, 0x8a, 0x20, 0x8a, 0x5a, 0x42, 0x12, 0xdd, 0x84, 0x45, 0xc4, 0x9a, 0x72, 0x50, 0x53,
	0x4b, 0x28, 0x93, 0x46, 0x57, 0x7c, 0x7a, 0x96, 0x86, 0x41, 0x44, 0x67, 0x5b, 0xf8, 0x21, 0x3d,
	0x4a, 0x89, 0xa8, 0xfe, 0x06, 0xae, 0xe3, 0xd5, 0x14, 0xe5, 0x6a, 0xe9, 0xa0, 0xf2, 0x21, 0xfa,
	0x97, 0x0b, 0xfd, 0x00, 0xb5, 0x6d, 0xf4, 0xaf, 0x17, 0xf0, 0x1a, 0x2c, 0xa7, 0x01, 0x4a, 0xea,
	0x63, 0xf4, 0xb3, 0x0b, 0xeb, 0x65, 0x80, 0xd0, 0x0b, 0xe3, 0x3c, 0xcc, 0xf7, 0x7e, 0x45, 0xa2,
	0x84, 0x61, 0x26, 0x44, 0x29, 0x6d, 0x29, 0x48, 0x8a, 0x8d, 0x6d, 0x6d, 0x95, 0x50, 0x66, 0xfd,
	0x9f, 0x24, 0x98, 0x4d, 0x3e, 0x07, 0x5e, 0x85, 0xe5, 0xc4, 0x60, 0x44, 0x7c, 0x1e, 0xe6, 0x93,
	0x00, 0xdb, 0x42, 0x12, 0x8d, 0x51, 0x92, 0x72, 0xe8, 0xff, 0xef, 0x1c, 0x28, 0x43, 0x67, 0x4b,
	0x92, 0xec, 0x11, 0xd7, 0x43, 0x59, 0x2c, 0xc3, 0x15, 0x31, 0xad, 0xcb, 0x3f, 0x46, 0x0f, 0xba,
	0x02, 0xc5, 0x47, 0x47, 0x68, 0x7c, 0xfd, 0x17, 0x59, 0x58, 0x10, 0xbf, 0xe0, 0xbd, 0x06, 0xab,
	0x42, 0x42, 0xc4, 0xa5, 0x57, 0xe1, 0x9a, 0x18, 0x54, 0xb6, 0xbd, 0x83, 0xee, 0xcb, 0x7e, 0xff,
	0x9c, 0x26, 0x06, 0x3e, 0xee, 0x82, 0x32, 0xb4, 0xca, 0x89, 0x41, 0xaa, 0xa7, 0x39, 0x14, 0x73,
	0xd0, 0x69, 0xa3, 0x6c, 0xba, 0x52, 0xb5, 0xd9, 0xf1, 0x18, 0xac, 0x6e, 0x9f, 0x58, 0x68, 0x0c,
	0xdf, 0x82, 0x9b, 0x62, 0x60, 0xc1, 0x3b, 0xa8, 0x1b, 0x2e, 0xff, 0x7f, 0x9d, 0x0e, 0x4c, 0x72,
	0x4c, 0x4c, 0x34, 0x8e, 0xd7, 0xe1, 0x15, 0x31, 0xbc, 0xaa, 0xb5, 0xda, 0x54, 0xac, 0x61, 0x1d,
	0xb4, 0xed, 0x13, 0xe2, 0xa0, 0x09, 0x7c, 0x0f, 0xee, 0x0c, 0xc4, 0x3a, 0xfc, 0xf3, 0x3a, 0x67,
	0x3a, 0x47, 0x17, 0x6a, 0xaa, 0x7f, 0x56, 0xfd, 0xf0, 0x14, 0x4d, 0xe2, 0xd7, 0xe0, 0xcb, 0xe9,
	0x01, 0xd5, 0xfc, 0xc7, 0x83, 0x87, 0x26, 0x39, 0x78, 0x62, 0x7d, 0x62, 0x51, 0x27, 0x0f, 0xe9,
	0xb4, 0x4b, 0x89, 0xac, 0xbf, 0xc2, 0xd6, 0x7f, 0x4b, 0x82, 0x0b, 0xf1, 0x07, 0xc9, 0x79, 0x98,
	0x8f, 0x0d, 0x05, 0x27, 0xee, 0x65, 0x58, 0x8c, 0x53, 0xe8, 0x6c, 0xf2, 0xb3, 0x78, 0x19, 0x2e,
	0xc5, 0x89, 0x76, 0x28, 0x7f, 0x4b, 0x70, 0x31, 0x4e, 0x3e, 0xd2, 0x0c, 0x93, 0xd4, 0x51, 0x76,
	0xfd, 0x10, 0x20, 0xf4, 0x0e, 0x77, 0x0e, 0x2e, 0xf4, 0x7e, 0x05, 0xaa, 0x67, 0xe1, 0x7c, 0x68,
	0xf0, 0xf1, 0x43, 0x44, 0xef, 0xa8, 0x38, 0x34, 0xb4, 0xaf, 0x39, 0x96, 0xaf, 0x69, 0x1e, 0x50,
	0x68, 0xbc, 0x60, 0x6a, 0x4e, 0x0b, 0x65, 0xd7, 0x09, 0x4c, 0xf5, 0xbe, 0xbf, 0x2d, 0xc2, 0x5c,
	0xf7, 0xc7, 0x81, 0xe7, 0x68, 0x96, 0x6b, 0x10, 0xcb, 0x43, 0x2f, 0x51, 0xde, 0x1e, 0x41, 0x37,
	0x6d, 0x97, 0x5e, 0xc8, 0xe8, 0x3a, 0xef, 0x8d, 0xda, 0x6d, 0x62, 0x21, 0x7a, 0x83, 0x9d, 0xed,
	0x8d, 0x05, 0xf7, 0xc6, 0xec, 0xfa, 0x8e, 0xff, 0xad, 0xc4, 0x5f, 0x26, 0xb3, 0x70, 0xbe, 0x17,
	0x72, 0xba, 0xa6, 0x5e, 0xc2, 0x08, 0xa6, 0x43, 0x43, 0x74, 0x7d, 0x2f, 0xf8, 0x5f, 0x6d, 0xf8,
	0x45, 0x90, 0x27, 0x3b, 0x53, 0xfc, 0x54, 0x82, 0x79, 0xaa, 0xea, 0xa8, 0x75, 0x18, 0x69, 0xff,
	0x56, 0xa4, 0xaf, 0x55, 0x1a, 0x86, 0x67, 0x6a, 0x6c, 0xf8, 0x0e, 0x87, 0xdc, 0x69, 0xbb, 0xf4,
	0xdf, 0x6e, 0xef, 0x7f, 0x7e, 0x6b, 0xd8, 0xb7, 0x38, 0xed, 0x96, 0xdd, 0x76, 0x6f, 0x75, 0xc7,
	0x03, 0x86, 0xb0, 0xcc, 0x3f, 0xcf, 0x08, 0x55, 0x1d, 0x4e, 0x30, 0xae, 0x7b, 0xff, 0x1b, 0x00,
	0x00, 0xff, 0xff, 0xd4, 0xf3, 0x13, 0x33, 0x91, 0x4e, 0x00, 0x00,
}
