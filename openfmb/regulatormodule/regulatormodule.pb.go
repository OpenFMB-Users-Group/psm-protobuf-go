// Code generated by protoc-gen-go. DO NOT EDIT.
// source: regulatormodule/regulatormodule.proto

package regulatormodule

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	wrappers "github.com/golang/protobuf/ptypes/wrappers"
	_ "gitlab.com/openfmb/psm/ops/protobuf/go-openfmb-ops-protobuf/openfmb"
	commonmodule "gitlab.com/openfmb/psm/ops/protobuf/go-openfmb-ops-protobuf/openfmb/commonmodule"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// LN: Automatic tap changer controller   Name: ATCC
type RegulatorControlATCC struct {
	// Centre of voltage control bandwidth (forward power flow presumed).
	BndCtr *commonmodule.ASG `protobuf:"bytes,1,opt,name=BndCtr,proto3" json:"BndCtr,omitempty"`
	// Control (secondary) voltage bandwidth (i.e., range), given either as voltage value or percentage
	// of the nominal voltage (forward power flow presumed).
	BndWid *commonmodule.ASG `protobuf:"bytes,2,opt,name=BndWid,proto3" json:"BndWid,omitempty"`
	// Time to wait before operating, after reaching the control point (forward power flow presumed).
	CtlDlTmms *commonmodule.ControlING `protobuf:"bytes,3,opt,name=CtlDlTmms,proto3" json:"CtlDlTmms,omitempty"`
	// Line drop voltage due to line resistance component (forward power flow presumed) at rated current.
	LDCR *commonmodule.ASG `protobuf:"bytes,4,opt,name=LDCR,proto3" json:"LDCR,omitempty"`
	// Line drop voltage due to line reactance component (forward power flow presumed) at rated current.
	LDCX *commonmodule.ASG `protobuf:"bytes,5,opt,name=LDCX,proto3" json:"LDCX,omitempty"`
	// Line drop voltage due to line total impedance (forward power flow presumed) at rated current.
	LDCZ *commonmodule.ASG `protobuf:"bytes,6,opt,name=LDCZ,proto3" json:"LDCZ,omitempty"`
	// (controllable) If true, transformers operate in parallel, otherwise they operate independently.
	ParOp *commonmodule.ControlSPC `protobuf:"bytes,7,opt,name=ParOp,proto3" json:"ParOp,omitempty"`
	// (controllable) Tap position change to the specified value.
	TapPos               *commonmodule.ControlISC `protobuf:"bytes,8,opt,name=TapPos,proto3" json:"TapPos,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *RegulatorControlATCC) Reset()         { *m = RegulatorControlATCC{} }
func (m *RegulatorControlATCC) String() string { return proto.CompactTextString(m) }
func (*RegulatorControlATCC) ProtoMessage()    {}
func (*RegulatorControlATCC) Descriptor() ([]byte, []int) {
	return fileDescriptor_3ad67e5e14e1a197, []int{0}
}

func (m *RegulatorControlATCC) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RegulatorControlATCC.Unmarshal(m, b)
}
func (m *RegulatorControlATCC) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RegulatorControlATCC.Marshal(b, m, deterministic)
}
func (m *RegulatorControlATCC) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RegulatorControlATCC.Merge(m, src)
}
func (m *RegulatorControlATCC) XXX_Size() int {
	return xxx_messageInfo_RegulatorControlATCC.Size(m)
}
func (m *RegulatorControlATCC) XXX_DiscardUnknown() {
	xxx_messageInfo_RegulatorControlATCC.DiscardUnknown(m)
}

var xxx_messageInfo_RegulatorControlATCC proto.InternalMessageInfo

func (m *RegulatorControlATCC) GetBndCtr() *commonmodule.ASG {
	if m != nil {
		return m.BndCtr
	}
	return nil
}

func (m *RegulatorControlATCC) GetBndWid() *commonmodule.ASG {
	if m != nil {
		return m.BndWid
	}
	return nil
}

func (m *RegulatorControlATCC) GetCtlDlTmms() *commonmodule.ControlING {
	if m != nil {
		return m.CtlDlTmms
	}
	return nil
}

func (m *RegulatorControlATCC) GetLDCR() *commonmodule.ASG {
	if m != nil {
		return m.LDCR
	}
	return nil
}

func (m *RegulatorControlATCC) GetLDCX() *commonmodule.ASG {
	if m != nil {
		return m.LDCX
	}
	return nil
}

func (m *RegulatorControlATCC) GetLDCZ() *commonmodule.ASG {
	if m != nil {
		return m.LDCZ
	}
	return nil
}

func (m *RegulatorControlATCC) GetParOp() *commonmodule.ControlSPC {
	if m != nil {
		return m.ParOp
	}
	return nil
}

func (m *RegulatorControlATCC) GetTapPos() *commonmodule.ControlISC {
	if m != nil {
		return m.TapPos
	}
	return nil
}

// Point definition (Point)
type RegulatorPoint struct {
	// Regulator control
	Control *RegulatorControlATCC `protobuf:"bytes,1,opt,name=control,proto3" json:"control,omitempty"`
	// Black start enable
	PctVDroop *wrappers.FloatValue `protobuf:"bytes,2,opt,name=pctVDroop,proto3" json:"pctVDroop,omitempty"`
	// Ramp rates
	RampRates *commonmodule.RampRate `protobuf:"bytes,3,opt,name=rampRates,proto3" json:"rampRates,omitempty"`
	// Enable reactive power set point
	ReactivePwrSetPointEnabled *commonmodule.ControlDPC `protobuf:"bytes,4,opt,name=reactivePwrSetPointEnabled,proto3" json:"reactivePwrSetPointEnabled,omitempty"`
	// Reset device
	Reset_ *commonmodule.ControlDPC `protobuf:"bytes,5,opt,name=reset,proto3" json:"reset,omitempty"`
	// State
	State *commonmodule.Optional_StateKind `protobuf:"bytes,6,opt,name=state,proto3" json:"state,omitempty"`
	// Enable voltage set point
	VoltageSetPointEnabled *commonmodule.ControlDPC `protobuf:"bytes,7,opt,name=voltageSetPointEnabled,proto3" json:"voltageSetPointEnabled,omitempty"`
	// Start time
	StartTime            *commonmodule.Timestamp `protobuf:"bytes,8,opt,name=startTime,proto3" json:"startTime,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *RegulatorPoint) Reset()         { *m = RegulatorPoint{} }
func (m *RegulatorPoint) String() string { return proto.CompactTextString(m) }
func (*RegulatorPoint) ProtoMessage()    {}
func (*RegulatorPoint) Descriptor() ([]byte, []int) {
	return fileDescriptor_3ad67e5e14e1a197, []int{1}
}

func (m *RegulatorPoint) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RegulatorPoint.Unmarshal(m, b)
}
func (m *RegulatorPoint) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RegulatorPoint.Marshal(b, m, deterministic)
}
func (m *RegulatorPoint) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RegulatorPoint.Merge(m, src)
}
func (m *RegulatorPoint) XXX_Size() int {
	return xxx_messageInfo_RegulatorPoint.Size(m)
}
func (m *RegulatorPoint) XXX_DiscardUnknown() {
	xxx_messageInfo_RegulatorPoint.DiscardUnknown(m)
}

var xxx_messageInfo_RegulatorPoint proto.InternalMessageInfo

func (m *RegulatorPoint) GetControl() *RegulatorControlATCC {
	if m != nil {
		return m.Control
	}
	return nil
}

func (m *RegulatorPoint) GetPctVDroop() *wrappers.FloatValue {
	if m != nil {
		return m.PctVDroop
	}
	return nil
}

func (m *RegulatorPoint) GetRampRates() *commonmodule.RampRate {
	if m != nil {
		return m.RampRates
	}
	return nil
}

func (m *RegulatorPoint) GetReactivePwrSetPointEnabled() *commonmodule.ControlDPC {
	if m != nil {
		return m.ReactivePwrSetPointEnabled
	}
	return nil
}

func (m *RegulatorPoint) GetReset_() *commonmodule.ControlDPC {
	if m != nil {
		return m.Reset_
	}
	return nil
}

func (m *RegulatorPoint) GetState() *commonmodule.Optional_StateKind {
	if m != nil {
		return m.State
	}
	return nil
}

func (m *RegulatorPoint) GetVoltageSetPointEnabled() *commonmodule.ControlDPC {
	if m != nil {
		return m.VoltageSetPointEnabled
	}
	return nil
}

func (m *RegulatorPoint) GetStartTime() *commonmodule.Timestamp {
	if m != nil {
		return m.StartTime
	}
	return nil
}

// Curve shape setting (FC=SP) (CSG_SP)
type RegulatorCSG struct {
	// The array with the points specifying a curve shape.
	CrvPts               []*RegulatorPoint `protobuf:"bytes,1,rep,name=crvPts,proto3" json:"crvPts,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *RegulatorCSG) Reset()         { *m = RegulatorCSG{} }
func (m *RegulatorCSG) String() string { return proto.CompactTextString(m) }
func (*RegulatorCSG) ProtoMessage()    {}
func (*RegulatorCSG) Descriptor() ([]byte, []int) {
	return fileDescriptor_3ad67e5e14e1a197, []int{2}
}

func (m *RegulatorCSG) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RegulatorCSG.Unmarshal(m, b)
}
func (m *RegulatorCSG) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RegulatorCSG.Marshal(b, m, deterministic)
}
func (m *RegulatorCSG) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RegulatorCSG.Merge(m, src)
}
func (m *RegulatorCSG) XXX_Size() int {
	return xxx_messageInfo_RegulatorCSG.Size(m)
}
func (m *RegulatorCSG) XXX_DiscardUnknown() {
	xxx_messageInfo_RegulatorCSG.DiscardUnknown(m)
}

var xxx_messageInfo_RegulatorCSG proto.InternalMessageInfo

func (m *RegulatorCSG) GetCrvPts() []*RegulatorPoint {
	if m != nil {
		return m.CrvPts
	}
	return nil
}

// OpenFMB specialization for control schedule using:  LN: Schedule   Name: FSCH
type RegulatorControlScheduleFSCH struct {
	// Discrete value in RegulatorCSG type
	ValDCSG              *RegulatorCSG `protobuf:"bytes,1,opt,name=ValDCSG,proto3" json:"ValDCSG,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *RegulatorControlScheduleFSCH) Reset()         { *m = RegulatorControlScheduleFSCH{} }
func (m *RegulatorControlScheduleFSCH) String() string { return proto.CompactTextString(m) }
func (*RegulatorControlScheduleFSCH) ProtoMessage()    {}
func (*RegulatorControlScheduleFSCH) Descriptor() ([]byte, []int) {
	return fileDescriptor_3ad67e5e14e1a197, []int{3}
}

func (m *RegulatorControlScheduleFSCH) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RegulatorControlScheduleFSCH.Unmarshal(m, b)
}
func (m *RegulatorControlScheduleFSCH) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RegulatorControlScheduleFSCH.Marshal(b, m, deterministic)
}
func (m *RegulatorControlScheduleFSCH) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RegulatorControlScheduleFSCH.Merge(m, src)
}
func (m *RegulatorControlScheduleFSCH) XXX_Size() int {
	return xxx_messageInfo_RegulatorControlScheduleFSCH.Size(m)
}
func (m *RegulatorControlScheduleFSCH) XXX_DiscardUnknown() {
	xxx_messageInfo_RegulatorControlScheduleFSCH.DiscardUnknown(m)
}

var xxx_messageInfo_RegulatorControlScheduleFSCH proto.InternalMessageInfo

func (m *RegulatorControlScheduleFSCH) GetValDCSG() *RegulatorCSG {
	if m != nil {
		return m.ValDCSG
	}
	return nil
}

// Using 61850 FSCC for regulator control
type RegulatorControlFSCC struct {
	// UML inherited base object
	ControlFSCC *commonmodule.ControlFSCC `protobuf:"bytes,1,opt,name=controlFSCC,proto3" json:"controlFSCC,omitempty"`
	// MISSING DOCUMENTATION!!!
	RegulatorControlScheduleFSCH *RegulatorControlScheduleFSCH `protobuf:"bytes,2,opt,name=regulatorControlScheduleFSCH,proto3" json:"regulatorControlScheduleFSCH,omitempty"`
	XXX_NoUnkeyedLiteral         struct{}                      `json:"-"`
	XXX_unrecognized             []byte                        `json:"-"`
	XXX_sizecache                int32                         `json:"-"`
}

func (m *RegulatorControlFSCC) Reset()         { *m = RegulatorControlFSCC{} }
func (m *RegulatorControlFSCC) String() string { return proto.CompactTextString(m) }
func (*RegulatorControlFSCC) ProtoMessage()    {}
func (*RegulatorControlFSCC) Descriptor() ([]byte, []int) {
	return fileDescriptor_3ad67e5e14e1a197, []int{4}
}

func (m *RegulatorControlFSCC) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RegulatorControlFSCC.Unmarshal(m, b)
}
func (m *RegulatorControlFSCC) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RegulatorControlFSCC.Marshal(b, m, deterministic)
}
func (m *RegulatorControlFSCC) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RegulatorControlFSCC.Merge(m, src)
}
func (m *RegulatorControlFSCC) XXX_Size() int {
	return xxx_messageInfo_RegulatorControlFSCC.Size(m)
}
func (m *RegulatorControlFSCC) XXX_DiscardUnknown() {
	xxx_messageInfo_RegulatorControlFSCC.DiscardUnknown(m)
}

var xxx_messageInfo_RegulatorControlFSCC proto.InternalMessageInfo

func (m *RegulatorControlFSCC) GetControlFSCC() *commonmodule.ControlFSCC {
	if m != nil {
		return m.ControlFSCC
	}
	return nil
}

func (m *RegulatorControlFSCC) GetRegulatorControlScheduleFSCH() *RegulatorControlScheduleFSCH {
	if m != nil {
		return m.RegulatorControlScheduleFSCH
	}
	return nil
}

// Regulator control
type RegulatorControl struct {
	// UML inherited base object
	ControlValue *commonmodule.ControlValue `protobuf:"bytes,1,opt,name=controlValue,proto3" json:"controlValue,omitempty"`
	// MISSING DOCUMENTATION!!!
	Check *commonmodule.CheckConditions `protobuf:"bytes,2,opt,name=check,proto3" json:"check,omitempty"`
	// MISSING DOCUMENTATION!!!
	RegulatorControlFSCC *RegulatorControlFSCC `protobuf:"bytes,3,opt,name=regulatorControlFSCC,proto3" json:"regulatorControlFSCC,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *RegulatorControl) Reset()         { *m = RegulatorControl{} }
func (m *RegulatorControl) String() string { return proto.CompactTextString(m) }
func (*RegulatorControl) ProtoMessage()    {}
func (*RegulatorControl) Descriptor() ([]byte, []int) {
	return fileDescriptor_3ad67e5e14e1a197, []int{5}
}

func (m *RegulatorControl) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RegulatorControl.Unmarshal(m, b)
}
func (m *RegulatorControl) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RegulatorControl.Marshal(b, m, deterministic)
}
func (m *RegulatorControl) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RegulatorControl.Merge(m, src)
}
func (m *RegulatorControl) XXX_Size() int {
	return xxx_messageInfo_RegulatorControl.Size(m)
}
func (m *RegulatorControl) XXX_DiscardUnknown() {
	xxx_messageInfo_RegulatorControl.DiscardUnknown(m)
}

var xxx_messageInfo_RegulatorControl proto.InternalMessageInfo

func (m *RegulatorControl) GetControlValue() *commonmodule.ControlValue {
	if m != nil {
		return m.ControlValue
	}
	return nil
}

func (m *RegulatorControl) GetCheck() *commonmodule.CheckConditions {
	if m != nil {
		return m.Check
	}
	return nil
}

func (m *RegulatorControl) GetRegulatorControlFSCC() *RegulatorControlFSCC {
	if m != nil {
		return m.RegulatorControlFSCC
	}
	return nil
}

// Pole-mounted fault interrupter with built-in phase and ground relays, current transformer (CT),
// and supplemental controls.
type RegulatorSystem struct {
	// UML inherited base object
	ConductingEquipment  *commonmodule.ConductingEquipment `protobuf:"bytes,1,opt,name=conductingEquipment,proto3" json:"conductingEquipment,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                          `json:"-"`
	XXX_unrecognized     []byte                            `json:"-"`
	XXX_sizecache        int32                             `json:"-"`
}

func (m *RegulatorSystem) Reset()         { *m = RegulatorSystem{} }
func (m *RegulatorSystem) String() string { return proto.CompactTextString(m) }
func (*RegulatorSystem) ProtoMessage()    {}
func (*RegulatorSystem) Descriptor() ([]byte, []int) {
	return fileDescriptor_3ad67e5e14e1a197, []int{6}
}

func (m *RegulatorSystem) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RegulatorSystem.Unmarshal(m, b)
}
func (m *RegulatorSystem) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RegulatorSystem.Marshal(b, m, deterministic)
}
func (m *RegulatorSystem) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RegulatorSystem.Merge(m, src)
}
func (m *RegulatorSystem) XXX_Size() int {
	return xxx_messageInfo_RegulatorSystem.Size(m)
}
func (m *RegulatorSystem) XXX_DiscardUnknown() {
	xxx_messageInfo_RegulatorSystem.DiscardUnknown(m)
}

var xxx_messageInfo_RegulatorSystem proto.InternalMessageInfo

func (m *RegulatorSystem) GetConductingEquipment() *commonmodule.ConductingEquipment {
	if m != nil {
		return m.ConductingEquipment
	}
	return nil
}

// Regulator control profile.  Instructs an end device (or an end device group) to perform a
// specified action.
type RegulatorControlProfile struct {
	// UML inherited base object
	ControlMessageInfo *commonmodule.ControlMessageInfo `protobuf:"bytes,1,opt,name=controlMessageInfo,proto3" json:"controlMessageInfo,omitempty"`
	// MISSING DOCUMENTATION!!!
	Ied *commonmodule.IED `protobuf:"bytes,2,opt,name=ied,proto3" json:"ied,omitempty"`
	// MISSING DOCUMENTATION!!!
	RegulatorControl *RegulatorControl `protobuf:"bytes,3,opt,name=regulatorControl,proto3" json:"regulatorControl,omitempty"`
	// MISSING DOCUMENTATION!!!
	RegulatorSystem      *RegulatorSystem `protobuf:"bytes,4,opt,name=regulatorSystem,proto3" json:"regulatorSystem,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *RegulatorControlProfile) Reset()         { *m = RegulatorControlProfile{} }
func (m *RegulatorControlProfile) String() string { return proto.CompactTextString(m) }
func (*RegulatorControlProfile) ProtoMessage()    {}
func (*RegulatorControlProfile) Descriptor() ([]byte, []int) {
	return fileDescriptor_3ad67e5e14e1a197, []int{7}
}

func (m *RegulatorControlProfile) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RegulatorControlProfile.Unmarshal(m, b)
}
func (m *RegulatorControlProfile) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RegulatorControlProfile.Marshal(b, m, deterministic)
}
func (m *RegulatorControlProfile) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RegulatorControlProfile.Merge(m, src)
}
func (m *RegulatorControlProfile) XXX_Size() int {
	return xxx_messageInfo_RegulatorControlProfile.Size(m)
}
func (m *RegulatorControlProfile) XXX_DiscardUnknown() {
	xxx_messageInfo_RegulatorControlProfile.DiscardUnknown(m)
}

var xxx_messageInfo_RegulatorControlProfile proto.InternalMessageInfo

func (m *RegulatorControlProfile) GetControlMessageInfo() *commonmodule.ControlMessageInfo {
	if m != nil {
		return m.ControlMessageInfo
	}
	return nil
}

func (m *RegulatorControlProfile) GetIed() *commonmodule.IED {
	if m != nil {
		return m.Ied
	}
	return nil
}

func (m *RegulatorControlProfile) GetRegulatorControl() *RegulatorControl {
	if m != nil {
		return m.RegulatorControl
	}
	return nil
}

func (m *RegulatorControlProfile) GetRegulatorSystem() *RegulatorSystem {
	if m != nil {
		return m.RegulatorSystem
	}
	return nil
}

// LN: Automatic tap changer controller   Name: ATCC
type RegulatorEventAndStatusATCC struct {
	// Centre of voltage control bandwidth (forward power flow presumed).
	BndCtr *commonmodule.ASG `protobuf:"bytes,1,opt,name=BndCtr,proto3" json:"BndCtr,omitempty"`
	// Control (secondary) voltage bandwidth (i.e., range), given either as voltage value or percentage
	// of the nominal voltage (forward power flow presumed).
	BndWid *commonmodule.ASG `protobuf:"bytes,2,opt,name=BndWid,proto3" json:"BndWid,omitempty"`
	// Line drop voltage due to line resistance component (forward power flow presumed) at rated current.
	LDCR *commonmodule.ASG `protobuf:"bytes,3,opt,name=LDCR,proto3" json:"LDCR,omitempty"`
	// Line drop voltage due to line reactance component (forward power flow presumed) at rated current.
	LDCX *commonmodule.ASG `protobuf:"bytes,4,opt,name=LDCX,proto3" json:"LDCX,omitempty"`
	// Line drop voltage due to line total impedance (forward power flow presumed) at rated current.
	LDCZ *commonmodule.ASG `protobuf:"bytes,5,opt,name=LDCZ,proto3" json:"LDCZ,omitempty"`
	// (controllable) If true, transformers operate in parallel, otherwise they operate independently.
	ParOp *commonmodule.StatusSPC `protobuf:"bytes,6,opt,name=ParOp,proto3" json:"ParOp,omitempty"`
	// If true, there was an error in tap position change, or in tap indication (for instance, wrong
	// Binary Coded Decimal (BCD) code).
	TapOpErr *commonmodule.StatusSPS `protobuf:"bytes,7,opt,name=TapOpErr,proto3" json:"TapOpErr,omitempty"`
	// (controllable) Tap position change to the specified value.
	TapPos               *commonmodule.StatusISC `protobuf:"bytes,8,opt,name=TapPos,proto3" json:"TapPos,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *RegulatorEventAndStatusATCC) Reset()         { *m = RegulatorEventAndStatusATCC{} }
func (m *RegulatorEventAndStatusATCC) String() string { return proto.CompactTextString(m) }
func (*RegulatorEventAndStatusATCC) ProtoMessage()    {}
func (*RegulatorEventAndStatusATCC) Descriptor() ([]byte, []int) {
	return fileDescriptor_3ad67e5e14e1a197, []int{8}
}

func (m *RegulatorEventAndStatusATCC) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RegulatorEventAndStatusATCC.Unmarshal(m, b)
}
func (m *RegulatorEventAndStatusATCC) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RegulatorEventAndStatusATCC.Marshal(b, m, deterministic)
}
func (m *RegulatorEventAndStatusATCC) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RegulatorEventAndStatusATCC.Merge(m, src)
}
func (m *RegulatorEventAndStatusATCC) XXX_Size() int {
	return xxx_messageInfo_RegulatorEventAndStatusATCC.Size(m)
}
func (m *RegulatorEventAndStatusATCC) XXX_DiscardUnknown() {
	xxx_messageInfo_RegulatorEventAndStatusATCC.DiscardUnknown(m)
}

var xxx_messageInfo_RegulatorEventAndStatusATCC proto.InternalMessageInfo

func (m *RegulatorEventAndStatusATCC) GetBndCtr() *commonmodule.ASG {
	if m != nil {
		return m.BndCtr
	}
	return nil
}

func (m *RegulatorEventAndStatusATCC) GetBndWid() *commonmodule.ASG {
	if m != nil {
		return m.BndWid
	}
	return nil
}

func (m *RegulatorEventAndStatusATCC) GetLDCR() *commonmodule.ASG {
	if m != nil {
		return m.LDCR
	}
	return nil
}

func (m *RegulatorEventAndStatusATCC) GetLDCX() *commonmodule.ASG {
	if m != nil {
		return m.LDCX
	}
	return nil
}

func (m *RegulatorEventAndStatusATCC) GetLDCZ() *commonmodule.ASG {
	if m != nil {
		return m.LDCZ
	}
	return nil
}

func (m *RegulatorEventAndStatusATCC) GetParOp() *commonmodule.StatusSPC {
	if m != nil {
		return m.ParOp
	}
	return nil
}

func (m *RegulatorEventAndStatusATCC) GetTapOpErr() *commonmodule.StatusSPS {
	if m != nil {
		return m.TapOpErr
	}
	return nil
}

func (m *RegulatorEventAndStatusATCC) GetTapPos() *commonmodule.StatusISC {
	if m != nil {
		return m.TapPos
	}
	return nil
}

// Point definition (Point)
type RegulatorEventAndStatusPoint struct {
	// Regulator event and status
	EventAndStatus *RegulatorEventAndStatusATCC `protobuf:"bytes,1,opt,name=eventAndStatus,proto3" json:"eventAndStatus,omitempty"`
	// Black start enable
	PctVDroop *wrappers.FloatValue `protobuf:"bytes,2,opt,name=pctVDroop,proto3" json:"pctVDroop,omitempty"`
	// Ramp rates
	RampRates *commonmodule.RampRate `protobuf:"bytes,3,opt,name=rampRates,proto3" json:"rampRates,omitempty"`
	// Enable reactive power set point
	ReactivePwrSetPointEnabled *commonmodule.StatusSPC `protobuf:"bytes,4,opt,name=reactivePwrSetPointEnabled,proto3" json:"reactivePwrSetPointEnabled,omitempty"`
	// State
	State *commonmodule.Optional_StateKind `protobuf:"bytes,5,opt,name=state,proto3" json:"state,omitempty"`
	// Enable voltage set point
	VoltageSetPointEnabled *commonmodule.StatusSPC `protobuf:"bytes,6,opt,name=voltageSetPointEnabled,proto3" json:"voltageSetPointEnabled,omitempty"`
	XXX_NoUnkeyedLiteral   struct{}                `json:"-"`
	XXX_unrecognized       []byte                  `json:"-"`
	XXX_sizecache          int32                   `json:"-"`
}

func (m *RegulatorEventAndStatusPoint) Reset()         { *m = RegulatorEventAndStatusPoint{} }
func (m *RegulatorEventAndStatusPoint) String() string { return proto.CompactTextString(m) }
func (*RegulatorEventAndStatusPoint) ProtoMessage()    {}
func (*RegulatorEventAndStatusPoint) Descriptor() ([]byte, []int) {
	return fileDescriptor_3ad67e5e14e1a197, []int{9}
}

func (m *RegulatorEventAndStatusPoint) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RegulatorEventAndStatusPoint.Unmarshal(m, b)
}
func (m *RegulatorEventAndStatusPoint) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RegulatorEventAndStatusPoint.Marshal(b, m, deterministic)
}
func (m *RegulatorEventAndStatusPoint) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RegulatorEventAndStatusPoint.Merge(m, src)
}
func (m *RegulatorEventAndStatusPoint) XXX_Size() int {
	return xxx_messageInfo_RegulatorEventAndStatusPoint.Size(m)
}
func (m *RegulatorEventAndStatusPoint) XXX_DiscardUnknown() {
	xxx_messageInfo_RegulatorEventAndStatusPoint.DiscardUnknown(m)
}

var xxx_messageInfo_RegulatorEventAndStatusPoint proto.InternalMessageInfo

func (m *RegulatorEventAndStatusPoint) GetEventAndStatus() *RegulatorEventAndStatusATCC {
	if m != nil {
		return m.EventAndStatus
	}
	return nil
}

func (m *RegulatorEventAndStatusPoint) GetPctVDroop() *wrappers.FloatValue {
	if m != nil {
		return m.PctVDroop
	}
	return nil
}

func (m *RegulatorEventAndStatusPoint) GetRampRates() *commonmodule.RampRate {
	if m != nil {
		return m.RampRates
	}
	return nil
}

func (m *RegulatorEventAndStatusPoint) GetReactivePwrSetPointEnabled() *commonmodule.StatusSPC {
	if m != nil {
		return m.ReactivePwrSetPointEnabled
	}
	return nil
}

func (m *RegulatorEventAndStatusPoint) GetState() *commonmodule.Optional_StateKind {
	if m != nil {
		return m.State
	}
	return nil
}

func (m *RegulatorEventAndStatusPoint) GetVoltageSetPointEnabled() *commonmodule.StatusSPC {
	if m != nil {
		return m.VoltageSetPointEnabled
	}
	return nil
}

// OpenFMB 61850 specialization for both RegulatorEventProfile and RegulatorStatusProfile
type RegulatorEventAndStatusANCR struct {
	// UML inherited base object
	LogicalNodeForEventAndStatus *commonmodule.LogicalNodeForEventAndStatus `protobuf:"bytes,1,opt,name=logicalNodeForEventAndStatus,proto3" json:"logicalNodeForEventAndStatus,omitempty"`
	// MISSING DOCUMENTATION!!!
	DynamicTest *commonmodule.ENS_DynamicTestKind `protobuf:"bytes,2,opt,name=DynamicTest,proto3" json:"DynamicTest,omitempty"`
	// MISSING DOCUMENTATION!!!
	PointStatus          *RegulatorEventAndStatusPoint `protobuf:"bytes,3,opt,name=PointStatus,proto3" json:"PointStatus,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                      `json:"-"`
	XXX_unrecognized     []byte                        `json:"-"`
	XXX_sizecache        int32                         `json:"-"`
}

func (m *RegulatorEventAndStatusANCR) Reset()         { *m = RegulatorEventAndStatusANCR{} }
func (m *RegulatorEventAndStatusANCR) String() string { return proto.CompactTextString(m) }
func (*RegulatorEventAndStatusANCR) ProtoMessage()    {}
func (*RegulatorEventAndStatusANCR) Descriptor() ([]byte, []int) {
	return fileDescriptor_3ad67e5e14e1a197, []int{10}
}

func (m *RegulatorEventAndStatusANCR) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RegulatorEventAndStatusANCR.Unmarshal(m, b)
}
func (m *RegulatorEventAndStatusANCR) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RegulatorEventAndStatusANCR.Marshal(b, m, deterministic)
}
func (m *RegulatorEventAndStatusANCR) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RegulatorEventAndStatusANCR.Merge(m, src)
}
func (m *RegulatorEventAndStatusANCR) XXX_Size() int {
	return xxx_messageInfo_RegulatorEventAndStatusANCR.Size(m)
}
func (m *RegulatorEventAndStatusANCR) XXX_DiscardUnknown() {
	xxx_messageInfo_RegulatorEventAndStatusANCR.DiscardUnknown(m)
}

var xxx_messageInfo_RegulatorEventAndStatusANCR proto.InternalMessageInfo

func (m *RegulatorEventAndStatusANCR) GetLogicalNodeForEventAndStatus() *commonmodule.LogicalNodeForEventAndStatus {
	if m != nil {
		return m.LogicalNodeForEventAndStatus
	}
	return nil
}

func (m *RegulatorEventAndStatusANCR) GetDynamicTest() *commonmodule.ENS_DynamicTestKind {
	if m != nil {
		return m.DynamicTest
	}
	return nil
}

func (m *RegulatorEventAndStatusANCR) GetPointStatus() *RegulatorEventAndStatusPoint {
	if m != nil {
		return m.PointStatus
	}
	return nil
}

// Regulator event
type RegulatorEvent struct {
	// UML inherited base object
	EventValue *commonmodule.EventValue `protobuf:"bytes,1,opt,name=eventValue,proto3" json:"eventValue,omitempty"`
	// MISSING DOCUMENTATION!!!
	RegulatorEventAndStatusANCR *RegulatorEventAndStatusANCR `protobuf:"bytes,2,opt,name=regulatorEventAndStatusANCR,proto3" json:"regulatorEventAndStatusANCR,omitempty"`
	XXX_NoUnkeyedLiteral        struct{}                     `json:"-"`
	XXX_unrecognized            []byte                       `json:"-"`
	XXX_sizecache               int32                        `json:"-"`
}

func (m *RegulatorEvent) Reset()         { *m = RegulatorEvent{} }
func (m *RegulatorEvent) String() string { return proto.CompactTextString(m) }
func (*RegulatorEvent) ProtoMessage()    {}
func (*RegulatorEvent) Descriptor() ([]byte, []int) {
	return fileDescriptor_3ad67e5e14e1a197, []int{11}
}

func (m *RegulatorEvent) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RegulatorEvent.Unmarshal(m, b)
}
func (m *RegulatorEvent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RegulatorEvent.Marshal(b, m, deterministic)
}
func (m *RegulatorEvent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RegulatorEvent.Merge(m, src)
}
func (m *RegulatorEvent) XXX_Size() int {
	return xxx_messageInfo_RegulatorEvent.Size(m)
}
func (m *RegulatorEvent) XXX_DiscardUnknown() {
	xxx_messageInfo_RegulatorEvent.DiscardUnknown(m)
}

var xxx_messageInfo_RegulatorEvent proto.InternalMessageInfo

func (m *RegulatorEvent) GetEventValue() *commonmodule.EventValue {
	if m != nil {
		return m.EventValue
	}
	return nil
}

func (m *RegulatorEvent) GetRegulatorEventAndStatusANCR() *RegulatorEventAndStatusANCR {
	if m != nil {
		return m.RegulatorEventAndStatusANCR
	}
	return nil
}

// Regulator event profile
type RegulatorEventProfile struct {
	// UML inherited base object
	EventMessageInfo *commonmodule.EventMessageInfo `protobuf:"bytes,1,opt,name=eventMessageInfo,proto3" json:"eventMessageInfo,omitempty"`
	// MISSING DOCUMENTATION!!!
	Ied *commonmodule.IED `protobuf:"bytes,2,opt,name=ied,proto3" json:"ied,omitempty"`
	// MISSING DOCUMENTATION!!!
	RegulatorEvent *RegulatorEvent `protobuf:"bytes,3,opt,name=regulatorEvent,proto3" json:"regulatorEvent,omitempty"`
	// MISSING DOCUMENTATION!!!
	RegulatorSystem      *RegulatorSystem `protobuf:"bytes,4,opt,name=regulatorSystem,proto3" json:"regulatorSystem,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *RegulatorEventProfile) Reset()         { *m = RegulatorEventProfile{} }
func (m *RegulatorEventProfile) String() string { return proto.CompactTextString(m) }
func (*RegulatorEventProfile) ProtoMessage()    {}
func (*RegulatorEventProfile) Descriptor() ([]byte, []int) {
	return fileDescriptor_3ad67e5e14e1a197, []int{12}
}

func (m *RegulatorEventProfile) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RegulatorEventProfile.Unmarshal(m, b)
}
func (m *RegulatorEventProfile) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RegulatorEventProfile.Marshal(b, m, deterministic)
}
func (m *RegulatorEventProfile) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RegulatorEventProfile.Merge(m, src)
}
func (m *RegulatorEventProfile) XXX_Size() int {
	return xxx_messageInfo_RegulatorEventProfile.Size(m)
}
func (m *RegulatorEventProfile) XXX_DiscardUnknown() {
	xxx_messageInfo_RegulatorEventProfile.DiscardUnknown(m)
}

var xxx_messageInfo_RegulatorEventProfile proto.InternalMessageInfo

func (m *RegulatorEventProfile) GetEventMessageInfo() *commonmodule.EventMessageInfo {
	if m != nil {
		return m.EventMessageInfo
	}
	return nil
}

func (m *RegulatorEventProfile) GetIed() *commonmodule.IED {
	if m != nil {
		return m.Ied
	}
	return nil
}

func (m *RegulatorEventProfile) GetRegulatorEvent() *RegulatorEvent {
	if m != nil {
		return m.RegulatorEvent
	}
	return nil
}

func (m *RegulatorEventProfile) GetRegulatorSystem() *RegulatorSystem {
	if m != nil {
		return m.RegulatorSystem
	}
	return nil
}

// Regulator reading value
type RegulatorReading struct {
	// UML inherited base object
	ConductingEquipmentTerminalReading *commonmodule.ConductingEquipmentTerminalReading `protobuf:"bytes,1,opt,name=conductingEquipmentTerminalReading,proto3" json:"conductingEquipmentTerminalReading,omitempty"`
	// MISSING DOCUMENTATION!!!
	PhaseMMTN *commonmodule.PhaseMMTN `protobuf:"bytes,2,opt,name=phaseMMTN,proto3" json:"phaseMMTN,omitempty"`
	// MISSING DOCUMENTATION!!!
	ReadingMMTR *commonmodule.ReadingMMTR `protobuf:"bytes,3,opt,name=readingMMTR,proto3" json:"readingMMTR,omitempty"`
	// MISSING DOCUMENTATION!!!
	ReadingMMXU          *commonmodule.ReadingMMXU `protobuf:"bytes,4,opt,name=readingMMXU,proto3" json:"readingMMXU,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *RegulatorReading) Reset()         { *m = RegulatorReading{} }
func (m *RegulatorReading) String() string { return proto.CompactTextString(m) }
func (*RegulatorReading) ProtoMessage()    {}
func (*RegulatorReading) Descriptor() ([]byte, []int) {
	return fileDescriptor_3ad67e5e14e1a197, []int{13}
}

func (m *RegulatorReading) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RegulatorReading.Unmarshal(m, b)
}
func (m *RegulatorReading) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RegulatorReading.Marshal(b, m, deterministic)
}
func (m *RegulatorReading) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RegulatorReading.Merge(m, src)
}
func (m *RegulatorReading) XXX_Size() int {
	return xxx_messageInfo_RegulatorReading.Size(m)
}
func (m *RegulatorReading) XXX_DiscardUnknown() {
	xxx_messageInfo_RegulatorReading.DiscardUnknown(m)
}

var xxx_messageInfo_RegulatorReading proto.InternalMessageInfo

func (m *RegulatorReading) GetConductingEquipmentTerminalReading() *commonmodule.ConductingEquipmentTerminalReading {
	if m != nil {
		return m.ConductingEquipmentTerminalReading
	}
	return nil
}

func (m *RegulatorReading) GetPhaseMMTN() *commonmodule.PhaseMMTN {
	if m != nil {
		return m.PhaseMMTN
	}
	return nil
}

func (m *RegulatorReading) GetReadingMMTR() *commonmodule.ReadingMMTR {
	if m != nil {
		return m.ReadingMMTR
	}
	return nil
}

func (m *RegulatorReading) GetReadingMMXU() *commonmodule.ReadingMMXU {
	if m != nil {
		return m.ReadingMMXU
	}
	return nil
}

// Regulator reading profile
type RegulatorReadingProfile struct {
	// UML inherited base object
	ReadingMessageInfo *commonmodule.ReadingMessageInfo `protobuf:"bytes,1,opt,name=readingMessageInfo,proto3" json:"readingMessageInfo,omitempty"`
	// MISSING DOCUMENTATION!!!
	Ied *commonmodule.IED `protobuf:"bytes,2,opt,name=ied,proto3" json:"ied,omitempty"`
	// MISSING DOCUMENTATION!!!
	RegulatorReading []*RegulatorReading `protobuf:"bytes,3,rep,name=regulatorReading,proto3" json:"regulatorReading,omitempty"`
	// MISSING DOCUMENTATION!!!
	RegulatorSystem      *RegulatorSystem `protobuf:"bytes,4,opt,name=regulatorSystem,proto3" json:"regulatorSystem,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *RegulatorReadingProfile) Reset()         { *m = RegulatorReadingProfile{} }
func (m *RegulatorReadingProfile) String() string { return proto.CompactTextString(m) }
func (*RegulatorReadingProfile) ProtoMessage()    {}
func (*RegulatorReadingProfile) Descriptor() ([]byte, []int) {
	return fileDescriptor_3ad67e5e14e1a197, []int{14}
}

func (m *RegulatorReadingProfile) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RegulatorReadingProfile.Unmarshal(m, b)
}
func (m *RegulatorReadingProfile) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RegulatorReadingProfile.Marshal(b, m, deterministic)
}
func (m *RegulatorReadingProfile) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RegulatorReadingProfile.Merge(m, src)
}
func (m *RegulatorReadingProfile) XXX_Size() int {
	return xxx_messageInfo_RegulatorReadingProfile.Size(m)
}
func (m *RegulatorReadingProfile) XXX_DiscardUnknown() {
	xxx_messageInfo_RegulatorReadingProfile.DiscardUnknown(m)
}

var xxx_messageInfo_RegulatorReadingProfile proto.InternalMessageInfo

func (m *RegulatorReadingProfile) GetReadingMessageInfo() *commonmodule.ReadingMessageInfo {
	if m != nil {
		return m.ReadingMessageInfo
	}
	return nil
}

func (m *RegulatorReadingProfile) GetIed() *commonmodule.IED {
	if m != nil {
		return m.Ied
	}
	return nil
}

func (m *RegulatorReadingProfile) GetRegulatorReading() []*RegulatorReading {
	if m != nil {
		return m.RegulatorReading
	}
	return nil
}

func (m *RegulatorReadingProfile) GetRegulatorSystem() *RegulatorSystem {
	if m != nil {
		return m.RegulatorSystem
	}
	return nil
}

// Regulator status
type RegulatorStatus struct {
	// UML inherited base object
	StatusValue *commonmodule.StatusValue `protobuf:"bytes,1,opt,name=statusValue,proto3" json:"statusValue,omitempty"`
	// MISSING DOCUMENTATION!!!
	RegulatorEventAndStatusANCR *RegulatorEventAndStatusANCR `protobuf:"bytes,2,opt,name=regulatorEventAndStatusANCR,proto3" json:"regulatorEventAndStatusANCR,omitempty"`
	XXX_NoUnkeyedLiteral        struct{}                     `json:"-"`
	XXX_unrecognized            []byte                       `json:"-"`
	XXX_sizecache               int32                        `json:"-"`
}

func (m *RegulatorStatus) Reset()         { *m = RegulatorStatus{} }
func (m *RegulatorStatus) String() string { return proto.CompactTextString(m) }
func (*RegulatorStatus) ProtoMessage()    {}
func (*RegulatorStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor_3ad67e5e14e1a197, []int{15}
}

func (m *RegulatorStatus) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RegulatorStatus.Unmarshal(m, b)
}
func (m *RegulatorStatus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RegulatorStatus.Marshal(b, m, deterministic)
}
func (m *RegulatorStatus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RegulatorStatus.Merge(m, src)
}
func (m *RegulatorStatus) XXX_Size() int {
	return xxx_messageInfo_RegulatorStatus.Size(m)
}
func (m *RegulatorStatus) XXX_DiscardUnknown() {
	xxx_messageInfo_RegulatorStatus.DiscardUnknown(m)
}

var xxx_messageInfo_RegulatorStatus proto.InternalMessageInfo

func (m *RegulatorStatus) GetStatusValue() *commonmodule.StatusValue {
	if m != nil {
		return m.StatusValue
	}
	return nil
}

func (m *RegulatorStatus) GetRegulatorEventAndStatusANCR() *RegulatorEventAndStatusANCR {
	if m != nil {
		return m.RegulatorEventAndStatusANCR
	}
	return nil
}

// Regulator status profile
type RegulatorStatusProfile struct {
	// UML inherited base object
	StatusMessageInfo *commonmodule.StatusMessageInfo `protobuf:"bytes,1,opt,name=statusMessageInfo,proto3" json:"statusMessageInfo,omitempty"`
	// MISSING DOCUMENTATION!!!
	Ied *commonmodule.IED `protobuf:"bytes,2,opt,name=ied,proto3" json:"ied,omitempty"`
	// MISSING DOCUMENTATION!!!
	RegulatorStatus *RegulatorStatus `protobuf:"bytes,3,opt,name=regulatorStatus,proto3" json:"regulatorStatus,omitempty"`
	// MISSING DOCUMENTATION!!!
	RegulatorSystem      *RegulatorSystem `protobuf:"bytes,4,opt,name=regulatorSystem,proto3" json:"regulatorSystem,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *RegulatorStatusProfile) Reset()         { *m = RegulatorStatusProfile{} }
func (m *RegulatorStatusProfile) String() string { return proto.CompactTextString(m) }
func (*RegulatorStatusProfile) ProtoMessage()    {}
func (*RegulatorStatusProfile) Descriptor() ([]byte, []int) {
	return fileDescriptor_3ad67e5e14e1a197, []int{16}
}

func (m *RegulatorStatusProfile) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RegulatorStatusProfile.Unmarshal(m, b)
}
func (m *RegulatorStatusProfile) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RegulatorStatusProfile.Marshal(b, m, deterministic)
}
func (m *RegulatorStatusProfile) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RegulatorStatusProfile.Merge(m, src)
}
func (m *RegulatorStatusProfile) XXX_Size() int {
	return xxx_messageInfo_RegulatorStatusProfile.Size(m)
}
func (m *RegulatorStatusProfile) XXX_DiscardUnknown() {
	xxx_messageInfo_RegulatorStatusProfile.DiscardUnknown(m)
}

var xxx_messageInfo_RegulatorStatusProfile proto.InternalMessageInfo

func (m *RegulatorStatusProfile) GetStatusMessageInfo() *commonmodule.StatusMessageInfo {
	if m != nil {
		return m.StatusMessageInfo
	}
	return nil
}

func (m *RegulatorStatusProfile) GetIed() *commonmodule.IED {
	if m != nil {
		return m.Ied
	}
	return nil
}

func (m *RegulatorStatusProfile) GetRegulatorStatus() *RegulatorStatus {
	if m != nil {
		return m.RegulatorStatus
	}
	return nil
}

func (m *RegulatorStatusProfile) GetRegulatorSystem() *RegulatorSystem {
	if m != nil {
		return m.RegulatorSystem
	}
	return nil
}

func init() {
	proto.RegisterType((*RegulatorControlATCC)(nil), "regulatormodule.RegulatorControlATCC")
	proto.RegisterType((*RegulatorPoint)(nil), "regulatormodule.RegulatorPoint")
	proto.RegisterType((*RegulatorCSG)(nil), "regulatormodule.RegulatorCSG")
	proto.RegisterType((*RegulatorControlScheduleFSCH)(nil), "regulatormodule.RegulatorControlScheduleFSCH")
	proto.RegisterType((*RegulatorControlFSCC)(nil), "regulatormodule.RegulatorControlFSCC")
	proto.RegisterType((*RegulatorControl)(nil), "regulatormodule.RegulatorControl")
	proto.RegisterType((*RegulatorSystem)(nil), "regulatormodule.RegulatorSystem")
	proto.RegisterType((*RegulatorControlProfile)(nil), "regulatormodule.RegulatorControlProfile")
	proto.RegisterType((*RegulatorEventAndStatusATCC)(nil), "regulatormodule.RegulatorEventAndStatusATCC")
	proto.RegisterType((*RegulatorEventAndStatusPoint)(nil), "regulatormodule.RegulatorEventAndStatusPoint")
	proto.RegisterType((*RegulatorEventAndStatusANCR)(nil), "regulatormodule.RegulatorEventAndStatusANCR")
	proto.RegisterType((*RegulatorEvent)(nil), "regulatormodule.RegulatorEvent")
	proto.RegisterType((*RegulatorEventProfile)(nil), "regulatormodule.RegulatorEventProfile")
	proto.RegisterType((*RegulatorReading)(nil), "regulatormodule.RegulatorReading")
	proto.RegisterType((*RegulatorReadingProfile)(nil), "regulatormodule.RegulatorReadingProfile")
	proto.RegisterType((*RegulatorStatus)(nil), "regulatormodule.RegulatorStatus")
	proto.RegisterType((*RegulatorStatusProfile)(nil), "regulatormodule.RegulatorStatusProfile")
}

func init() {
	proto.RegisterFile("regulatormodule/regulatormodule.proto", fileDescriptor_3ad67e5e14e1a197)
}

var fileDescriptor_3ad67e5e14e1a197 = []byte{
	// 1340 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xc4, 0x58, 0xcb, 0x6f, 0xdc, 0x44,
	0x1c, 0x96, 0x77, 0xf3, 0x68, 0x7e, 0x5b, 0xf5, 0x31, 0x94, 0xd6, 0x4d, 0x1f, 0x49, 0x2d, 0x55,
	0x2a, 0x88, 0x6c, 0xaa, 0x16, 0x2a, 0x01, 0x12, 0xd5, 0xc6, 0xbb, 0x09, 0x15, 0xcd, 0x66, 0x3b,
	0xde, 0x26, 0x69, 0x39, 0x54, 0x13, 0xef, 0x64, 0x6b, 0x61, 0x7b, 0x5c, 0x7b, 0x36, 0xa5, 0x37,
	0x4e, 0x08, 0x71, 0xe2, 0x06, 0x7f, 0x03, 0x57, 0x94, 0x3b, 0xb7, 0x4a, 0xa8, 0xea, 0x8d, 0x03,
	0xff, 0x06, 0x1c, 0x11, 0x12, 0xb2, 0x3d, 0xde, 0x1d, 0x3f, 0x37, 0x39, 0x04, 0x6e, 0x6b, 0xcf,
	0xf7, 0x7d, 0x33, 0xbf, 0x87, 0x7f, 0xdf, 0x24, 0x70, 0xd3, 0xa7, 0xc3, 0x91, 0x4d, 0x38, 0xf3,
	0x1d, 0x36, 0x18, 0xd9, 0x74, 0x35, 0xf3, 0xdc, 0xf4, 0x7c, 0xc6, 0x19, 0x3a, 0x9b, 0x79, 0xbd,
	0xb8, 0x30, 0x72, 0xec, 0x78, 0x6d, 0xf1, 0xfa, 0x90, 0xb1, 0xa1, 0x4d, 0x57, 0xa3, 0xa7, 0xbd,
	0xd1, 0xfe, 0xea, 0x4b, 0x9f, 0x78, 0x1e, 0xf5, 0x03, 0xb1, 0xbe, 0x64, 0x32, 0xc7, 0x61, 0xae,
	0xd0, 0x97, 0x1f, 0x62, 0x80, 0xf6, 0x77, 0x0d, 0x2e, 0xe0, 0x44, 0x5f, 0x67, 0x2e, 0xf7, 0x99,
	0xdd, 0xea, 0xeb, 0x3a, 0x7a, 0x0f, 0xe6, 0xd6, 0xdc, 0x81, 0xce, 0x7d, 0x55, 0x59, 0x56, 0x6e,
	0x35, 0xee, 0x9c, 0x6f, 0xa6, 0xd8, 0x2d, 0x63, 0x03, 0x0b, 0x80, 0x80, 0xee, 0x58, 0x03, 0xb5,
	0x56, 0x05, 0xdd, 0xb1, 0x06, 0xe8, 0x1e, 0x2c, 0xe8, 0xdc, 0x6e, 0xdb, 0x7d, 0xc7, 0x09, 0xd4,
	0x7a, 0x84, 0x56, 0xd3, 0x68, 0x71, 0x86, 0x07, 0xdd, 0x0d, 0x3c, 0x81, 0xa2, 0x9b, 0x30, 0xf3,
	0xb0, 0xad, 0x63, 0x75, 0xa6, 0x6c, 0x83, 0x68, 0x59, 0xc0, 0x76, 0xd5, 0xd9, 0x2a, 0xd8, 0xae,
	0x80, 0x3d, 0x55, 0xe7, 0xaa, 0x60, 0x4f, 0x51, 0x13, 0x66, 0x7b, 0xc4, 0xdf, 0xf2, 0xd4, 0xf9,
	0x8a, 0x83, 0x1a, 0x3d, 0x1d, 0xc7, 0x30, 0x74, 0x1b, 0xe6, 0xfa, 0xc4, 0xeb, 0xb1, 0x40, 0x3d,
	0x55, 0x15, 0x99, 0xa1, 0x63, 0x81, 0xd3, 0x7e, 0x9c, 0x81, 0x33, 0xe3, 0xec, 0xf7, 0x98, 0xe5,
	0x72, 0x74, 0x1f, 0xe6, 0xcd, 0x18, 0x28, 0x12, 0x7f, 0xb3, 0x99, 0x6d, 0x8b, 0xa2, 0x7a, 0xe1,
	0x84, 0x85, 0x3e, 0x86, 0x05, 0xcf, 0xe4, 0xdb, 0x6d, 0x9f, 0x31, 0x4f, 0x14, 0xe4, 0x4a, 0x33,
	0x6e, 0x93, 0x66, 0xd2, 0x26, 0xcd, 0x75, 0x9b, 0x11, 0xbe, 0x4d, 0xec, 0x11, 0xc5, 0x13, 0x34,
	0xfa, 0x10, 0x16, 0x7c, 0xe2, 0x78, 0x98, 0x70, 0x9a, 0x54, 0xe7, 0x62, 0x3a, 0x06, 0x2c, 0x96,
	0xf1, 0x04, 0x88, 0x76, 0x61, 0xd1, 0xa7, 0xc4, 0xe4, 0xd6, 0x01, 0xed, 0xbd, 0xf4, 0x0d, 0xca,
	0xa3, 0x40, 0x3a, 0x2e, 0xd9, 0xb3, 0xe9, 0x40, 0x54, 0xac, 0x38, 0x15, 0xed, 0x9e, 0x8e, 0x2b,
	0xb8, 0x61, 0x01, 0x7c, 0x1a, 0x50, 0x2e, 0xea, 0x59, 0x2e, 0x12, 0xc3, 0xd0, 0x3d, 0x98, 0x0d,
	0x38, 0xe1, 0x54, 0x14, 0x76, 0x39, 0x8d, 0xdf, 0xf2, 0xb8, 0xc5, 0x5c, 0x62, 0x3f, 0x33, 0x42,
	0xcc, 0x17, 0x96, 0x3b, 0xc0, 0x31, 0x1c, 0xf5, 0xe0, 0xe2, 0x01, 0xb3, 0x39, 0x19, 0xd2, 0xec,
	0xe9, 0xe7, 0xa7, 0x6c, 0x5c, 0xc2, 0x43, 0xf7, 0x61, 0x21, 0xe0, 0xc4, 0xe7, 0x7d, 0xcb, 0xa1,
	0xa2, 0x1b, 0x2e, 0xa5, 0x45, 0xc2, 0x95, 0x80, 0x13, 0xc7, 0x5b, 0x3b, 0xf5, 0xdd, 0xa1, 0xaa,
	0xfc, 0x70, 0xa8, 0x2a, 0x78, 0xc2, 0xd1, 0x1e, 0xc1, 0xe9, 0x49, 0x99, 0x8d, 0x0d, 0xd4, 0x82,
	0x39, 0xd3, 0x3f, 0xe8, 0xf1, 0x40, 0x55, 0x96, 0xeb, 0xb7, 0x1a, 0x77, 0x96, 0xca, 0xbb, 0x22,
	0x3a, 0x88, 0xa4, 0x2a, 0x88, 0x1a, 0x81, 0xab, 0xd9, 0xce, 0x31, 0xcc, 0xe7, 0x34, 0x24, 0xaf,
	0x1b, 0xfa, 0xe7, 0xa8, 0x05, 0xf3, 0xdb, 0xc4, 0x6e, 0xeb, 0xc6, 0x86, 0xe8, 0xbc, 0x6b, 0x15,
	0x9d, 0x67, 0x6c, 0x48, 0x3b, 0x24, 0x3c, 0xed, 0x8d, 0x92, 0x9f, 0x26, 0xeb, 0x86, 0xae, 0xa3,
	0x16, 0x34, 0xcc, 0xc9, 0xa3, 0xd0, 0xbf, 0x5c, 0x98, 0xd6, 0x10, 0xb0, 0x36, 0xf3, 0x4d, 0xa8,
	0x2b, 0x73, 0xd0, 0x0b, 0xb8, 0xea, 0x57, 0x1c, 0x5f, 0xb4, 0xfa, 0xca, 0xd4, 0xaf, 0x45, 0x26,
	0xe1, 0x4a, 0x49, 0xed, 0x4f, 0x05, 0xce, 0x65, 0xe9, 0xa8, 0x0d, 0xa7, 0xc5, 0xb1, 0xa2, 0xef,
	0x47, 0xc4, 0xb2, 0x58, 0x18, 0x4b, 0x84, 0x10, 0xc1, 0xa4, 0x58, 0xe8, 0x2e, 0xcc, 0x9a, 0xcf,
	0xa9, 0xf9, 0x95, 0x38, 0xf6, 0xb5, 0x0c, 0x3d, 0x5c, 0xd2, 0x99, 0x3b, 0xb0, 0xc2, 0x96, 0x0d,
	0x70, 0x8c, 0x45, 0x26, 0x5c, 0xf0, 0x0b, 0xb2, 0x2b, 0x3e, 0xd5, 0xe9, 0x83, 0x22, 0x4a, 0xed,
	0xa4, 0x6c, 0x85, 0x62, 0x9a, 0x0d, 0x67, 0xc7, 0x3c, 0xe3, 0x55, 0xc0, 0xa9, 0x83, 0x9e, 0xc0,
	0x3b, 0x26, 0x73, 0x07, 0x23, 0x93, 0x5b, 0xee, 0xb0, 0xf3, 0x62, 0x64, 0x79, 0x0e, 0x75, 0xb9,
	0x88, 0xfc, 0x46, 0x2e, 0xf2, 0x2c, 0x50, 0x24, 0xa0, 0x48, 0x43, 0xfb, 0xbd, 0x06, 0x97, 0xb2,
	0xc7, 0xec, 0xf9, 0x6c, 0xdf, 0xb2, 0x29, 0xda, 0x06, 0x24, 0x72, 0xb6, 0x49, 0x83, 0x80, 0x0c,
	0xe9, 0x03, 0x77, 0x9f, 0x89, 0x5d, 0x97, 0x0b, 0xf3, 0x2d, 0xe1, 0xc4, 0xa6, 0x05, 0x0a, 0x68,
	0x05, 0xea, 0x16, 0x2d, 0x31, 0xab, 0x07, 0x9d, 0xb6, 0x94, 0xa1, 0x10, 0x87, 0x76, 0xe0, 0x5c,
	0x36, 0x51, 0x22, 0xe3, 0x37, 0xa6, 0x66, 0x5c, 0xd2, 0xca, 0x89, 0xa0, 0x3e, 0x4c, 0xac, 0x3d,
	0xce, 0xb4, 0x98, 0x96, 0xcb, 0xe5, 0xba, 0x31, 0x4e, 0x92, 0xcd, 0x4a, 0x7c, 0x32, 0xf3, 0xeb,
	0x5f, 0xaa, 0xa2, 0xfd, 0x53, 0x83, 0x2b, 0x63, 0x52, 0xe7, 0x80, 0xba, 0xbc, 0xe5, 0x0e, 0xc2,
	0xc1, 0x37, 0x0a, 0x4e, 0xd0, 0xde, 0x13, 0x9b, 0xae, 0x1f, 0xcd, 0xa6, 0x67, 0x8e, 0x66, 0xd3,
	0xb3, 0xd5, 0x36, 0xbd, 0x92, 0xd8, 0xf4, 0x5c, 0xd1, 0x9c, 0x8d, 0x63, 0x96, 0x5c, 0xfa, 0x2e,
	0x9c, 0xea, 0x13, 0x6f, 0xcb, 0xeb, 0xf8, 0xbe, 0x18, 0xef, 0x25, 0x0c, 0x03, 0x8f, 0x81, 0x68,
	0x35, 0x63, 0xed, 0x85, 0x14, 0xd9, 0xd9, 0x5f, 0xd7, 0xa5, 0x69, 0x9b, 0xce, 0x7f, 0xec, 0xf3,
	0x7d, 0x38, 0x43, 0x53, 0xaf, 0x45, 0x21, 0x3e, 0x28, 0xaf, 0x7d, 0xbe, 0x8c, 0x38, 0xa3, 0xf1,
	0xdf, 0x9b, 0xff, 0xce, 0x11, 0xcc, 0xbf, 0xb4, 0x22, 0x55, 0xde, 0x3f, 0xf6, 0xf2, 0xd9, 0xe3,
	0x79, 0xf9, 0x56, 0xa9, 0x97, 0x4f, 0x69, 0x8f, 0x12, 0x9a, 0xf6, 0x4b, 0xc5, 0x97, 0xd4, 0xd5,
	0x31, 0xe2, 0x70, 0xd5, 0x66, 0x43, 0xcb, 0x24, 0x76, 0x97, 0x0d, 0xe8, 0x7a, 0x16, 0x23, 0xca,
	0xfa, 0x7e, 0x7a, 0xdb, 0x87, 0x15, 0x0c, 0x31, 0xb9, 0x2a, 0x55, 0x91, 0x0e, 0x8d, 0xf6, 0x2b,
	0x97, 0x38, 0x96, 0xd9, 0xa7, 0x01, 0x17, 0xa5, 0xce, 0x8c, 0xe2, 0x4e, 0xd7, 0x78, 0x26, 0x81,
	0xa2, 0x2c, 0xc9, 0x2c, 0xf4, 0x04, 0x1a, 0x51, 0xa8, 0xe2, 0xa4, 0xf5, 0x69, 0x0e, 0x5a, 0xd0,
	0xc7, 0xd2, 0x24, 0x92, 0xb5, 0xb4, 0xdf, 0x14, 0xe9, 0x66, 0x1b, 0xf1, 0xd0, 0x67, 0x00, 0x51,
	0xb7, 0xca, 0xb6, 0x99, 0xb9, 0x59, 0x75, 0xc6, 0xeb, 0x22, 0x09, 0x12, 0x03, 0x7d, 0x0d, 0x57,
	0xfc, 0xf2, 0x3a, 0x88, 0x14, 0x1c, 0xfd, 0xf3, 0xe9, 0xea, 0x58, 0x3a, 0x7c, 0x95, 0xb4, 0xf6,
	0xba, 0x06, 0xef, 0xa6, 0x65, 0x12, 0x8b, 0xea, 0xc1, 0xb9, 0xe8, 0x84, 0x79, 0x83, 0xba, 0x5e,
	0x10, 0x59, 0xde, 0x9e, 0x72, 0xec, 0xe3, 0x9a, 0xd3, 0x23, 0x38, 0x93, 0x3e, 0xb9, 0xa8, 0xe2,
	0xd2, 0x94, 0x3c, 0x48, 0x3a, 0x19, 0x81, 0x13, 0xb5, 0xa5, 0x37, 0x35, 0xe9, 0x46, 0x85, 0x29,
	0x19, 0x58, 0xee, 0x10, 0x7d, 0xab, 0x80, 0x56, 0x70, 0x37, 0xe8, 0x53, 0xdf, 0xb1, 0x5c, 0x62,
	0x0b, 0x98, 0xc8, 0xeb, 0xed, 0xa9, 0xd7, 0x8d, 0x0c, 0x4f, 0x64, 0xfa, 0x08, 0x3b, 0xa0, 0x8f,
	0x60, 0xc1, 0x7b, 0x4e, 0x02, 0xba, 0xb9, 0xd9, 0xef, 0x8a, 0x0a, 0x64, 0xc6, 0x45, 0x2f, 0x59,
	0xc6, 0x13, 0x24, 0xfa, 0x14, 0x1a, 0x7e, 0xac, 0xb0, 0xb9, 0xd9, 0x4f, 0xcc, 0x2f, 0x73, 0xb9,
	0xc5, 0x13, 0x00, 0x96, 0xd1, 0x29, 0xf2, 0xee, 0x63, 0x91, 0xe9, 0x32, 0xf2, 0xee, 0x63, 0x2c,
	0xa3, 0xb5, 0x3f, 0xe4, 0xdb, 0x93, 0x40, 0x49, 0xb7, 0xa7, 0x04, 0x3a, 0xed, 0xf6, 0x84, 0x73,
	0xb8, 0xe4, 0xf6, 0x94, 0x57, 0x38, 0x6e, 0x83, 0x7e, 0x29, 0xdd, 0x9e, 0x92, 0x4a, 0xd6, 0xa3,
	0x3f, 0x61, 0x2a, 0x6e, 0x4f, 0x49, 0xe9, 0x4e, 0x27, 0x5a, 0x3f, 0x1d, 0xaa, 0x35, 0x9c, 0x13,
	0x3a, 0xd1, 0x56, 0x7d, 0xab, 0xc8, 0x17, 0xe1, 0x78, 0xea, 0xb6, 0xa0, 0x11, 0x44, 0xbf, 0xe4,
	0x19, 0x76, 0xb9, 0xc8, 0x51, 0xe4, 0x21, 0x26, 0x73, 0xfe, 0xc7, 0x29, 0xf6, 0xb6, 0x06, 0x17,
	0x33, 0x01, 0x25, 0xbd, 0x62, 0xc0, 0xf9, 0xf8, 0x8c, 0xf9, 0x56, 0x59, 0x2a, 0x8a, 0x2e, 0xdf,
	0x29, 0x79, 0xfe, 0x71, 0x1b, 0x25, 0x55, 0x4b, 0xd9, 0x90, 0xaa, 0x6a, 0x19, 0x1b, 0x66, 0x61,
	0x2d, 0xe3, 0x8a, 0x9d, 0x60, 0x87, 0xac, 0x7d, 0xaf, 0xc0, 0x25, 0xe6, 0x51, 0x77, 0xdf, 0xd9,
	0xcb, 0x8a, 0xf5, 0x94, 0xa7, 0xc6, 0xd0, 0xe2, 0x36, 0xd9, 0x0b, 0xe3, 0x5e, 0x15, 0xa8, 0x55,
	0x2f, 0x08, 0x7f, 0x07, 0x93, 0x7f, 0xd7, 0x0d, 0xd9, 0x8a, 0x58, 0x5b, 0x61, 0x5e, 0xb0, 0x32,
	0x7e, 0x9f, 0x10, 0x32, 0xb2, 0x3f, 0xd7, 0xca, 0x36, 0xdc, 0x9b, 0x8b, 0xb8, 0x77, 0xff, 0x0d,
	0x00, 0x00, 0xff, 0xff, 0x82, 0x32, 0x31, 0xc5, 0x55, 0x14, 0x00, 0x00,
}
