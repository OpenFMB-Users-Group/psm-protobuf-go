// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.15.6
// source: metermodule/metermodule.proto

// OpenFMB Operational Model (61850-CIM) (v2.0.0).eap
// Tuesday, April 27, 2021 7:07:08 PM UTC

package metermodule

import (
	_ "gitlab.com/openfmb/psm/ops/protobuf/go-openfmb-ops-protobuf/v2/openfmb"
	commonmodule "gitlab.com/openfmb/psm/ops/protobuf/go-openfmb-ops-protobuf/v2/openfmb/commonmodule"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Resource reading value
type MeterReading struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// UML inherited base object
	ConductingEquipmentTerminalReading *commonmodule.ConductingEquipmentTerminalReading `protobuf:"bytes,1,opt,name=conductingEquipmentTerminalReading,proto3" json:"conductingEquipmentTerminalReading,omitempty"`
	// MISSING DOCUMENTATION!!!
	PhaseMMTN *commonmodule.PhaseMMTN `protobuf:"bytes,2,opt,name=phaseMMTN,proto3" json:"phaseMMTN,omitempty"`
	// MISSING DOCUMENTATION!!!
	ReadingMMTR *commonmodule.ReadingMMTR `protobuf:"bytes,3,opt,name=readingMMTR,proto3" json:"readingMMTR,omitempty"`
	// MISSING DOCUMENTATION!!!
	ReadingMMXU *commonmodule.ReadingMMXU `protobuf:"bytes,4,opt,name=readingMMXU,proto3" json:"readingMMXU,omitempty"`
}

func (x *MeterReading) Reset() {
	*x = MeterReading{}
	if protoimpl.UnsafeEnabled {
		mi := &file_metermodule_metermodule_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MeterReading) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MeterReading) ProtoMessage() {}

func (x *MeterReading) ProtoReflect() protoreflect.Message {
	mi := &file_metermodule_metermodule_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MeterReading.ProtoReflect.Descriptor instead.
func (*MeterReading) Descriptor() ([]byte, []int) {
	return file_metermodule_metermodule_proto_rawDescGZIP(), []int{0}
}

func (x *MeterReading) GetConductingEquipmentTerminalReading() *commonmodule.ConductingEquipmentTerminalReading {
	if x != nil {
		return x.ConductingEquipmentTerminalReading
	}
	return nil
}

func (x *MeterReading) GetPhaseMMTN() *commonmodule.PhaseMMTN {
	if x != nil {
		return x.PhaseMMTN
	}
	return nil
}

func (x *MeterReading) GetReadingMMTR() *commonmodule.ReadingMMTR {
	if x != nil {
		return x.ReadingMMTR
	}
	return nil
}

func (x *MeterReading) GetReadingMMXU() *commonmodule.ReadingMMXU {
	if x != nil {
		return x.ReadingMMXU
	}
	return nil
}

// Resource reading profile
type MeterReadingProfile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// UML inherited base object
	ReadingMessageInfo *commonmodule.ReadingMessageInfo `protobuf:"bytes,1,opt,name=readingMessageInfo,proto3" json:"readingMessageInfo,omitempty"`
	// MISSING DOCUMENTATION!!!
	Meter *commonmodule.Meter `protobuf:"bytes,2,opt,name=meter,proto3" json:"meter,omitempty"`
	// MISSING DOCUMENTATION!!!
	MeterReading *MeterReading `protobuf:"bytes,3,opt,name=meterReading,proto3" json:"meterReading,omitempty"`
}

func (x *MeterReadingProfile) Reset() {
	*x = MeterReadingProfile{}
	if protoimpl.UnsafeEnabled {
		mi := &file_metermodule_metermodule_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MeterReadingProfile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MeterReadingProfile) ProtoMessage() {}

func (x *MeterReadingProfile) ProtoReflect() protoreflect.Message {
	mi := &file_metermodule_metermodule_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MeterReadingProfile.ProtoReflect.Descriptor instead.
func (*MeterReadingProfile) Descriptor() ([]byte, []int) {
	return file_metermodule_metermodule_proto_rawDescGZIP(), []int{1}
}

func (x *MeterReadingProfile) GetReadingMessageInfo() *commonmodule.ReadingMessageInfo {
	if x != nil {
		return x.ReadingMessageInfo
	}
	return nil
}

func (x *MeterReadingProfile) GetMeter() *commonmodule.Meter {
	if x != nil {
		return x.Meter
	}
	return nil
}

func (x *MeterReadingProfile) GetMeterReading() *MeterReading {
	if x != nil {
		return x.MeterReading
	}
	return nil
}

var File_metermodule_metermodule_proto protoreflect.FileDescriptor

var file_metermodule_metermodule_proto_rawDesc = []byte{
	0x0a, 0x1d, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2f, 0x6d, 0x65,
	0x74, 0x65, 0x72, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x0b, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x1a, 0x09, 0x75, 0x6d,
	0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x6d,
	0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x6d, 0x6f, 0x64, 0x75,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xc8, 0x02, 0x0a, 0x0c, 0x4d, 0x65, 0x74,
	0x65, 0x72, 0x52, 0x65, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x12, 0x86, 0x01, 0x0a, 0x22, 0x63, 0x6f,
	0x6e, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6e, 0x67, 0x45, 0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e,
	0x74, 0x54, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x6c, 0x52, 0x65, 0x61, 0x64, 0x69, 0x6e, 0x67,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x6d,
	0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x43, 0x6f, 0x6e, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6e, 0x67,
	0x45, 0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61,
	0x6c, 0x52, 0x65, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x42, 0x04, 0x80, 0xb5, 0x18, 0x01, 0x52, 0x22,
	0x63, 0x6f, 0x6e, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6e, 0x67, 0x45, 0x71, 0x75, 0x69, 0x70, 0x6d,
	0x65, 0x6e, 0x74, 0x54, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x6c, 0x52, 0x65, 0x61, 0x64, 0x69,
	0x6e, 0x67, 0x12, 0x35, 0x0a, 0x09, 0x70, 0x68, 0x61, 0x73, 0x65, 0x4d, 0x4d, 0x54, 0x4e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x6d, 0x6f,
	0x64, 0x75, 0x6c, 0x65, 0x2e, 0x50, 0x68, 0x61, 0x73, 0x65, 0x4d, 0x4d, 0x54, 0x4e, 0x52, 0x09,
	0x70, 0x68, 0x61, 0x73, 0x65, 0x4d, 0x4d, 0x54, 0x4e, 0x12, 0x3b, 0x0a, 0x0b, 0x72, 0x65, 0x61,
	0x64, 0x69, 0x6e, 0x67, 0x4d, 0x4d, 0x54, 0x52, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x52, 0x65,
	0x61, 0x64, 0x69, 0x6e, 0x67, 0x4d, 0x4d, 0x54, 0x52, 0x52, 0x0b, 0x72, 0x65, 0x61, 0x64, 0x69,
	0x6e, 0x67, 0x4d, 0x4d, 0x54, 0x52, 0x12, 0x3b, 0x0a, 0x0b, 0x72, 0x65, 0x61, 0x64, 0x69, 0x6e,
	0x67, 0x4d, 0x4d, 0x58, 0x55, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x52, 0x65, 0x61, 0x64, 0x69,
	0x6e, 0x67, 0x4d, 0x4d, 0x58, 0x55, 0x52, 0x0b, 0x72, 0x65, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x4d,
	0x4d, 0x58, 0x55, 0x22, 0xf1, 0x01, 0x0a, 0x13, 0x4d, 0x65, 0x74, 0x65, 0x72, 0x52, 0x65, 0x61,
	0x64, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x56, 0x0a, 0x12, 0x72,
	0x65, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66,
	0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x52, 0x65, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x04, 0x80, 0xb5, 0x18, 0x01, 0x52,
	0x12, 0x72, 0x65, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x33, 0x0a, 0x05, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x13, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x6d, 0x6f, 0x64, 0x75, 0x6c,
	0x65, 0x2e, 0x4d, 0x65, 0x74, 0x65, 0x72, 0x42, 0x08, 0x88, 0xb5, 0x18, 0x01, 0x90, 0xb5, 0x18,
	0x01, 0x52, 0x05, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x12, 0x47, 0x0a, 0x0c, 0x6d, 0x65, 0x74, 0x65,
	0x72, 0x52, 0x65, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19,
	0x2e, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x4d, 0x65, 0x74,
	0x65, 0x72, 0x52, 0x65, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x42, 0x08, 0x88, 0xb5, 0x18, 0x01, 0x90,
	0xb5, 0x18, 0x01, 0x52, 0x0c, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x52, 0x65, 0x61, 0x64, 0x69, 0x6e,
	0x67, 0x3a, 0x04, 0xc0, 0xf3, 0x18, 0x01, 0x42, 0x81, 0x01, 0x0a, 0x13, 0x6f, 0x70, 0x65, 0x6e,
	0x66, 0x6d, 0x62, 0x2e, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x50,
	0x01, 0x5a, 0x52, 0x67, 0x69, 0x74, 0x6c, 0x61, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6f, 0x70,
	0x65, 0x6e, 0x66, 0x6d, 0x62, 0x2f, 0x70, 0x73, 0x6d, 0x2f, 0x6f, 0x70, 0x73, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x67, 0x6f, 0x2d, 0x6f, 0x70, 0x65, 0x6e, 0x66, 0x6d,
	0x62, 0x2d, 0x6f, 0x70, 0x73, 0x2d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x76,
	0x32, 0x2f, 0x6f, 0x70, 0x65, 0x6e, 0x66, 0x6d, 0x62, 0x2f, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x6d,
	0x6f, 0x64, 0x75, 0x6c, 0x65, 0xaa, 0x02, 0x13, 0x6f, 0x70, 0x65, 0x6e, 0x66, 0x6d, 0x62, 0x2e,
	0x6d, 0x65, 0x74, 0x65, 0x72, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_metermodule_metermodule_proto_rawDescOnce sync.Once
	file_metermodule_metermodule_proto_rawDescData = file_metermodule_metermodule_proto_rawDesc
)

func file_metermodule_metermodule_proto_rawDescGZIP() []byte {
	file_metermodule_metermodule_proto_rawDescOnce.Do(func() {
		file_metermodule_metermodule_proto_rawDescData = protoimpl.X.CompressGZIP(file_metermodule_metermodule_proto_rawDescData)
	})
	return file_metermodule_metermodule_proto_rawDescData
}

var file_metermodule_metermodule_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_metermodule_metermodule_proto_goTypes = []interface{}{
	(*MeterReading)(nil),                                    // 0: metermodule.MeterReading
	(*MeterReadingProfile)(nil),                             // 1: metermodule.MeterReadingProfile
	(*commonmodule.ConductingEquipmentTerminalReading)(nil), // 2: commonmodule.ConductingEquipmentTerminalReading
	(*commonmodule.PhaseMMTN)(nil),                          // 3: commonmodule.PhaseMMTN
	(*commonmodule.ReadingMMTR)(nil),                        // 4: commonmodule.ReadingMMTR
	(*commonmodule.ReadingMMXU)(nil),                        // 5: commonmodule.ReadingMMXU
	(*commonmodule.ReadingMessageInfo)(nil),                 // 6: commonmodule.ReadingMessageInfo
	(*commonmodule.Meter)(nil),                              // 7: commonmodule.Meter
}
var file_metermodule_metermodule_proto_depIdxs = []int32{
	2, // 0: metermodule.MeterReading.conductingEquipmentTerminalReading:type_name -> commonmodule.ConductingEquipmentTerminalReading
	3, // 1: metermodule.MeterReading.phaseMMTN:type_name -> commonmodule.PhaseMMTN
	4, // 2: metermodule.MeterReading.readingMMTR:type_name -> commonmodule.ReadingMMTR
	5, // 3: metermodule.MeterReading.readingMMXU:type_name -> commonmodule.ReadingMMXU
	6, // 4: metermodule.MeterReadingProfile.readingMessageInfo:type_name -> commonmodule.ReadingMessageInfo
	7, // 5: metermodule.MeterReadingProfile.meter:type_name -> commonmodule.Meter
	0, // 6: metermodule.MeterReadingProfile.meterReading:type_name -> metermodule.MeterReading
	7, // [7:7] is the sub-list for method output_type
	7, // [7:7] is the sub-list for method input_type
	7, // [7:7] is the sub-list for extension type_name
	7, // [7:7] is the sub-list for extension extendee
	0, // [0:7] is the sub-list for field type_name
}

func init() { file_metermodule_metermodule_proto_init() }
func file_metermodule_metermodule_proto_init() {
	if File_metermodule_metermodule_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_metermodule_metermodule_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MeterReading); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_metermodule_metermodule_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MeterReadingProfile); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_metermodule_metermodule_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_metermodule_metermodule_proto_goTypes,
		DependencyIndexes: file_metermodule_metermodule_proto_depIdxs,
		MessageInfos:      file_metermodule_metermodule_proto_msgTypes,
	}.Build()
	File_metermodule_metermodule_proto = out.File
	file_metermodule_metermodule_proto_rawDesc = nil
	file_metermodule_metermodule_proto_goTypes = nil
	file_metermodule_metermodule_proto_depIdxs = nil
}
