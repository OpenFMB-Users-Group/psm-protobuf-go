// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.3
// 	protoc        v6.31.1
// source: resourcemodule/resourcemodule.proto

// OpenFMB Operational Model (61850-CIM) (v2.2.0).eapx
// Thursday, July 24, 2025 8:59:58 PM UTC

package resourcemodule

import (
	_ "gitlab.com/openfmb/psm/ops/protobuf/go-openfmb-ops-protobuf/v2/openfmb"
	commonmodule "gitlab.com/openfmb/psm/ops/protobuf/go-openfmb-ops-protobuf/v2/openfmb/commonmodule"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// LN: Generic process I/O   Name: GGIO
type BooleanControlGGIO struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// UML inherited base object
	LogicalNode *commonmodule.LogicalNode `protobuf:"bytes,1,opt,name=logicalNode,proto3" json:"logicalNode,omitempty"`
	// Phase code
	Phase *commonmodule.Optional_PhaseCodeKind `protobuf:"bytes,2,opt,name=Phase,proto3" json:"Phase,omitempty"`
	// (controllable) If true, generic single point controllable status output <i>n</i> has been
	// enabled, otherwise it has been disabled.
	SPCSO         *commonmodule.ControlSPC `protobuf:"bytes,3,opt,name=SPCSO,proto3" json:"SPCSO,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BooleanControlGGIO) Reset() {
	*x = BooleanControlGGIO{}
	mi := &file_resourcemodule_resourcemodule_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BooleanControlGGIO) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BooleanControlGGIO) ProtoMessage() {}

func (x *BooleanControlGGIO) ProtoReflect() protoreflect.Message {
	mi := &file_resourcemodule_resourcemodule_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BooleanControlGGIO.ProtoReflect.Descriptor instead.
func (*BooleanControlGGIO) Descriptor() ([]byte, []int) {
	return file_resourcemodule_resourcemodule_proto_rawDescGZIP(), []int{0}
}

func (x *BooleanControlGGIO) GetLogicalNode() *commonmodule.LogicalNode {
	if x != nil {
		return x.LogicalNode
	}
	return nil
}

func (x *BooleanControlGGIO) GetPhase() *commonmodule.Optional_PhaseCodeKind {
	if x != nil {
		return x.Phase
	}
	return nil
}

func (x *BooleanControlGGIO) GetSPCSO() *commonmodule.ControlSPC {
	if x != nil {
		return x.SPCSO
	}
	return nil
}

// Status expressed in integer based on IEC61850 GGIO.
type IntegerControlGGIO struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// UML inherited base object
	LogicalNode *commonmodule.LogicalNode `protobuf:"bytes,1,opt,name=logicalNode,proto3" json:"logicalNode,omitempty"`
	// (controllable) Generic integer controllable status output <i>n</i>.
	ISCSO *commonmodule.ControlINC `protobuf:"bytes,2,opt,name=ISCSO,proto3" json:"ISCSO,omitempty"`
	// Phase code
	Phase         *commonmodule.Optional_PhaseCodeKind `protobuf:"bytes,3,opt,name=Phase,proto3" json:"Phase,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *IntegerControlGGIO) Reset() {
	*x = IntegerControlGGIO{}
	mi := &file_resourcemodule_resourcemodule_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IntegerControlGGIO) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IntegerControlGGIO) ProtoMessage() {}

func (x *IntegerControlGGIO) ProtoReflect() protoreflect.Message {
	mi := &file_resourcemodule_resourcemodule_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IntegerControlGGIO.ProtoReflect.Descriptor instead.
func (*IntegerControlGGIO) Descriptor() ([]byte, []int) {
	return file_resourcemodule_resourcemodule_proto_rawDescGZIP(), []int{1}
}

func (x *IntegerControlGGIO) GetLogicalNode() *commonmodule.LogicalNode {
	if x != nil {
		return x.LogicalNode
	}
	return nil
}

func (x *IntegerControlGGIO) GetISCSO() *commonmodule.ControlINC {
	if x != nil {
		return x.ISCSO
	}
	return nil
}

func (x *IntegerControlGGIO) GetPhase() *commonmodule.Optional_PhaseCodeKind {
	if x != nil {
		return x.Phase
	}
	return nil
}

// LN: Generic process I/O   Name: GGIO
type StringControlGGIO struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// UML inherited base object
	LogicalNode *commonmodule.LogicalNode `protobuf:"bytes,1,opt,name=logicalNode,proto3" json:"logicalNode,omitempty"`
	// Phase code
	Phase *commonmodule.Optional_PhaseCodeKind `protobuf:"bytes,2,opt,name=Phase,proto3" json:"Phase,omitempty"`
	// String control
	StrOut        *commonmodule.VSC `protobuf:"bytes,3,opt,name=StrOut,proto3" json:"StrOut,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StringControlGGIO) Reset() {
	*x = StringControlGGIO{}
	mi := &file_resourcemodule_resourcemodule_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StringControlGGIO) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StringControlGGIO) ProtoMessage() {}

func (x *StringControlGGIO) ProtoReflect() protoreflect.Message {
	mi := &file_resourcemodule_resourcemodule_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StringControlGGIO.ProtoReflect.Descriptor instead.
func (*StringControlGGIO) Descriptor() ([]byte, []int) {
	return file_resourcemodule_resourcemodule_proto_rawDescGZIP(), []int{2}
}

func (x *StringControlGGIO) GetLogicalNode() *commonmodule.LogicalNode {
	if x != nil {
		return x.LogicalNode
	}
	return nil
}

func (x *StringControlGGIO) GetPhase() *commonmodule.Optional_PhaseCodeKind {
	if x != nil {
		return x.Phase
	}
	return nil
}

func (x *StringControlGGIO) GetStrOut() *commonmodule.VSC {
	if x != nil {
		return x.StrOut
	}
	return nil
}

// LN: Generic process I/O   Name: GGIO
type AnalogControlGGIO struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// UML inherited base object
	LogicalNode *commonmodule.LogicalNode `protobuf:"bytes,1,opt,name=logicalNode,proto3" json:"logicalNode,omitempty"`
	// (controllable) Value of the generic controllable analogue output setpoint <i>n</i>. Analog value
	// (MX) feeds back the setpoint of the output.
	AnOut *commonmodule.ControlAPC `protobuf:"bytes,2,opt,name=AnOut,proto3" json:"AnOut,omitempty"`
	// Phase code
	Phase         *commonmodule.Optional_PhaseCodeKind `protobuf:"bytes,3,opt,name=Phase,proto3" json:"Phase,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AnalogControlGGIO) Reset() {
	*x = AnalogControlGGIO{}
	mi := &file_resourcemodule_resourcemodule_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AnalogControlGGIO) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AnalogControlGGIO) ProtoMessage() {}

func (x *AnalogControlGGIO) ProtoReflect() protoreflect.Message {
	mi := &file_resourcemodule_resourcemodule_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AnalogControlGGIO.ProtoReflect.Descriptor instead.
func (*AnalogControlGGIO) Descriptor() ([]byte, []int) {
	return file_resourcemodule_resourcemodule_proto_rawDescGZIP(), []int{3}
}

func (x *AnalogControlGGIO) GetLogicalNode() *commonmodule.LogicalNode {
	if x != nil {
		return x.LogicalNode
	}
	return nil
}

func (x *AnalogControlGGIO) GetAnOut() *commonmodule.ControlAPC {
	if x != nil {
		return x.AnOut
	}
	return nil
}

func (x *AnalogControlGGIO) GetPhase() *commonmodule.Optional_PhaseCodeKind {
	if x != nil {
		return x.Phase
	}
	return nil
}

// Resource discrete control class
type ResourceDiscreteControl struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// UML inherited base object
	IdentifiedObject *commonmodule.IdentifiedObject `protobuf:"bytes,1,opt,name=identifiedObject,proto3" json:"identifiedObject,omitempty"`
	// IEC61850 enhanced control parameters.
	Check *commonmodule.CheckConditions `protobuf:"bytes,2,opt,name=check,proto3" json:"check,omitempty"`
	// MISSING DOCUMENTATION!!!
	AnalogControlGGIO []*AnalogControlGGIO `protobuf:"bytes,3,rep,name=analogControlGGIO,proto3" json:"analogControlGGIO,omitempty"`
	// MISSING DOCUMENTATION!!!
	BooleanControlGGIO []*BooleanControlGGIO `protobuf:"bytes,4,rep,name=booleanControlGGIO,proto3" json:"booleanControlGGIO,omitempty"`
	// MISSING DOCUMENTATION!!!
	IntegerControlGGIO []*IntegerControlGGIO `protobuf:"bytes,5,rep,name=integerControlGGIO,proto3" json:"integerControlGGIO,omitempty"`
	// MISSING DOCUMENTATION!!!
	StringControlGGIO []*StringControlGGIO `protobuf:"bytes,6,rep,name=stringControlGGIO,proto3" json:"stringControlGGIO,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *ResourceDiscreteControl) Reset() {
	*x = ResourceDiscreteControl{}
	mi := &file_resourcemodule_resourcemodule_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResourceDiscreteControl) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourceDiscreteControl) ProtoMessage() {}

func (x *ResourceDiscreteControl) ProtoReflect() protoreflect.Message {
	mi := &file_resourcemodule_resourcemodule_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResourceDiscreteControl.ProtoReflect.Descriptor instead.
func (*ResourceDiscreteControl) Descriptor() ([]byte, []int) {
	return file_resourcemodule_resourcemodule_proto_rawDescGZIP(), []int{4}
}

func (x *ResourceDiscreteControl) GetIdentifiedObject() *commonmodule.IdentifiedObject {
	if x != nil {
		return x.IdentifiedObject
	}
	return nil
}

func (x *ResourceDiscreteControl) GetCheck() *commonmodule.CheckConditions {
	if x != nil {
		return x.Check
	}
	return nil
}

func (x *ResourceDiscreteControl) GetAnalogControlGGIO() []*AnalogControlGGIO {
	if x != nil {
		return x.AnalogControlGGIO
	}
	return nil
}

func (x *ResourceDiscreteControl) GetBooleanControlGGIO() []*BooleanControlGGIO {
	if x != nil {
		return x.BooleanControlGGIO
	}
	return nil
}

func (x *ResourceDiscreteControl) GetIntegerControlGGIO() []*IntegerControlGGIO {
	if x != nil {
		return x.IntegerControlGGIO
	}
	return nil
}

func (x *ResourceDiscreteControl) GetStringControlGGIO() []*StringControlGGIO {
	if x != nil {
		return x.StringControlGGIO
	}
	return nil
}

// Instructs a resource to perform a specified action.
type ResourceDiscreteControlProfile struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// UML inherited base object
	ControlMessageInfo *commonmodule.ControlMessageInfo `protobuf:"bytes,1,opt,name=controlMessageInfo,proto3" json:"controlMessageInfo,omitempty"`
	// MISSING DOCUMENTATION!!!
	ConductingEquipment *commonmodule.ConductingEquipment `protobuf:"bytes,2,opt,name=conductingEquipment,proto3" json:"conductingEquipment,omitempty"`
	// MISSING DOCUMENTATION!!!
	ResourceDiscreteControl *ResourceDiscreteControl `protobuf:"bytes,3,opt,name=resourceDiscreteControl,proto3" json:"resourceDiscreteControl,omitempty"`
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *ResourceDiscreteControlProfile) Reset() {
	*x = ResourceDiscreteControlProfile{}
	mi := &file_resourcemodule_resourcemodule_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResourceDiscreteControlProfile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourceDiscreteControlProfile) ProtoMessage() {}

func (x *ResourceDiscreteControlProfile) ProtoReflect() protoreflect.Message {
	mi := &file_resourcemodule_resourcemodule_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResourceDiscreteControlProfile.ProtoReflect.Descriptor instead.
func (*ResourceDiscreteControlProfile) Descriptor() ([]byte, []int) {
	return file_resourcemodule_resourcemodule_proto_rawDescGZIP(), []int{5}
}

func (x *ResourceDiscreteControlProfile) GetControlMessageInfo() *commonmodule.ControlMessageInfo {
	if x != nil {
		return x.ControlMessageInfo
	}
	return nil
}

func (x *ResourceDiscreteControlProfile) GetConductingEquipment() *commonmodule.ConductingEquipment {
	if x != nil {
		return x.ConductingEquipment
	}
	return nil
}

func (x *ResourceDiscreteControlProfile) GetResourceDiscreteControl() *ResourceDiscreteControl {
	if x != nil {
		return x.ResourceDiscreteControl
	}
	return nil
}

// Resource reading value
type ResourceReading struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// UML inherited base object
	ConductingEquipmentTerminalReading *commonmodule.ConductingEquipmentTerminalReading `protobuf:"bytes,1,opt,name=conductingEquipmentTerminalReading,proto3" json:"conductingEquipmentTerminalReading,omitempty"`
	// MISSING DOCUMENTATION!!!
	PhaseMMTN *commonmodule.PhaseMMTN `protobuf:"bytes,2,opt,name=phaseMMTN,proto3" json:"phaseMMTN,omitempty"`
	// MISSING DOCUMENTATION!!!
	ReadingMMTR *commonmodule.ReadingMMTR `protobuf:"bytes,3,opt,name=readingMMTR,proto3" json:"readingMMTR,omitempty"`
	// MISSING DOCUMENTATION!!!
	ReadingMMXU *commonmodule.ReadingMMXU `protobuf:"bytes,4,opt,name=readingMMXU,proto3" json:"readingMMXU,omitempty"`
	// MISSING DOCUMENTATION!!!
	ReadingMMDC   *commonmodule.ReadingMMDC `protobuf:"bytes,5,opt,name=readingMMDC,proto3" json:"readingMMDC,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ResourceReading) Reset() {
	*x = ResourceReading{}
	mi := &file_resourcemodule_resourcemodule_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResourceReading) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourceReading) ProtoMessage() {}

func (x *ResourceReading) ProtoReflect() protoreflect.Message {
	mi := &file_resourcemodule_resourcemodule_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResourceReading.ProtoReflect.Descriptor instead.
func (*ResourceReading) Descriptor() ([]byte, []int) {
	return file_resourcemodule_resourcemodule_proto_rawDescGZIP(), []int{6}
}

func (x *ResourceReading) GetConductingEquipmentTerminalReading() *commonmodule.ConductingEquipmentTerminalReading {
	if x != nil {
		return x.ConductingEquipmentTerminalReading
	}
	return nil
}

func (x *ResourceReading) GetPhaseMMTN() *commonmodule.PhaseMMTN {
	if x != nil {
		return x.PhaseMMTN
	}
	return nil
}

func (x *ResourceReading) GetReadingMMTR() *commonmodule.ReadingMMTR {
	if x != nil {
		return x.ReadingMMTR
	}
	return nil
}

func (x *ResourceReading) GetReadingMMXU() *commonmodule.ReadingMMXU {
	if x != nil {
		return x.ReadingMMXU
	}
	return nil
}

func (x *ResourceReading) GetReadingMMDC() *commonmodule.ReadingMMDC {
	if x != nil {
		return x.ReadingMMDC
	}
	return nil
}

// Resource reading profile
type ResourceReadingProfile struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// UML inherited base object
	ReadingMessageInfo *commonmodule.ReadingMessageInfo `protobuf:"bytes,1,opt,name=readingMessageInfo,proto3" json:"readingMessageInfo,omitempty"`
	// MISSING DOCUMENTATION!!!
	ConductingEquipment *commonmodule.ConductingEquipment `protobuf:"bytes,2,opt,name=conductingEquipment,proto3" json:"conductingEquipment,omitempty"`
	// MISSING DOCUMENTATION!!!
	ResourceReading *ResourceReading `protobuf:"bytes,3,opt,name=resourceReading,proto3" json:"resourceReading,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *ResourceReadingProfile) Reset() {
	*x = ResourceReadingProfile{}
	mi := &file_resourcemodule_resourcemodule_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResourceReadingProfile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourceReadingProfile) ProtoMessage() {}

func (x *ResourceReadingProfile) ProtoReflect() protoreflect.Message {
	mi := &file_resourcemodule_resourcemodule_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResourceReadingProfile.ProtoReflect.Descriptor instead.
func (*ResourceReadingProfile) Descriptor() ([]byte, []int) {
	return file_resourcemodule_resourcemodule_proto_rawDescGZIP(), []int{7}
}

func (x *ResourceReadingProfile) GetReadingMessageInfo() *commonmodule.ReadingMessageInfo {
	if x != nil {
		return x.ReadingMessageInfo
	}
	return nil
}

func (x *ResourceReadingProfile) GetConductingEquipment() *commonmodule.ConductingEquipment {
	if x != nil {
		return x.ConductingEquipment
	}
	return nil
}

func (x *ResourceReadingProfile) GetResourceReading() *ResourceReading {
	if x != nil {
		return x.ResourceReading
	}
	return nil
}

// Current event information relevant to an entity.
type ResourceEvent struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// UML inherited base object
	IdentifiedObject *commonmodule.IdentifiedObject `protobuf:"bytes,1,opt,name=identifiedObject,proto3" json:"identifiedObject,omitempty"`
	// MISSING DOCUMENTATION!!!
	AnalogEventAndStatusGGIO []*commonmodule.AnalogEventAndStatusGGIO `protobuf:"bytes,2,rep,name=analogEventAndStatusGGIO,proto3" json:"analogEventAndStatusGGIO,omitempty"`
	// MISSING DOCUMENTATION!!!
	BooleanEventAndStatusGGIO []*commonmodule.BooleanEventAndStatusGGIO `protobuf:"bytes,3,rep,name=booleanEventAndStatusGGIO,proto3" json:"booleanEventAndStatusGGIO,omitempty"`
	// MISSING DOCUMENTATION!!!
	IntegerEventAndStatusGGIO []*commonmodule.IntegerEventAndStatusGGIO `protobuf:"bytes,4,rep,name=integerEventAndStatusGGIO,proto3" json:"integerEventAndStatusGGIO,omitempty"`
	// MISSING DOCUMENTATION!!!
	StringEventAndStatusGGIO []*commonmodule.StringEventAndStatusGGIO `protobuf:"bytes,5,rep,name=stringEventAndStatusGGIO,proto3" json:"stringEventAndStatusGGIO,omitempty"`
	unknownFields            protoimpl.UnknownFields
	sizeCache                protoimpl.SizeCache
}

func (x *ResourceEvent) Reset() {
	*x = ResourceEvent{}
	mi := &file_resourcemodule_resourcemodule_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResourceEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourceEvent) ProtoMessage() {}

func (x *ResourceEvent) ProtoReflect() protoreflect.Message {
	mi := &file_resourcemodule_resourcemodule_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResourceEvent.ProtoReflect.Descriptor instead.
func (*ResourceEvent) Descriptor() ([]byte, []int) {
	return file_resourcemodule_resourcemodule_proto_rawDescGZIP(), []int{8}
}

func (x *ResourceEvent) GetIdentifiedObject() *commonmodule.IdentifiedObject {
	if x != nil {
		return x.IdentifiedObject
	}
	return nil
}

func (x *ResourceEvent) GetAnalogEventAndStatusGGIO() []*commonmodule.AnalogEventAndStatusGGIO {
	if x != nil {
		return x.AnalogEventAndStatusGGIO
	}
	return nil
}

func (x *ResourceEvent) GetBooleanEventAndStatusGGIO() []*commonmodule.BooleanEventAndStatusGGIO {
	if x != nil {
		return x.BooleanEventAndStatusGGIO
	}
	return nil
}

func (x *ResourceEvent) GetIntegerEventAndStatusGGIO() []*commonmodule.IntegerEventAndStatusGGIO {
	if x != nil {
		return x.IntegerEventAndStatusGGIO
	}
	return nil
}

func (x *ResourceEvent) GetStringEventAndStatusGGIO() []*commonmodule.StringEventAndStatusGGIO {
	if x != nil {
		return x.StringEventAndStatusGGIO
	}
	return nil
}

// Resource event module
type ResourceEventProfile struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// UML inherited base object
	EventMessageInfo *commonmodule.EventMessageInfo `protobuf:"bytes,1,opt,name=eventMessageInfo,proto3" json:"eventMessageInfo,omitempty"`
	// MISSING DOCUMENTATION!!!
	ConductingEquipment *commonmodule.ConductingEquipment `protobuf:"bytes,2,opt,name=conductingEquipment,proto3" json:"conductingEquipment,omitempty"`
	// MISSING DOCUMENTATION!!!
	ResourceEvent *ResourceEvent `protobuf:"bytes,3,opt,name=resourceEvent,proto3" json:"resourceEvent,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ResourceEventProfile) Reset() {
	*x = ResourceEventProfile{}
	mi := &file_resourcemodule_resourcemodule_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResourceEventProfile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourceEventProfile) ProtoMessage() {}

func (x *ResourceEventProfile) ProtoReflect() protoreflect.Message {
	mi := &file_resourcemodule_resourcemodule_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResourceEventProfile.ProtoReflect.Descriptor instead.
func (*ResourceEventProfile) Descriptor() ([]byte, []int) {
	return file_resourcemodule_resourcemodule_proto_rawDescGZIP(), []int{9}
}

func (x *ResourceEventProfile) GetEventMessageInfo() *commonmodule.EventMessageInfo {
	if x != nil {
		return x.EventMessageInfo
	}
	return nil
}

func (x *ResourceEventProfile) GetConductingEquipment() *commonmodule.ConductingEquipment {
	if x != nil {
		return x.ConductingEquipment
	}
	return nil
}

func (x *ResourceEventProfile) GetResourceEvent() *ResourceEvent {
	if x != nil {
		return x.ResourceEvent
	}
	return nil
}

// Current status information relevant to an entity.
type ResourceStatus struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// UML inherited base object
	IdentifiedObject *commonmodule.IdentifiedObject `protobuf:"bytes,1,opt,name=identifiedObject,proto3" json:"identifiedObject,omitempty"`
	// MISSING DOCUMENTATION!!!
	AnalogEventAndStatusGGIO []*commonmodule.AnalogEventAndStatusGGIO `protobuf:"bytes,2,rep,name=analogEventAndStatusGGIO,proto3" json:"analogEventAndStatusGGIO,omitempty"`
	// MISSING DOCUMENTATION!!!
	BooleanEventAndStatusGGIO []*commonmodule.BooleanEventAndStatusGGIO `protobuf:"bytes,3,rep,name=booleanEventAndStatusGGIO,proto3" json:"booleanEventAndStatusGGIO,omitempty"`
	// MISSING DOCUMENTATION!!!
	IntegerEventAndStatusGGIO []*commonmodule.IntegerEventAndStatusGGIO `protobuf:"bytes,4,rep,name=integerEventAndStatusGGIO,proto3" json:"integerEventAndStatusGGIO,omitempty"`
	// MISSING DOCUMENTATION!!!
	StringEventAndStatusGGIO []*commonmodule.StringEventAndStatusGGIO `protobuf:"bytes,5,rep,name=stringEventAndStatusGGIO,proto3" json:"stringEventAndStatusGGIO,omitempty"`
	unknownFields            protoimpl.UnknownFields
	sizeCache                protoimpl.SizeCache
}

func (x *ResourceStatus) Reset() {
	*x = ResourceStatus{}
	mi := &file_resourcemodule_resourcemodule_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResourceStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourceStatus) ProtoMessage() {}

func (x *ResourceStatus) ProtoReflect() protoreflect.Message {
	mi := &file_resourcemodule_resourcemodule_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResourceStatus.ProtoReflect.Descriptor instead.
func (*ResourceStatus) Descriptor() ([]byte, []int) {
	return file_resourcemodule_resourcemodule_proto_rawDescGZIP(), []int{10}
}

func (x *ResourceStatus) GetIdentifiedObject() *commonmodule.IdentifiedObject {
	if x != nil {
		return x.IdentifiedObject
	}
	return nil
}

func (x *ResourceStatus) GetAnalogEventAndStatusGGIO() []*commonmodule.AnalogEventAndStatusGGIO {
	if x != nil {
		return x.AnalogEventAndStatusGGIO
	}
	return nil
}

func (x *ResourceStatus) GetBooleanEventAndStatusGGIO() []*commonmodule.BooleanEventAndStatusGGIO {
	if x != nil {
		return x.BooleanEventAndStatusGGIO
	}
	return nil
}

func (x *ResourceStatus) GetIntegerEventAndStatusGGIO() []*commonmodule.IntegerEventAndStatusGGIO {
	if x != nil {
		return x.IntegerEventAndStatusGGIO
	}
	return nil
}

func (x *ResourceStatus) GetStringEventAndStatusGGIO() []*commonmodule.StringEventAndStatusGGIO {
	if x != nil {
		return x.StringEventAndStatusGGIO
	}
	return nil
}

// Resource status module
type ResourceStatusProfile struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// UML inherited base object
	StatusMessageInfo *commonmodule.StatusMessageInfo `protobuf:"bytes,1,opt,name=statusMessageInfo,proto3" json:"statusMessageInfo,omitempty"`
	// MISSING DOCUMENTATION!!!
	ConductingEquipment *commonmodule.ConductingEquipment `protobuf:"bytes,2,opt,name=conductingEquipment,proto3" json:"conductingEquipment,omitempty"`
	// MISSING DOCUMENTATION!!!
	ResourceStatus *ResourceStatus `protobuf:"bytes,3,opt,name=resourceStatus,proto3" json:"resourceStatus,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *ResourceStatusProfile) Reset() {
	*x = ResourceStatusProfile{}
	mi := &file_resourcemodule_resourcemodule_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResourceStatusProfile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourceStatusProfile) ProtoMessage() {}

func (x *ResourceStatusProfile) ProtoReflect() protoreflect.Message {
	mi := &file_resourcemodule_resourcemodule_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResourceStatusProfile.ProtoReflect.Descriptor instead.
func (*ResourceStatusProfile) Descriptor() ([]byte, []int) {
	return file_resourcemodule_resourcemodule_proto_rawDescGZIP(), []int{11}
}

func (x *ResourceStatusProfile) GetStatusMessageInfo() *commonmodule.StatusMessageInfo {
	if x != nil {
		return x.StatusMessageInfo
	}
	return nil
}

func (x *ResourceStatusProfile) GetConductingEquipment() *commonmodule.ConductingEquipment {
	if x != nil {
		return x.ConductingEquipment
	}
	return nil
}

func (x *ResourceStatusProfile) GetResourceStatus() *ResourceStatus {
	if x != nil {
		return x.ResourceStatus
	}
	return nil
}

var File_resourcemodule_resourcemodule_proto protoreflect.FileDescriptor

var file_resourcemodule_resourcemodule_proto_rawDesc = []byte{
	0x0a, 0x23, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65,
	0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x6d,
	0x6f, 0x64, 0x75, 0x6c, 0x65, 0x1a, 0x09, 0x75, 0x6d, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x1f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2f, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0xcd, 0x01, 0x0a, 0x12, 0x42, 0x6f, 0x6f, 0x6c, 0x65, 0x61, 0x6e, 0x43, 0x6f, 0x6e,
	0x74, 0x72, 0x6f, 0x6c, 0x47, 0x47, 0x49, 0x4f, 0x12, 0x41, 0x0a, 0x0b, 0x6c, 0x6f, 0x67, 0x69,
	0x63, 0x61, 0x6c, 0x4e, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x4c, 0x6f, 0x67,
	0x69, 0x63, 0x61, 0x6c, 0x4e, 0x6f, 0x64, 0x65, 0x42, 0x04, 0x80, 0xb5, 0x18, 0x01, 0x52, 0x0b,
	0x6c, 0x6f, 0x67, 0x69, 0x63, 0x61, 0x6c, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x3a, 0x0a, 0x05, 0x50,
	0x68, 0x61, 0x73, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x61, 0x6c, 0x5f, 0x50, 0x68, 0x61, 0x73, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x4b, 0x69, 0x6e, 0x64,
	0x52, 0x05, 0x50, 0x68, 0x61, 0x73, 0x65, 0x12, 0x38, 0x0a, 0x05, 0x53, 0x50, 0x43, 0x53, 0x4f,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x6d,
	0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x53, 0x50, 0x43,
	0x42, 0x08, 0x88, 0xb5, 0x18, 0x01, 0x90, 0xb5, 0x18, 0x01, 0x52, 0x05, 0x53, 0x50, 0x43, 0x53,
	0x4f, 0x22, 0xcd, 0x01, 0x0a, 0x12, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x65, 0x72, 0x43, 0x6f, 0x6e,
	0x74, 0x72, 0x6f, 0x6c, 0x47, 0x47, 0x49, 0x4f, 0x12, 0x41, 0x0a, 0x0b, 0x6c, 0x6f, 0x67, 0x69,
	0x63, 0x61, 0x6c, 0x4e, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x4c, 0x6f, 0x67,
	0x69, 0x63, 0x61, 0x6c, 0x4e, 0x6f, 0x64, 0x65, 0x42, 0x04, 0x80, 0xb5, 0x18, 0x01, 0x52, 0x0b,
	0x6c, 0x6f, 0x67, 0x69, 0x63, 0x61, 0x6c, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x38, 0x0a, 0x05, 0x49,
	0x53, 0x43, 0x53, 0x4f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f,
	0x6c, 0x49, 0x4e, 0x43, 0x42, 0x08, 0x88, 0xb5, 0x18, 0x01, 0x90, 0xb5, 0x18, 0x01, 0x52, 0x05,
	0x49, 0x53, 0x43, 0x53, 0x4f, 0x12, 0x3a, 0x0a, 0x05, 0x50, 0x68, 0x61, 0x73, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x6d, 0x6f, 0x64,
	0x75, 0x6c, 0x65, 0x2e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x50, 0x68, 0x61,
	0x73, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x4b, 0x69, 0x6e, 0x64, 0x52, 0x05, 0x50, 0x68, 0x61, 0x73,
	0x65, 0x22, 0xc7, 0x01, 0x0a, 0x11, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x6e, 0x74,
	0x72, 0x6f, 0x6c, 0x47, 0x47, 0x49, 0x4f, 0x12, 0x41, 0x0a, 0x0b, 0x6c, 0x6f, 0x67, 0x69, 0x63,
	0x61, 0x6c, 0x4e, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x4c, 0x6f, 0x67, 0x69,
	0x63, 0x61, 0x6c, 0x4e, 0x6f, 0x64, 0x65, 0x42, 0x04, 0x80, 0xb5, 0x18, 0x01, 0x52, 0x0b, 0x6c,
	0x6f, 0x67, 0x69, 0x63, 0x61, 0x6c, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x3a, 0x0a, 0x05, 0x50, 0x68,
	0x61, 0x73, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x61,
	0x6c, 0x5f, 0x50, 0x68, 0x61, 0x73, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x4b, 0x69, 0x6e, 0x64, 0x52,
	0x05, 0x50, 0x68, 0x61, 0x73, 0x65, 0x12, 0x33, 0x0a, 0x06, 0x53, 0x74, 0x72, 0x4f, 0x75, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x6d,
	0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x56, 0x53, 0x43, 0x42, 0x08, 0x88, 0xb5, 0x18, 0x01, 0x90,
	0xb5, 0x18, 0x01, 0x52, 0x06, 0x53, 0x74, 0x72, 0x4f, 0x75, 0x74, 0x22, 0xcc, 0x01, 0x0a, 0x11,
	0x41, 0x6e, 0x61, 0x6c, 0x6f, 0x67, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x47, 0x47, 0x49,
	0x4f, 0x12, 0x41, 0x0a, 0x0b, 0x6c, 0x6f, 0x67, 0x69, 0x63, 0x61, 0x6c, 0x4e, 0x6f, 0x64, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x6d,
	0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x4c, 0x6f, 0x67, 0x69, 0x63, 0x61, 0x6c, 0x4e, 0x6f, 0x64,
	0x65, 0x42, 0x04, 0x80, 0xb5, 0x18, 0x01, 0x52, 0x0b, 0x6c, 0x6f, 0x67, 0x69, 0x63, 0x61, 0x6c,
	0x4e, 0x6f, 0x64, 0x65, 0x12, 0x38, 0x0a, 0x05, 0x41, 0x6e, 0x4f, 0x75, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x6d, 0x6f, 0x64, 0x75,
	0x6c, 0x65, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x41, 0x50, 0x43, 0x42, 0x08, 0x88,
	0xb5, 0x18, 0x01, 0x90, 0xb5, 0x18, 0x01, 0x52, 0x05, 0x41, 0x6e, 0x4f, 0x75, 0x74, 0x12, 0x3a,
	0x0a, 0x05, 0x50, 0x68, 0x61, 0x73, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x4f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x50, 0x68, 0x61, 0x73, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x4b,
	0x69, 0x6e, 0x64, 0x52, 0x05, 0x50, 0x68, 0x61, 0x73, 0x65, 0x22, 0x82, 0x04, 0x0a, 0x17, 0x52,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x44, 0x69, 0x73, 0x63, 0x72, 0x65, 0x74, 0x65, 0x43,
	0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x12, 0x50, 0x0a, 0x10, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x66, 0x69, 0x65, 0x64, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e,
	0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x64, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x42, 0x04, 0x80, 0xb5, 0x18, 0x01, 0x52, 0x10, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69,
	0x65, 0x64, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x33, 0x0a, 0x05, 0x63, 0x68, 0x65, 0x63,
	0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x43, 0x6f, 0x6e, 0x64,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x05, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x12, 0x55, 0x0a,
	0x11, 0x61, 0x6e, 0x61, 0x6c, 0x6f, 0x67, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x47, 0x47,
	0x49, 0x4f, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x41, 0x6e, 0x61, 0x6c, 0x6f, 0x67,
	0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x47, 0x47, 0x49, 0x4f, 0x42, 0x04, 0x90, 0xb5, 0x18,
	0x00, 0x52, 0x11, 0x61, 0x6e, 0x61, 0x6c, 0x6f, 0x67, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c,
	0x47, 0x47, 0x49, 0x4f, 0x12, 0x58, 0x0a, 0x12, 0x62, 0x6f, 0x6f, 0x6c, 0x65, 0x61, 0x6e, 0x43,
	0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x47, 0x47, 0x49, 0x4f, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x22, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x6d, 0x6f, 0x64, 0x75, 0x6c,
	0x65, 0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x65, 0x61, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c,
	0x47, 0x47, 0x49, 0x4f, 0x42, 0x04, 0x90, 0xb5, 0x18, 0x00, 0x52, 0x12, 0x62, 0x6f, 0x6f, 0x6c,
	0x65, 0x61, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x47, 0x47, 0x49, 0x4f, 0x12, 0x58,
	0x0a, 0x12, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c,
	0x47, 0x47, 0x49, 0x4f, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x72, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x49, 0x6e, 0x74, 0x65,
	0x67, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x47, 0x47, 0x49, 0x4f, 0x42, 0x04,
	0x90, 0xb5, 0x18, 0x00, 0x52, 0x12, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x65, 0x72, 0x43, 0x6f, 0x6e,
	0x74, 0x72, 0x6f, 0x6c, 0x47, 0x47, 0x49, 0x4f, 0x12, 0x55, 0x0a, 0x11, 0x73, 0x74, 0x72, 0x69,
	0x6e, 0x67, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x47, 0x47, 0x49, 0x4f, 0x18, 0x06, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x6d, 0x6f,
	0x64, 0x75, 0x6c, 0x65, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x6e, 0x74, 0x72,
	0x6f, 0x6c, 0x47, 0x47, 0x49, 0x4f, 0x42, 0x04, 0x90, 0xb5, 0x18, 0x00, 0x52, 0x11, 0x73, 0x74,
	0x72, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x47, 0x47, 0x49, 0x4f, 0x22,
	0xca, 0x02, 0x0a, 0x1e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x44, 0x69, 0x73, 0x63,
	0x72, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x50, 0x72, 0x6f, 0x66, 0x69,
	0x6c, 0x65, 0x12, 0x56, 0x0a, 0x12, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x43, 0x6f,
	0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f,
	0x42, 0x04, 0x80, 0xb5, 0x18, 0x01, 0x52, 0x12, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x5d, 0x0a, 0x13, 0x63, 0x6f,
	0x6e, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6e, 0x67, 0x45, 0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x43, 0x6f, 0x6e, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6e,
	0x67, 0x45, 0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x42, 0x08, 0x88, 0xb5, 0x18, 0x01,
	0x90, 0xb5, 0x18, 0x01, 0x52, 0x13, 0x63, 0x6f, 0x6e, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6e, 0x67,
	0x45, 0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x6b, 0x0a, 0x17, 0x72, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x44, 0x69, 0x73, 0x63, 0x72, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x6e,
	0x74, 0x72, 0x6f, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x72, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x44, 0x69, 0x73, 0x63, 0x72, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x74,
	0x72, 0x6f, 0x6c, 0x42, 0x08, 0x88, 0xb5, 0x18, 0x01, 0x90, 0xb5, 0x18, 0x01, 0x52, 0x17, 0x72,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x44, 0x69, 0x73, 0x63, 0x72, 0x65, 0x74, 0x65, 0x43,
	0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x3a, 0x04, 0xc0, 0xf3, 0x18, 0x01, 0x22, 0x88, 0x03, 0x0a,
	0x0f, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x61, 0x64, 0x69, 0x6e, 0x67,
	0x12, 0x86, 0x01, 0x0a, 0x22, 0x63, 0x6f, 0x6e, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6e, 0x67, 0x45,
	0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x6c,
	0x52, 0x65, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x43, 0x6f, 0x6e,
	0x64, 0x75, 0x63, 0x74, 0x69, 0x6e, 0x67, 0x45, 0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74,
	0x54, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x6c, 0x52, 0x65, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x42,
	0x04, 0x80, 0xb5, 0x18, 0x01, 0x52, 0x22, 0x63, 0x6f, 0x6e, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6e,
	0x67, 0x45, 0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x65, 0x72, 0x6d, 0x69, 0x6e,
	0x61, 0x6c, 0x52, 0x65, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x12, 0x35, 0x0a, 0x09, 0x70, 0x68, 0x61,
	0x73, 0x65, 0x4d, 0x4d, 0x54, 0x4e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x50, 0x68, 0x61, 0x73,
	0x65, 0x4d, 0x4d, 0x54, 0x4e, 0x52, 0x09, 0x70, 0x68, 0x61, 0x73, 0x65, 0x4d, 0x4d, 0x54, 0x4e,
	0x12, 0x3b, 0x0a, 0x0b, 0x72, 0x65, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x4d, 0x4d, 0x54, 0x52, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x6d, 0x6f,
	0x64, 0x75, 0x6c, 0x65, 0x2e, 0x52, 0x65, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x4d, 0x4d, 0x54, 0x52,
	0x52, 0x0b, 0x72, 0x65, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x4d, 0x4d, 0x54, 0x52, 0x12, 0x3b, 0x0a,
	0x0b, 0x72, 0x65, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x4d, 0x4d, 0x58, 0x55, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x19, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x6d, 0x6f, 0x64, 0x75, 0x6c,
	0x65, 0x2e, 0x52, 0x65, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x4d, 0x4d, 0x58, 0x55, 0x52, 0x0b, 0x72,
	0x65, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x4d, 0x4d, 0x58, 0x55, 0x12, 0x3b, 0x0a, 0x0b, 0x72, 0x65,
	0x61, 0x64, 0x69, 0x6e, 0x67, 0x4d, 0x4d, 0x44, 0x43, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x19, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x52,
	0x65, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x4d, 0x4d, 0x44, 0x43, 0x52, 0x0b, 0x72, 0x65, 0x61, 0x64,
	0x69, 0x6e, 0x67, 0x4d, 0x4d, 0x44, 0x43, 0x22, 0xb6, 0x02, 0x0a, 0x16, 0x52, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x66, 0x69,
	0x6c, 0x65, 0x12, 0x56, 0x0a, 0x12, 0x72, 0x65, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x52, 0x65,
	0x61, 0x64, 0x69, 0x6e, 0x67, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f,
	0x42, 0x04, 0x80, 0xb5, 0x18, 0x01, 0x52, 0x12, 0x72, 0x65, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x5d, 0x0a, 0x13, 0x63, 0x6f,
	0x6e, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6e, 0x67, 0x45, 0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x43, 0x6f, 0x6e, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6e,
	0x67, 0x45, 0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x42, 0x08, 0x88, 0xb5, 0x18, 0x01,
	0x90, 0xb5, 0x18, 0x01, 0x52, 0x13, 0x63, 0x6f, 0x6e, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6e, 0x67,
	0x45, 0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x53, 0x0a, 0x0f, 0x72, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x6d, 0x6f, 0x64,
	0x75, 0x6c, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x61, 0x64,
	0x69, 0x6e, 0x67, 0x42, 0x08, 0x88, 0xb5, 0x18, 0x01, 0x90, 0xb5, 0x18, 0x01, 0x52, 0x0f, 0x72,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x3a, 0x04,
	0xc0, 0xf3, 0x18, 0x01, 0x4a, 0x04, 0x08, 0x14, 0x10, 0x15, 0x4a, 0x04, 0x08, 0x16, 0x10, 0x17,
	0x22, 0x8f, 0x04, 0x0a, 0x0d, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x12, 0x50, 0x0a, 0x10, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x64,
	0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x49, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x66, 0x69, 0x65, 0x64, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x42, 0x04, 0x80, 0xb5,
	0x18, 0x01, 0x52, 0x10, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x64, 0x4f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x12, 0x68, 0x0a, 0x18, 0x61, 0x6e, 0x61, 0x6c, 0x6f, 0x67, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x41, 0x6e, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x47, 0x47, 0x49, 0x4f,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x6d,
	0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x41, 0x6e, 0x61, 0x6c, 0x6f, 0x67, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x41, 0x6e, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x47, 0x47, 0x49, 0x4f, 0x42, 0x04,
	0x90, 0xb5, 0x18, 0x00, 0x52, 0x18, 0x61, 0x6e, 0x61, 0x6c, 0x6f, 0x67, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x41, 0x6e, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x47, 0x47, 0x49, 0x4f, 0x12, 0x6b,
	0x0a, 0x19, 0x62, 0x6f, 0x6f, 0x6c, 0x65, 0x61, 0x6e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x41, 0x6e,
	0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x47, 0x47, 0x49, 0x4f, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x27, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65,
	0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x65, 0x61, 0x6e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x41, 0x6e, 0x64,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x47, 0x47, 0x49, 0x4f, 0x42, 0x04, 0x90, 0xb5, 0x18, 0x00,
	0x52, 0x19, 0x62, 0x6f, 0x6f, 0x6c, 0x65, 0x61, 0x6e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x41, 0x6e,
	0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x47, 0x47, 0x49, 0x4f, 0x12, 0x6b, 0x0a, 0x19, 0x69,
	0x6e, 0x74, 0x65, 0x67, 0x65, 0x72, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x41, 0x6e, 0x64, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x47, 0x47, 0x49, 0x4f, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x49, 0x6e,
	0x74, 0x65, 0x67, 0x65, 0x72, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x41, 0x6e, 0x64, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x47, 0x47, 0x49, 0x4f, 0x42, 0x04, 0x90, 0xb5, 0x18, 0x00, 0x52, 0x19, 0x69,
	0x6e, 0x74, 0x65, 0x67, 0x65, 0x72, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x41, 0x6e, 0x64, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x47, 0x47, 0x49, 0x4f, 0x12, 0x68, 0x0a, 0x18, 0x73, 0x74, 0x72, 0x69,
	0x6e, 0x67, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x41, 0x6e, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x47, 0x47, 0x49, 0x4f, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x41, 0x6e, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x47, 0x47,
	0x49, 0x4f, 0x42, 0x04, 0x90, 0xb5, 0x18, 0x00, 0x52, 0x18, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x41, 0x6e, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x47, 0x47,
	0x49, 0x4f, 0x22, 0x9c, 0x02, 0x0a, 0x14, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x50, 0x0a, 0x10, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x6d, 0x6f,
	0x64, 0x75, 0x6c, 0x65, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x04, 0x80, 0xb5, 0x18, 0x01, 0x52, 0x10, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x5d, 0x0a,
	0x13, 0x63, 0x6f, 0x6e, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6e, 0x67, 0x45, 0x71, 0x75, 0x69, 0x70,
	0x6d, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x43, 0x6f, 0x6e, 0x64, 0x75, 0x63,
	0x74, 0x69, 0x6e, 0x67, 0x45, 0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x42, 0x08, 0x88,
	0xb5, 0x18, 0x01, 0x90, 0xb5, 0x18, 0x01, 0x52, 0x13, 0x63, 0x6f, 0x6e, 0x64, 0x75, 0x63, 0x74,
	0x69, 0x6e, 0x67, 0x45, 0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x4d, 0x0a, 0x0d,
	0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x6d, 0x6f,
	0x64, 0x75, 0x6c, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x42, 0x08, 0x88, 0xb5, 0x18, 0x01, 0x90, 0xb5, 0x18, 0x01, 0x52, 0x0d, 0x72, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x3a, 0x04, 0xc0, 0xf3, 0x18,
	0x01, 0x22, 0x90, 0x04, 0x0a, 0x0e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x50, 0x0a, 0x10, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69,
	0x65, 0x64, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x49, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x64, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x42, 0x04,
	0x80, 0xb5, 0x18, 0x01, 0x52, 0x10, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x64,
	0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x68, 0x0a, 0x18, 0x61, 0x6e, 0x61, 0x6c, 0x6f, 0x67,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x41, 0x6e, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x47, 0x47,
	0x49, 0x4f, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x41, 0x6e, 0x61, 0x6c, 0x6f, 0x67, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x41, 0x6e, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x47, 0x47, 0x49, 0x4f,
	0x42, 0x04, 0x90, 0xb5, 0x18, 0x00, 0x52, 0x18, 0x61, 0x6e, 0x61, 0x6c, 0x6f, 0x67, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x41, 0x6e, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x47, 0x47, 0x49, 0x4f,
	0x12, 0x6b, 0x0a, 0x19, 0x62, 0x6f, 0x6f, 0x6c, 0x65, 0x61, 0x6e, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x41, 0x6e, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x47, 0x47, 0x49, 0x4f, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x6d, 0x6f, 0x64, 0x75,
	0x6c, 0x65, 0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x65, 0x61, 0x6e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x41,
	0x6e, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x47, 0x47, 0x49, 0x4f, 0x42, 0x04, 0x90, 0xb5,
	0x18, 0x00, 0x52, 0x19, 0x62, 0x6f, 0x6f, 0x6c, 0x65, 0x61, 0x6e, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x41, 0x6e, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x47, 0x47, 0x49, 0x4f, 0x12, 0x6b, 0x0a,
	0x19, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x65, 0x72, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x41, 0x6e, 0x64,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x47, 0x47, 0x49, 0x4f, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x27, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e,
	0x49, 0x6e, 0x74, 0x65, 0x67, 0x65, 0x72, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x41, 0x6e, 0x64, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x47, 0x47, 0x49, 0x4f, 0x42, 0x04, 0x90, 0xb5, 0x18, 0x00, 0x52,
	0x19, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x65, 0x72, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x41, 0x6e, 0x64,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x47, 0x47, 0x49, 0x4f, 0x12, 0x68, 0x0a, 0x18, 0x73, 0x74,
	0x72, 0x69, 0x6e, 0x67, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x41, 0x6e, 0x64, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x47, 0x47, 0x49, 0x4f, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x53, 0x74, 0x72, 0x69,
	0x6e, 0x67, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x41, 0x6e, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x47, 0x47, 0x49, 0x4f, 0x42, 0x04, 0x90, 0xb5, 0x18, 0x00, 0x52, 0x18, 0x73, 0x74, 0x72, 0x69,
	0x6e, 0x67, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x41, 0x6e, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x47, 0x47, 0x49, 0x4f, 0x22, 0xa3, 0x02, 0x0a, 0x15, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x53,
	0x0a, 0x11, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49,
	0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x04, 0x80, 0xb5, 0x18, 0x01,
	0x52, 0x11, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x5d, 0x0a, 0x13, 0x63, 0x6f, 0x6e, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6e,
	0x67, 0x45, 0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x21, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e,
	0x43, 0x6f, 0x6e, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6e, 0x67, 0x45, 0x71, 0x75, 0x69, 0x70, 0x6d,
	0x65, 0x6e, 0x74, 0x42, 0x08, 0x88, 0xb5, 0x18, 0x01, 0x90, 0xb5, 0x18, 0x01, 0x52, 0x13, 0x63,
	0x6f, 0x6e, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6e, 0x67, 0x45, 0x71, 0x75, 0x69, 0x70, 0x6d, 0x65,
	0x6e, 0x74, 0x12, 0x50, 0x0a, 0x0e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x72, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x42, 0x08, 0x88, 0xb5, 0x18, 0x01,
	0x90, 0xb5, 0x18, 0x01, 0x52, 0x0e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x3a, 0x04, 0xc0, 0xf3, 0x18, 0x01, 0x42, 0x8a, 0x01, 0x0a, 0x16, 0x6f,
	0x70, 0x65, 0x6e, 0x66, 0x6d, 0x62, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x6d,
	0x6f, 0x64, 0x75, 0x6c, 0x65, 0x50, 0x01, 0x5a, 0x55, 0x67, 0x69, 0x74, 0x6c, 0x61, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x6f, 0x70, 0x65, 0x6e, 0x66, 0x6d, 0x62, 0x2f, 0x70, 0x73, 0x6d, 0x2f,
	0x6f, 0x70, 0x73, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x67, 0x6f, 0x2d,
	0x6f, 0x70, 0x65, 0x6e, 0x66, 0x6d, 0x62, 0x2d, 0x6f, 0x70, 0x73, 0x2d, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2f, 0x76, 0x32, 0x2f, 0x6f, 0x70, 0x65, 0x6e, 0x66, 0x6d, 0x62, 0x2f,
	0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0xaa, 0x02,
	0x16, 0x6f, 0x70, 0x65, 0x6e, 0x66, 0x6d, 0x62, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_resourcemodule_resourcemodule_proto_rawDescOnce sync.Once
	file_resourcemodule_resourcemodule_proto_rawDescData = file_resourcemodule_resourcemodule_proto_rawDesc
)

func file_resourcemodule_resourcemodule_proto_rawDescGZIP() []byte {
	file_resourcemodule_resourcemodule_proto_rawDescOnce.Do(func() {
		file_resourcemodule_resourcemodule_proto_rawDescData = protoimpl.X.CompressGZIP(file_resourcemodule_resourcemodule_proto_rawDescData)
	})
	return file_resourcemodule_resourcemodule_proto_rawDescData
}

var file_resourcemodule_resourcemodule_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_resourcemodule_resourcemodule_proto_goTypes = []any{
	(*BooleanControlGGIO)(nil),                              // 0: resourcemodule.BooleanControlGGIO
	(*IntegerControlGGIO)(nil),                              // 1: resourcemodule.IntegerControlGGIO
	(*StringControlGGIO)(nil),                               // 2: resourcemodule.StringControlGGIO
	(*AnalogControlGGIO)(nil),                               // 3: resourcemodule.AnalogControlGGIO
	(*ResourceDiscreteControl)(nil),                         // 4: resourcemodule.ResourceDiscreteControl
	(*ResourceDiscreteControlProfile)(nil),                  // 5: resourcemodule.ResourceDiscreteControlProfile
	(*ResourceReading)(nil),                                 // 6: resourcemodule.ResourceReading
	(*ResourceReadingProfile)(nil),                          // 7: resourcemodule.ResourceReadingProfile
	(*ResourceEvent)(nil),                                   // 8: resourcemodule.ResourceEvent
	(*ResourceEventProfile)(nil),                            // 9: resourcemodule.ResourceEventProfile
	(*ResourceStatus)(nil),                                  // 10: resourcemodule.ResourceStatus
	(*ResourceStatusProfile)(nil),                           // 11: resourcemodule.ResourceStatusProfile
	(*commonmodule.LogicalNode)(nil),                        // 12: commonmodule.LogicalNode
	(*commonmodule.Optional_PhaseCodeKind)(nil),             // 13: commonmodule.Optional_PhaseCodeKind
	(*commonmodule.ControlSPC)(nil),                         // 14: commonmodule.ControlSPC
	(*commonmodule.ControlINC)(nil),                         // 15: commonmodule.ControlINC
	(*commonmodule.VSC)(nil),                                // 16: commonmodule.VSC
	(*commonmodule.ControlAPC)(nil),                         // 17: commonmodule.ControlAPC
	(*commonmodule.IdentifiedObject)(nil),                   // 18: commonmodule.IdentifiedObject
	(*commonmodule.CheckConditions)(nil),                    // 19: commonmodule.CheckConditions
	(*commonmodule.ControlMessageInfo)(nil),                 // 20: commonmodule.ControlMessageInfo
	(*commonmodule.ConductingEquipment)(nil),                // 21: commonmodule.ConductingEquipment
	(*commonmodule.ConductingEquipmentTerminalReading)(nil), // 22: commonmodule.ConductingEquipmentTerminalReading
	(*commonmodule.PhaseMMTN)(nil),                          // 23: commonmodule.PhaseMMTN
	(*commonmodule.ReadingMMTR)(nil),                        // 24: commonmodule.ReadingMMTR
	(*commonmodule.ReadingMMXU)(nil),                        // 25: commonmodule.ReadingMMXU
	(*commonmodule.ReadingMMDC)(nil),                        // 26: commonmodule.ReadingMMDC
	(*commonmodule.ReadingMessageInfo)(nil),                 // 27: commonmodule.ReadingMessageInfo
	(*commonmodule.AnalogEventAndStatusGGIO)(nil),           // 28: commonmodule.AnalogEventAndStatusGGIO
	(*commonmodule.BooleanEventAndStatusGGIO)(nil),          // 29: commonmodule.BooleanEventAndStatusGGIO
	(*commonmodule.IntegerEventAndStatusGGIO)(nil),          // 30: commonmodule.IntegerEventAndStatusGGIO
	(*commonmodule.StringEventAndStatusGGIO)(nil),           // 31: commonmodule.StringEventAndStatusGGIO
	(*commonmodule.EventMessageInfo)(nil),                   // 32: commonmodule.EventMessageInfo
	(*commonmodule.StatusMessageInfo)(nil),                  // 33: commonmodule.StatusMessageInfo
}
var file_resourcemodule_resourcemodule_proto_depIdxs = []int32{
	12, // 0: resourcemodule.BooleanControlGGIO.logicalNode:type_name -> commonmodule.LogicalNode
	13, // 1: resourcemodule.BooleanControlGGIO.Phase:type_name -> commonmodule.Optional_PhaseCodeKind
	14, // 2: resourcemodule.BooleanControlGGIO.SPCSO:type_name -> commonmodule.ControlSPC
	12, // 3: resourcemodule.IntegerControlGGIO.logicalNode:type_name -> commonmodule.LogicalNode
	15, // 4: resourcemodule.IntegerControlGGIO.ISCSO:type_name -> commonmodule.ControlINC
	13, // 5: resourcemodule.IntegerControlGGIO.Phase:type_name -> commonmodule.Optional_PhaseCodeKind
	12, // 6: resourcemodule.StringControlGGIO.logicalNode:type_name -> commonmodule.LogicalNode
	13, // 7: resourcemodule.StringControlGGIO.Phase:type_name -> commonmodule.Optional_PhaseCodeKind
	16, // 8: resourcemodule.StringControlGGIO.StrOut:type_name -> commonmodule.VSC
	12, // 9: resourcemodule.AnalogControlGGIO.logicalNode:type_name -> commonmodule.LogicalNode
	17, // 10: resourcemodule.AnalogControlGGIO.AnOut:type_name -> commonmodule.ControlAPC
	13, // 11: resourcemodule.AnalogControlGGIO.Phase:type_name -> commonmodule.Optional_PhaseCodeKind
	18, // 12: resourcemodule.ResourceDiscreteControl.identifiedObject:type_name -> commonmodule.IdentifiedObject
	19, // 13: resourcemodule.ResourceDiscreteControl.check:type_name -> commonmodule.CheckConditions
	3,  // 14: resourcemodule.ResourceDiscreteControl.analogControlGGIO:type_name -> resourcemodule.AnalogControlGGIO
	0,  // 15: resourcemodule.ResourceDiscreteControl.booleanControlGGIO:type_name -> resourcemodule.BooleanControlGGIO
	1,  // 16: resourcemodule.ResourceDiscreteControl.integerControlGGIO:type_name -> resourcemodule.IntegerControlGGIO
	2,  // 17: resourcemodule.ResourceDiscreteControl.stringControlGGIO:type_name -> resourcemodule.StringControlGGIO
	20, // 18: resourcemodule.ResourceDiscreteControlProfile.controlMessageInfo:type_name -> commonmodule.ControlMessageInfo
	21, // 19: resourcemodule.ResourceDiscreteControlProfile.conductingEquipment:type_name -> commonmodule.ConductingEquipment
	4,  // 20: resourcemodule.ResourceDiscreteControlProfile.resourceDiscreteControl:type_name -> resourcemodule.ResourceDiscreteControl
	22, // 21: resourcemodule.ResourceReading.conductingEquipmentTerminalReading:type_name -> commonmodule.ConductingEquipmentTerminalReading
	23, // 22: resourcemodule.ResourceReading.phaseMMTN:type_name -> commonmodule.PhaseMMTN
	24, // 23: resourcemodule.ResourceReading.readingMMTR:type_name -> commonmodule.ReadingMMTR
	25, // 24: resourcemodule.ResourceReading.readingMMXU:type_name -> commonmodule.ReadingMMXU
	26, // 25: resourcemodule.ResourceReading.readingMMDC:type_name -> commonmodule.ReadingMMDC
	27, // 26: resourcemodule.ResourceReadingProfile.readingMessageInfo:type_name -> commonmodule.ReadingMessageInfo
	21, // 27: resourcemodule.ResourceReadingProfile.conductingEquipment:type_name -> commonmodule.ConductingEquipment
	6,  // 28: resourcemodule.ResourceReadingProfile.resourceReading:type_name -> resourcemodule.ResourceReading
	18, // 29: resourcemodule.ResourceEvent.identifiedObject:type_name -> commonmodule.IdentifiedObject
	28, // 30: resourcemodule.ResourceEvent.analogEventAndStatusGGIO:type_name -> commonmodule.AnalogEventAndStatusGGIO
	29, // 31: resourcemodule.ResourceEvent.booleanEventAndStatusGGIO:type_name -> commonmodule.BooleanEventAndStatusGGIO
	30, // 32: resourcemodule.ResourceEvent.integerEventAndStatusGGIO:type_name -> commonmodule.IntegerEventAndStatusGGIO
	31, // 33: resourcemodule.ResourceEvent.stringEventAndStatusGGIO:type_name -> commonmodule.StringEventAndStatusGGIO
	32, // 34: resourcemodule.ResourceEventProfile.eventMessageInfo:type_name -> commonmodule.EventMessageInfo
	21, // 35: resourcemodule.ResourceEventProfile.conductingEquipment:type_name -> commonmodule.ConductingEquipment
	8,  // 36: resourcemodule.ResourceEventProfile.resourceEvent:type_name -> resourcemodule.ResourceEvent
	18, // 37: resourcemodule.ResourceStatus.identifiedObject:type_name -> commonmodule.IdentifiedObject
	28, // 38: resourcemodule.ResourceStatus.analogEventAndStatusGGIO:type_name -> commonmodule.AnalogEventAndStatusGGIO
	29, // 39: resourcemodule.ResourceStatus.booleanEventAndStatusGGIO:type_name -> commonmodule.BooleanEventAndStatusGGIO
	30, // 40: resourcemodule.ResourceStatus.integerEventAndStatusGGIO:type_name -> commonmodule.IntegerEventAndStatusGGIO
	31, // 41: resourcemodule.ResourceStatus.stringEventAndStatusGGIO:type_name -> commonmodule.StringEventAndStatusGGIO
	33, // 42: resourcemodule.ResourceStatusProfile.statusMessageInfo:type_name -> commonmodule.StatusMessageInfo
	21, // 43: resourcemodule.ResourceStatusProfile.conductingEquipment:type_name -> commonmodule.ConductingEquipment
	10, // 44: resourcemodule.ResourceStatusProfile.resourceStatus:type_name -> resourcemodule.ResourceStatus
	45, // [45:45] is the sub-list for method output_type
	45, // [45:45] is the sub-list for method input_type
	45, // [45:45] is the sub-list for extension type_name
	45, // [45:45] is the sub-list for extension extendee
	0,  // [0:45] is the sub-list for field type_name
}

func init() { file_resourcemodule_resourcemodule_proto_init() }
func file_resourcemodule_resourcemodule_proto_init() {
	if File_resourcemodule_resourcemodule_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_resourcemodule_resourcemodule_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_resourcemodule_resourcemodule_proto_goTypes,
		DependencyIndexes: file_resourcemodule_resourcemodule_proto_depIdxs,
		MessageInfos:      file_resourcemodule_resourcemodule_proto_msgTypes,
	}.Build()
	File_resourcemodule_resourcemodule_proto = out.File
	file_resourcemodule_resourcemodule_proto_rawDesc = nil
	file_resourcemodule_resourcemodule_proto_goTypes = nil
	file_resourcemodule_resourcemodule_proto_depIdxs = nil
}
