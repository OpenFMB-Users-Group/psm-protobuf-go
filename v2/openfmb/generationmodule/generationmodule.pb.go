// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.15.6
// source: generationmodule/generationmodule.proto

// OpenFMB Operational Model (61850-CIM) (v2.0.0).eap
// Tuesday, April 27, 2021 7:07:08 PM UTC

package generationmodule

import (
	_ "gitlab.com/openfmb/psm/ops/protobuf/go-openfmb-ops-protobuf/v2/openfmb"
	commonmodule "gitlab.com/openfmb/psm/ops/protobuf/go-openfmb-ops-protobuf/v2/openfmb/commonmodule"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	wrapperspb "google.golang.org/protobuf/types/known/wrapperspb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Point definition (Point)
type GenerationPoint struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Black start enable
	BlackStartEnabled *commonmodule.ControlSPC `protobuf:"bytes,1,opt,name=blackStartEnabled,proto3" json:"blackStartEnabled,omitempty"`
	// Enable frequency set point
	FrequencySetPointEnabled *commonmodule.ControlSPC `protobuf:"bytes,2,opt,name=frequencySetPointEnabled,proto3" json:"frequencySetPointEnabled,omitempty"`
	// Black start enable
	PctHzDroop *wrapperspb.FloatValue `protobuf:"bytes,3,opt,name=pctHzDroop,proto3" json:"pctHzDroop,omitempty"`
	// Black start enable
	PctVDroop *wrapperspb.FloatValue `protobuf:"bytes,4,opt,name=pctVDroop,proto3" json:"pctVDroop,omitempty"`
	// Ramp rates
	RampRates *commonmodule.RampRate `protobuf:"bytes,5,opt,name=rampRates,proto3" json:"rampRates,omitempty"`
	// Enable reactive power set point
	ReactivePwrSetPointEnabled *commonmodule.ControlSPC `protobuf:"bytes,6,opt,name=reactivePwrSetPointEnabled,proto3" json:"reactivePwrSetPointEnabled,omitempty"`
	// Enable joint real power set point
	RealPwrSetPointEnabled *commonmodule.ControlSPC `protobuf:"bytes,7,opt,name=realPwrSetPointEnabled,proto3" json:"realPwrSetPointEnabled,omitempty"`
	// Reset device
	Reset_ *commonmodule.ControlSPC `protobuf:"bytes,8,opt,name=reset,proto3" json:"reset,omitempty"`
	// ESS state
	State *commonmodule.Optional_StateKind `protobuf:"bytes,9,opt,name=state,proto3" json:"state,omitempty"`
	// Synchronize back to grid
	SyncBackToGrid *commonmodule.ControlSPC `protobuf:"bytes,10,opt,name=syncBackToGrid,proto3" json:"syncBackToGrid,omitempty"`
	// Transition to island on grid loss enable
	TransToIslndOnGridLossEnabled *commonmodule.ControlSPC `protobuf:"bytes,11,opt,name=transToIslndOnGridLossEnabled,proto3" json:"transToIslndOnGridLossEnabled,omitempty"`
	// Enable voltage set point
	VoltageSetPointEnabled *commonmodule.ControlSPC `protobuf:"bytes,12,opt,name=voltageSetPointEnabled,proto3" json:"voltageSetPointEnabled,omitempty"`
	// Start time
	StartTime *commonmodule.ControlTimestamp `protobuf:"bytes,13,opt,name=startTime,proto3" json:"startTime,omitempty"`
}

func (x *GenerationPoint) Reset() {
	*x = GenerationPoint{}
	if protoimpl.UnsafeEnabled {
		mi := &file_generationmodule_generationmodule_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenerationPoint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerationPoint) ProtoMessage() {}

func (x *GenerationPoint) ProtoReflect() protoreflect.Message {
	mi := &file_generationmodule_generationmodule_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerationPoint.ProtoReflect.Descriptor instead.
func (*GenerationPoint) Descriptor() ([]byte, []int) {
	return file_generationmodule_generationmodule_proto_rawDescGZIP(), []int{0}
}

func (x *GenerationPoint) GetBlackStartEnabled() *commonmodule.ControlSPC {
	if x != nil {
		return x.BlackStartEnabled
	}
	return nil
}

func (x *GenerationPoint) GetFrequencySetPointEnabled() *commonmodule.ControlSPC {
	if x != nil {
		return x.FrequencySetPointEnabled
	}
	return nil
}

func (x *GenerationPoint) GetPctHzDroop() *wrapperspb.FloatValue {
	if x != nil {
		return x.PctHzDroop
	}
	return nil
}

func (x *GenerationPoint) GetPctVDroop() *wrapperspb.FloatValue {
	if x != nil {
		return x.PctVDroop
	}
	return nil
}

func (x *GenerationPoint) GetRampRates() *commonmodule.RampRate {
	if x != nil {
		return x.RampRates
	}
	return nil
}

func (x *GenerationPoint) GetReactivePwrSetPointEnabled() *commonmodule.ControlSPC {
	if x != nil {
		return x.ReactivePwrSetPointEnabled
	}
	return nil
}

func (x *GenerationPoint) GetRealPwrSetPointEnabled() *commonmodule.ControlSPC {
	if x != nil {
		return x.RealPwrSetPointEnabled
	}
	return nil
}

func (x *GenerationPoint) GetReset_() *commonmodule.ControlSPC {
	if x != nil {
		return x.Reset_
	}
	return nil
}

func (x *GenerationPoint) GetState() *commonmodule.Optional_StateKind {
	if x != nil {
		return x.State
	}
	return nil
}

func (x *GenerationPoint) GetSyncBackToGrid() *commonmodule.ControlSPC {
	if x != nil {
		return x.SyncBackToGrid
	}
	return nil
}

func (x *GenerationPoint) GetTransToIslndOnGridLossEnabled() *commonmodule.ControlSPC {
	if x != nil {
		return x.TransToIslndOnGridLossEnabled
	}
	return nil
}

func (x *GenerationPoint) GetVoltageSetPointEnabled() *commonmodule.ControlSPC {
	if x != nil {
		return x.VoltageSetPointEnabled
	}
	return nil
}

func (x *GenerationPoint) GetStartTime() *commonmodule.ControlTimestamp {
	if x != nil {
		return x.StartTime
	}
	return nil
}

// Curve shape setting (FC=SP) (CSG_SP)
type GenerationCSG struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The array with the points specifying a curve shape.
	CrvPts []*GenerationPoint `protobuf:"bytes,1,rep,name=crvPts,proto3" json:"crvPts,omitempty"`
}

func (x *GenerationCSG) Reset() {
	*x = GenerationCSG{}
	if protoimpl.UnsafeEnabled {
		mi := &file_generationmodule_generationmodule_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenerationCSG) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerationCSG) ProtoMessage() {}

func (x *GenerationCSG) ProtoReflect() protoreflect.Message {
	mi := &file_generationmodule_generationmodule_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerationCSG.ProtoReflect.Descriptor instead.
func (*GenerationCSG) Descriptor() ([]byte, []int) {
	return file_generationmodule_generationmodule_proto_rawDescGZIP(), []int{1}
}

func (x *GenerationCSG) GetCrvPts() []*GenerationPoint {
	if x != nil {
		return x.CrvPts
	}
	return nil
}

// OpenFMB specialization for control schedule using:  LN: Schedule   Name: FSCH
type GenerationControlScheduleFSCH struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Discrete value in GenerationCSG type
	ValDCSG *GenerationCSG `protobuf:"bytes,1,opt,name=ValDCSG,proto3" json:"ValDCSG,omitempty"`
}

func (x *GenerationControlScheduleFSCH) Reset() {
	*x = GenerationControlScheduleFSCH{}
	if protoimpl.UnsafeEnabled {
		mi := &file_generationmodule_generationmodule_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenerationControlScheduleFSCH) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerationControlScheduleFSCH) ProtoMessage() {}

func (x *GenerationControlScheduleFSCH) ProtoReflect() protoreflect.Message {
	mi := &file_generationmodule_generationmodule_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerationControlScheduleFSCH.ProtoReflect.Descriptor instead.
func (*GenerationControlScheduleFSCH) Descriptor() ([]byte, []int) {
	return file_generationmodule_generationmodule_proto_rawDescGZIP(), []int{2}
}

func (x *GenerationControlScheduleFSCH) GetValDCSG() *GenerationCSG {
	if x != nil {
		return x.ValDCSG
	}
	return nil
}

// LN: Schedule controller   Name: FSCC
type GenerationControlFSCC struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// UML inherited base object
	ControlFSCC *commonmodule.ControlFSCC `protobuf:"bytes,1,opt,name=controlFSCC,proto3" json:"controlFSCC,omitempty"`
	// MISSING DOCUMENTATION!!!
	GenerationControlScheduleFSCH *GenerationControlScheduleFSCH `protobuf:"bytes,2,opt,name=GenerationControlScheduleFSCH,proto3" json:"GenerationControlScheduleFSCH,omitempty"`
}

func (x *GenerationControlFSCC) Reset() {
	*x = GenerationControlFSCC{}
	if protoimpl.UnsafeEnabled {
		mi := &file_generationmodule_generationmodule_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenerationControlFSCC) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerationControlFSCC) ProtoMessage() {}

func (x *GenerationControlFSCC) ProtoReflect() protoreflect.Message {
	mi := &file_generationmodule_generationmodule_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerationControlFSCC.ProtoReflect.Descriptor instead.
func (*GenerationControlFSCC) Descriptor() ([]byte, []int) {
	return file_generationmodule_generationmodule_proto_rawDescGZIP(), []int{3}
}

func (x *GenerationControlFSCC) GetControlFSCC() *commonmodule.ControlFSCC {
	if x != nil {
		return x.ControlFSCC
	}
	return nil
}

func (x *GenerationControlFSCC) GetGenerationControlScheduleFSCH() *GenerationControlScheduleFSCH {
	if x != nil {
		return x.GenerationControlScheduleFSCH
	}
	return nil
}

// Generation control
type GenerationControl struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// UML inherited base object
	ControlValue *commonmodule.ControlValue `protobuf:"bytes,1,opt,name=controlValue,proto3" json:"controlValue,omitempty"`
	// MISSING DOCUMENTATION!!!
	Check *commonmodule.CheckConditions `protobuf:"bytes,2,opt,name=check,proto3" json:"check,omitempty"`
	// MISSING DOCUMENTATION!!!
	GenerationControlFSCC *GenerationControlFSCC `protobuf:"bytes,3,opt,name=generationControlFSCC,proto3" json:"generationControlFSCC,omitempty"`
}

func (x *GenerationControl) Reset() {
	*x = GenerationControl{}
	if protoimpl.UnsafeEnabled {
		mi := &file_generationmodule_generationmodule_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenerationControl) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerationControl) ProtoMessage() {}

func (x *GenerationControl) ProtoReflect() protoreflect.Message {
	mi := &file_generationmodule_generationmodule_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerationControl.ProtoReflect.Descriptor instead.
func (*GenerationControl) Descriptor() ([]byte, []int) {
	return file_generationmodule_generationmodule_proto_rawDescGZIP(), []int{4}
}

func (x *GenerationControl) GetControlValue() *commonmodule.ControlValue {
	if x != nil {
		return x.ControlValue
	}
	return nil
}

func (x *GenerationControl) GetCheck() *commonmodule.CheckConditions {
	if x != nil {
		return x.Check
	}
	return nil
}

func (x *GenerationControl) GetGenerationControlFSCC() *GenerationControlFSCC {
	if x != nil {
		return x.GenerationControlFSCC
	}
	return nil
}

// A single or set of synchronous machines for converting mechanical power into alternating-current
// power. For example, individual machines within a set may be defined for scheduling purposes while a
// single control signal is derived for the set. In this case there would be a GeneratingUnit for each
// member of the set and an additional GeneratingUnit corresponding to the set.
type GeneratingUnit struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// UML inherited base object
	ConductingEquipment *commonmodule.ConductingEquipment `protobuf:"bytes,1,opt,name=conductingEquipment,proto3" json:"conductingEquipment,omitempty"`
	// This is the maximum operating active power limit the dispatcher can enter for this unit.
	MaxOperatingP *commonmodule.ActivePower `protobuf:"bytes,2,opt,name=maxOperatingP,proto3" json:"maxOperatingP,omitempty"`
}

func (x *GeneratingUnit) Reset() {
	*x = GeneratingUnit{}
	if protoimpl.UnsafeEnabled {
		mi := &file_generationmodule_generationmodule_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GeneratingUnit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GeneratingUnit) ProtoMessage() {}

func (x *GeneratingUnit) ProtoReflect() protoreflect.Message {
	mi := &file_generationmodule_generationmodule_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GeneratingUnit.ProtoReflect.Descriptor instead.
func (*GeneratingUnit) Descriptor() ([]byte, []int) {
	return file_generationmodule_generationmodule_proto_rawDescGZIP(), []int{5}
}

func (x *GeneratingUnit) GetConductingEquipment() *commonmodule.ConductingEquipment {
	if x != nil {
		return x.ConductingEquipment
	}
	return nil
}

func (x *GeneratingUnit) GetMaxOperatingP() *commonmodule.ActivePower {
	if x != nil {
		return x.MaxOperatingP
	}
	return nil
}

// Generation control profile
type GenerationControlProfile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// UML inherited base object
	ControlMessageInfo *commonmodule.ControlMessageInfo `protobuf:"bytes,1,opt,name=controlMessageInfo,proto3" json:"controlMessageInfo,omitempty"`
	// MISSING DOCUMENTATION!!!
	GeneratingUnit *GeneratingUnit `protobuf:"bytes,2,opt,name=generatingUnit,proto3" json:"generatingUnit,omitempty"`
	// MISSING DOCUMENTATION!!!
	GenerationControl *GenerationControl `protobuf:"bytes,3,opt,name=generationControl,proto3" json:"generationControl,omitempty"`
}

func (x *GenerationControlProfile) Reset() {
	*x = GenerationControlProfile{}
	if protoimpl.UnsafeEnabled {
		mi := &file_generationmodule_generationmodule_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenerationControlProfile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerationControlProfile) ProtoMessage() {}

func (x *GenerationControlProfile) ProtoReflect() protoreflect.Message {
	mi := &file_generationmodule_generationmodule_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerationControlProfile.ProtoReflect.Descriptor instead.
func (*GenerationControlProfile) Descriptor() ([]byte, []int) {
	return file_generationmodule_generationmodule_proto_rawDescGZIP(), []int{6}
}

func (x *GenerationControlProfile) GetControlMessageInfo() *commonmodule.ControlMessageInfo {
	if x != nil {
		return x.ControlMessageInfo
	}
	return nil
}

func (x *GenerationControlProfile) GetGeneratingUnit() *GeneratingUnit {
	if x != nil {
		return x.GeneratingUnit
	}
	return nil
}

func (x *GenerationControlProfile) GetGenerationControl() *GenerationControl {
	if x != nil {
		return x.GenerationControl
	}
	return nil
}

// Generation discrete control
type DroopParameter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// MISSING DOCUMENTATION!!!
	Slope *wrapperspb.FloatValue `protobuf:"bytes,1,opt,name=slope,proto3" json:"slope,omitempty"`
	// MISSING DOCUMENTATION!!!
	UnloadedOffset *wrapperspb.FloatValue `protobuf:"bytes,2,opt,name=unloadedOffset,proto3" json:"unloadedOffset,omitempty"`
}

func (x *DroopParameter) Reset() {
	*x = DroopParameter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_generationmodule_generationmodule_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DroopParameter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DroopParameter) ProtoMessage() {}

func (x *DroopParameter) ProtoReflect() protoreflect.Message {
	mi := &file_generationmodule_generationmodule_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DroopParameter.ProtoReflect.Descriptor instead.
func (*DroopParameter) Descriptor() ([]byte, []int) {
	return file_generationmodule_generationmodule_proto_rawDescGZIP(), []int{7}
}

func (x *DroopParameter) GetSlope() *wrapperspb.FloatValue {
	if x != nil {
		return x.Slope
	}
	return nil
}

func (x *DroopParameter) GetUnloadedOffset() *wrapperspb.FloatValue {
	if x != nil {
		return x.UnloadedOffset
	}
	return nil
}

// Generation real power control
type RealPowerControl struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// MISSING DOCUMENTATION!!!
	DroopSetpoint *DroopParameter `protobuf:"bytes,1,opt,name=droopSetpoint,proto3" json:"droopSetpoint,omitempty"`
	// MISSING DOCUMENTATION!!!
	IsochronousSetpoint *wrapperspb.FloatValue `protobuf:"bytes,2,opt,name=isochronousSetpoint,proto3" json:"isochronousSetpoint,omitempty"`
	// MISSING DOCUMENTATION!!!
	RealPowerControlMode *commonmodule.Optional_RealPowerControlKind `protobuf:"bytes,3,opt,name=realPowerControlMode,proto3" json:"realPowerControlMode,omitempty"`
	// MISSING DOCUMENTATION!!!
	RealPowerSetpoint *wrapperspb.FloatValue `protobuf:"bytes,4,opt,name=realPowerSetpoint,proto3" json:"realPowerSetpoint,omitempty"`
}

func (x *RealPowerControl) Reset() {
	*x = RealPowerControl{}
	if protoimpl.UnsafeEnabled {
		mi := &file_generationmodule_generationmodule_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RealPowerControl) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RealPowerControl) ProtoMessage() {}

func (x *RealPowerControl) ProtoReflect() protoreflect.Message {
	mi := &file_generationmodule_generationmodule_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RealPowerControl.ProtoReflect.Descriptor instead.
func (*RealPowerControl) Descriptor() ([]byte, []int) {
	return file_generationmodule_generationmodule_proto_rawDescGZIP(), []int{8}
}

func (x *RealPowerControl) GetDroopSetpoint() *DroopParameter {
	if x != nil {
		return x.DroopSetpoint
	}
	return nil
}

func (x *RealPowerControl) GetIsochronousSetpoint() *wrapperspb.FloatValue {
	if x != nil {
		return x.IsochronousSetpoint
	}
	return nil
}

func (x *RealPowerControl) GetRealPowerControlMode() *commonmodule.Optional_RealPowerControlKind {
	if x != nil {
		return x.RealPowerControlMode
	}
	return nil
}

func (x *RealPowerControl) GetRealPowerSetpoint() *wrapperspb.FloatValue {
	if x != nil {
		return x.RealPowerSetpoint
	}
	return nil
}

// Generation real power control
type ReactivePowerControl struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// MISSING DOCUMENTATION!!!
	DroopSetpoint *DroopParameter `protobuf:"bytes,1,opt,name=droopSetpoint,proto3" json:"droopSetpoint,omitempty"`
	// MISSING DOCUMENTATION!!!
	PowerFactorSetpoint *wrapperspb.FloatValue `protobuf:"bytes,2,opt,name=powerFactorSetpoint,proto3" json:"powerFactorSetpoint,omitempty"`
	// MISSING DOCUMENTATION!!!
	ReactivePowerControlMode *commonmodule.Optional_ReactivePowerControlKind `protobuf:"bytes,3,opt,name=reactivePowerControlMode,proto3" json:"reactivePowerControlMode,omitempty"`
	// MISSING DOCUMENTATION!!!
	ReactivePowerSetpoint *wrapperspb.FloatValue `protobuf:"bytes,4,opt,name=reactivePowerSetpoint,proto3" json:"reactivePowerSetpoint,omitempty"`
	// MISSING DOCUMENTATION!!!
	VoltageSetpoint *wrapperspb.FloatValue `protobuf:"bytes,5,opt,name=voltageSetpoint,proto3" json:"voltageSetpoint,omitempty"`
}

func (x *ReactivePowerControl) Reset() {
	*x = ReactivePowerControl{}
	if protoimpl.UnsafeEnabled {
		mi := &file_generationmodule_generationmodule_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReactivePowerControl) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReactivePowerControl) ProtoMessage() {}

func (x *ReactivePowerControl) ProtoReflect() protoreflect.Message {
	mi := &file_generationmodule_generationmodule_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReactivePowerControl.ProtoReflect.Descriptor instead.
func (*ReactivePowerControl) Descriptor() ([]byte, []int) {
	return file_generationmodule_generationmodule_proto_rawDescGZIP(), []int{9}
}

func (x *ReactivePowerControl) GetDroopSetpoint() *DroopParameter {
	if x != nil {
		return x.DroopSetpoint
	}
	return nil
}

func (x *ReactivePowerControl) GetPowerFactorSetpoint() *wrapperspb.FloatValue {
	if x != nil {
		return x.PowerFactorSetpoint
	}
	return nil
}

func (x *ReactivePowerControl) GetReactivePowerControlMode() *commonmodule.Optional_ReactivePowerControlKind {
	if x != nil {
		return x.ReactivePowerControlMode
	}
	return nil
}

func (x *ReactivePowerControl) GetReactivePowerSetpoint() *wrapperspb.FloatValue {
	if x != nil {
		return x.ReactivePowerSetpoint
	}
	return nil
}

func (x *ReactivePowerControl) GetVoltageSetpoint() *wrapperspb.FloatValue {
	if x != nil {
		return x.VoltageSetpoint
	}
	return nil
}

// Generation discrete control
type GenerationDiscreteControl struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// UML inherited base object
	ControlValue *commonmodule.ControlValue `protobuf:"bytes,1,opt,name=controlValue,proto3" json:"controlValue,omitempty"`
	// MISSING DOCUMENTATION!!!
	Check *commonmodule.CheckConditions `protobuf:"bytes,2,opt,name=check,proto3" json:"check,omitempty"`
	// MISSING DOCUMENTATION!!!
	ReactivePowerControl *ReactivePowerControl `protobuf:"bytes,3,opt,name=ReactivePowerControl,proto3" json:"ReactivePowerControl,omitempty"`
	// MISSING DOCUMENTATION!!!
	RealPowerControl *RealPowerControl `protobuf:"bytes,4,opt,name=RealPowerControl,proto3" json:"RealPowerControl,omitempty"`
}

func (x *GenerationDiscreteControl) Reset() {
	*x = GenerationDiscreteControl{}
	if protoimpl.UnsafeEnabled {
		mi := &file_generationmodule_generationmodule_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenerationDiscreteControl) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerationDiscreteControl) ProtoMessage() {}

func (x *GenerationDiscreteControl) ProtoReflect() protoreflect.Message {
	mi := &file_generationmodule_generationmodule_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerationDiscreteControl.ProtoReflect.Descriptor instead.
func (*GenerationDiscreteControl) Descriptor() ([]byte, []int) {
	return file_generationmodule_generationmodule_proto_rawDescGZIP(), []int{10}
}

func (x *GenerationDiscreteControl) GetControlValue() *commonmodule.ControlValue {
	if x != nil {
		return x.ControlValue
	}
	return nil
}

func (x *GenerationDiscreteControl) GetCheck() *commonmodule.CheckConditions {
	if x != nil {
		return x.Check
	}
	return nil
}

func (x *GenerationDiscreteControl) GetReactivePowerControl() *ReactivePowerControl {
	if x != nil {
		return x.ReactivePowerControl
	}
	return nil
}

func (x *GenerationDiscreteControl) GetRealPowerControl() *RealPowerControl {
	if x != nil {
		return x.RealPowerControl
	}
	return nil
}

// Generation discrete control profile
type GenerationDiscreteControlProfile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// UML inherited base object
	ControlMessageInfo *commonmodule.ControlMessageInfo `protobuf:"bytes,1,opt,name=controlMessageInfo,proto3" json:"controlMessageInfo,omitempty"`
	// MISSING DOCUMENTATION!!!
	GeneratingUnit *GeneratingUnit `protobuf:"bytes,2,opt,name=generatingUnit,proto3" json:"generatingUnit,omitempty"`
	// MISSING DOCUMENTATION!!!
	GenerationDiscreteControl *GenerationDiscreteControl `protobuf:"bytes,3,opt,name=generationDiscreteControl,proto3" json:"generationDiscreteControl,omitempty"`
}

func (x *GenerationDiscreteControlProfile) Reset() {
	*x = GenerationDiscreteControlProfile{}
	if protoimpl.UnsafeEnabled {
		mi := &file_generationmodule_generationmodule_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenerationDiscreteControlProfile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerationDiscreteControlProfile) ProtoMessage() {}

func (x *GenerationDiscreteControlProfile) ProtoReflect() protoreflect.Message {
	mi := &file_generationmodule_generationmodule_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerationDiscreteControlProfile.ProtoReflect.Descriptor instead.
func (*GenerationDiscreteControlProfile) Descriptor() ([]byte, []int) {
	return file_generationmodule_generationmodule_proto_rawDescGZIP(), []int{11}
}

func (x *GenerationDiscreteControlProfile) GetControlMessageInfo() *commonmodule.ControlMessageInfo {
	if x != nil {
		return x.ControlMessageInfo
	}
	return nil
}

func (x *GenerationDiscreteControlProfile) GetGeneratingUnit() *GeneratingUnit {
	if x != nil {
		return x.GeneratingUnit
	}
	return nil
}

func (x *GenerationDiscreteControlProfile) GetGenerationDiscreteControl() *GenerationDiscreteControl {
	if x != nil {
		return x.GenerationDiscreteControl
	}
	return nil
}

// Generation reading value
type GenerationReading struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// UML inherited base object
	ConductingEquipmentTerminalReading *commonmodule.ConductingEquipmentTerminalReading `protobuf:"bytes,1,opt,name=conductingEquipmentTerminalReading,proto3" json:"conductingEquipmentTerminalReading,omitempty"`
	// MISSING DOCUMENTATION!!!
	PhaseMMTN *commonmodule.PhaseMMTN `protobuf:"bytes,2,opt,name=phaseMMTN,proto3" json:"phaseMMTN,omitempty"`
	// MISSING DOCUMENTATION!!!
	ReadingMMTR *commonmodule.ReadingMMTR `protobuf:"bytes,3,opt,name=readingMMTR,proto3" json:"readingMMTR,omitempty"`
	// MISSING DOCUMENTATION!!!
	ReadingMMXU *commonmodule.ReadingMMXU `protobuf:"bytes,4,opt,name=readingMMXU,proto3" json:"readingMMXU,omitempty"`
}

func (x *GenerationReading) Reset() {
	*x = GenerationReading{}
	if protoimpl.UnsafeEnabled {
		mi := &file_generationmodule_generationmodule_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenerationReading) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerationReading) ProtoMessage() {}

func (x *GenerationReading) ProtoReflect() protoreflect.Message {
	mi := &file_generationmodule_generationmodule_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerationReading.ProtoReflect.Descriptor instead.
func (*GenerationReading) Descriptor() ([]byte, []int) {
	return file_generationmodule_generationmodule_proto_rawDescGZIP(), []int{12}
}

func (x *GenerationReading) GetConductingEquipmentTerminalReading() *commonmodule.ConductingEquipmentTerminalReading {
	if x != nil {
		return x.ConductingEquipmentTerminalReading
	}
	return nil
}

func (x *GenerationReading) GetPhaseMMTN() *commonmodule.PhaseMMTN {
	if x != nil {
		return x.PhaseMMTN
	}
	return nil
}

func (x *GenerationReading) GetReadingMMTR() *commonmodule.ReadingMMTR {
	if x != nil {
		return x.ReadingMMTR
	}
	return nil
}

func (x *GenerationReading) GetReadingMMXU() *commonmodule.ReadingMMXU {
	if x != nil {
		return x.ReadingMMXU
	}
	return nil
}

// Generation reading profile
type GenerationReadingProfile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// UML inherited base object
	ReadingMessageInfo *commonmodule.ReadingMessageInfo `protobuf:"bytes,1,opt,name=readingMessageInfo,proto3" json:"readingMessageInfo,omitempty"`
	// MISSING DOCUMENTATION!!!
	GeneratingUnit *GeneratingUnit `protobuf:"bytes,2,opt,name=generatingUnit,proto3" json:"generatingUnit,omitempty"`
	// MISSING DOCUMENTATION!!!
	GenerationReading *GenerationReading `protobuf:"bytes,3,opt,name=generationReading,proto3" json:"generationReading,omitempty"`
}

func (x *GenerationReadingProfile) Reset() {
	*x = GenerationReadingProfile{}
	if protoimpl.UnsafeEnabled {
		mi := &file_generationmodule_generationmodule_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenerationReadingProfile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerationReadingProfile) ProtoMessage() {}

func (x *GenerationReadingProfile) ProtoReflect() protoreflect.Message {
	mi := &file_generationmodule_generationmodule_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerationReadingProfile.ProtoReflect.Descriptor instead.
func (*GenerationReadingProfile) Descriptor() ([]byte, []int) {
	return file_generationmodule_generationmodule_proto_rawDescGZIP(), []int{13}
}

func (x *GenerationReadingProfile) GetReadingMessageInfo() *commonmodule.ReadingMessageInfo {
	if x != nil {
		return x.ReadingMessageInfo
	}
	return nil
}

func (x *GenerationReadingProfile) GetGeneratingUnit() *GeneratingUnit {
	if x != nil {
		return x.GeneratingUnit
	}
	return nil
}

func (x *GenerationReadingProfile) GetGenerationReading() *GenerationReading {
	if x != nil {
		return x.GenerationReading
	}
	return nil
}

// Point definition (Point)
type GenerationPointStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Black start enable
	BlackStartEnabled *commonmodule.StatusSPS `protobuf:"bytes,1,opt,name=blackStartEnabled,proto3" json:"blackStartEnabled,omitempty"`
	// Enable frequency set point
	FrequencySetPointEnabled *commonmodule.StatusSPS `protobuf:"bytes,2,opt,name=frequencySetPointEnabled,proto3" json:"frequencySetPointEnabled,omitempty"`
	// Black start enable
	PctHzDroop *wrapperspb.FloatValue `protobuf:"bytes,3,opt,name=pctHzDroop,proto3" json:"pctHzDroop,omitempty"`
	// Black start enable
	PctVDroop *wrapperspb.FloatValue `protobuf:"bytes,4,opt,name=pctVDroop,proto3" json:"pctVDroop,omitempty"`
	// Ramp rates
	RampRates *commonmodule.RampRate `protobuf:"bytes,5,opt,name=rampRates,proto3" json:"rampRates,omitempty"`
	// Enable reactive power set point
	ReactivePwrSetPointEnabled *commonmodule.StatusSPS `protobuf:"bytes,6,opt,name=reactivePwrSetPointEnabled,proto3" json:"reactivePwrSetPointEnabled,omitempty"`
	// Enable real power set point
	RealPwrSetPointEnabled *commonmodule.StatusSPS `protobuf:"bytes,7,opt,name=realPwrSetPointEnabled,proto3" json:"realPwrSetPointEnabled,omitempty"`
	// ESS state
	State *commonmodule.Optional_StateKind `protobuf:"bytes,8,opt,name=state,proto3" json:"state,omitempty"`
	// Synchronize back to grid
	SyncBackToGrid *commonmodule.StatusSPS `protobuf:"bytes,9,opt,name=syncBackToGrid,proto3" json:"syncBackToGrid,omitempty"`
	// Transition to island on grid loss enable
	TransToIslndOnGridLossEnabled *commonmodule.StatusSPS `protobuf:"bytes,10,opt,name=transToIslndOnGridLossEnabled,proto3" json:"transToIslndOnGridLossEnabled,omitempty"`
	// Enable voltage set point
	VoltageSetPointEnabled *commonmodule.StatusSPS `protobuf:"bytes,11,opt,name=voltageSetPointEnabled,proto3" json:"voltageSetPointEnabled,omitempty"`
}

func (x *GenerationPointStatus) Reset() {
	*x = GenerationPointStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_generationmodule_generationmodule_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenerationPointStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerationPointStatus) ProtoMessage() {}

func (x *GenerationPointStatus) ProtoReflect() protoreflect.Message {
	mi := &file_generationmodule_generationmodule_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerationPointStatus.ProtoReflect.Descriptor instead.
func (*GenerationPointStatus) Descriptor() ([]byte, []int) {
	return file_generationmodule_generationmodule_proto_rawDescGZIP(), []int{14}
}

func (x *GenerationPointStatus) GetBlackStartEnabled() *commonmodule.StatusSPS {
	if x != nil {
		return x.BlackStartEnabled
	}
	return nil
}

func (x *GenerationPointStatus) GetFrequencySetPointEnabled() *commonmodule.StatusSPS {
	if x != nil {
		return x.FrequencySetPointEnabled
	}
	return nil
}

func (x *GenerationPointStatus) GetPctHzDroop() *wrapperspb.FloatValue {
	if x != nil {
		return x.PctHzDroop
	}
	return nil
}

func (x *GenerationPointStatus) GetPctVDroop() *wrapperspb.FloatValue {
	if x != nil {
		return x.PctVDroop
	}
	return nil
}

func (x *GenerationPointStatus) GetRampRates() *commonmodule.RampRate {
	if x != nil {
		return x.RampRates
	}
	return nil
}

func (x *GenerationPointStatus) GetReactivePwrSetPointEnabled() *commonmodule.StatusSPS {
	if x != nil {
		return x.ReactivePwrSetPointEnabled
	}
	return nil
}

func (x *GenerationPointStatus) GetRealPwrSetPointEnabled() *commonmodule.StatusSPS {
	if x != nil {
		return x.RealPwrSetPointEnabled
	}
	return nil
}

func (x *GenerationPointStatus) GetState() *commonmodule.Optional_StateKind {
	if x != nil {
		return x.State
	}
	return nil
}

func (x *GenerationPointStatus) GetSyncBackToGrid() *commonmodule.StatusSPS {
	if x != nil {
		return x.SyncBackToGrid
	}
	return nil
}

func (x *GenerationPointStatus) GetTransToIslndOnGridLossEnabled() *commonmodule.StatusSPS {
	if x != nil {
		return x.TransToIslndOnGridLossEnabled
	}
	return nil
}

func (x *GenerationPointStatus) GetVoltageSetPointEnabled() *commonmodule.StatusSPS {
	if x != nil {
		return x.VoltageSetPointEnabled
	}
	return nil
}

// Specialized 61850 ZGEN class
type GenerationEventAndStatusZGEN struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// UML inherited base object
	LogicalNodeForEventAndStatus *commonmodule.LogicalNodeForEventAndStatus `protobuf:"bytes,1,opt,name=logicalNodeForEventAndStatus,proto3" json:"logicalNodeForEventAndStatus,omitempty"`
	// MISSING DOCUMENTATION!!!
	AuxPwrSt *commonmodule.StatusSPS `protobuf:"bytes,2,opt,name=AuxPwrSt,proto3" json:"AuxPwrSt,omitempty"`
	// MISSING DOCUMENTATION!!!
	DynamicTest *commonmodule.ENS_DynamicTestKind `protobuf:"bytes,3,opt,name=DynamicTest,proto3" json:"DynamicTest,omitempty"`
	// Emergency stop
	EmgStop *commonmodule.StatusSPS `protobuf:"bytes,4,opt,name=EmgStop,proto3" json:"EmgStop,omitempty"`
	// Generator is synchronized to EPS, or not; True = Synchronized
	GnSynSt *commonmodule.StatusSPS `protobuf:"bytes,5,opt,name=GnSynSt,proto3" json:"GnSynSt,omitempty"`
	// Point status
	PointStatus *GenerationPointStatus `protobuf:"bytes,6,opt,name=PointStatus,proto3" json:"PointStatus,omitempty"`
}

func (x *GenerationEventAndStatusZGEN) Reset() {
	*x = GenerationEventAndStatusZGEN{}
	if protoimpl.UnsafeEnabled {
		mi := &file_generationmodule_generationmodule_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenerationEventAndStatusZGEN) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerationEventAndStatusZGEN) ProtoMessage() {}

func (x *GenerationEventAndStatusZGEN) ProtoReflect() protoreflect.Message {
	mi := &file_generationmodule_generationmodule_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerationEventAndStatusZGEN.ProtoReflect.Descriptor instead.
func (*GenerationEventAndStatusZGEN) Descriptor() ([]byte, []int) {
	return file_generationmodule_generationmodule_proto_rawDescGZIP(), []int{15}
}

func (x *GenerationEventAndStatusZGEN) GetLogicalNodeForEventAndStatus() *commonmodule.LogicalNodeForEventAndStatus {
	if x != nil {
		return x.LogicalNodeForEventAndStatus
	}
	return nil
}

func (x *GenerationEventAndStatusZGEN) GetAuxPwrSt() *commonmodule.StatusSPS {
	if x != nil {
		return x.AuxPwrSt
	}
	return nil
}

func (x *GenerationEventAndStatusZGEN) GetDynamicTest() *commonmodule.ENS_DynamicTestKind {
	if x != nil {
		return x.DynamicTest
	}
	return nil
}

func (x *GenerationEventAndStatusZGEN) GetEmgStop() *commonmodule.StatusSPS {
	if x != nil {
		return x.EmgStop
	}
	return nil
}

func (x *GenerationEventAndStatusZGEN) GetGnSynSt() *commonmodule.StatusSPS {
	if x != nil {
		return x.GnSynSt
	}
	return nil
}

func (x *GenerationEventAndStatusZGEN) GetPointStatus() *GenerationPointStatus {
	if x != nil {
		return x.PointStatus
	}
	return nil
}

// Specialized generation event ZGEN
type GenerationEventZGEN struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// UML inherited base object
	GenerationEventAndStatusZGEN *GenerationEventAndStatusZGEN `protobuf:"bytes,1,opt,name=generationEventAndStatusZGEN,proto3" json:"generationEventAndStatusZGEN,omitempty"`
}

func (x *GenerationEventZGEN) Reset() {
	*x = GenerationEventZGEN{}
	if protoimpl.UnsafeEnabled {
		mi := &file_generationmodule_generationmodule_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenerationEventZGEN) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerationEventZGEN) ProtoMessage() {}

func (x *GenerationEventZGEN) ProtoReflect() protoreflect.Message {
	mi := &file_generationmodule_generationmodule_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerationEventZGEN.ProtoReflect.Descriptor instead.
func (*GenerationEventZGEN) Descriptor() ([]byte, []int) {
	return file_generationmodule_generationmodule_proto_rawDescGZIP(), []int{16}
}

func (x *GenerationEventZGEN) GetGenerationEventAndStatusZGEN() *GenerationEventAndStatusZGEN {
	if x != nil {
		return x.GenerationEventAndStatusZGEN
	}
	return nil
}

// Generation event
type GenerationEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// UML inherited base object
	EventValue *commonmodule.EventValue `protobuf:"bytes,1,opt,name=eventValue,proto3" json:"eventValue,omitempty"`
	// MISSING DOCUMENTATION!!!
	GenerationEventZGEN *GenerationEventZGEN `protobuf:"bytes,2,opt,name=generationEventZGEN,proto3" json:"generationEventZGEN,omitempty"`
}

func (x *GenerationEvent) Reset() {
	*x = GenerationEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_generationmodule_generationmodule_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenerationEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerationEvent) ProtoMessage() {}

func (x *GenerationEvent) ProtoReflect() protoreflect.Message {
	mi := &file_generationmodule_generationmodule_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerationEvent.ProtoReflect.Descriptor instead.
func (*GenerationEvent) Descriptor() ([]byte, []int) {
	return file_generationmodule_generationmodule_proto_rawDescGZIP(), []int{17}
}

func (x *GenerationEvent) GetEventValue() *commonmodule.EventValue {
	if x != nil {
		return x.EventValue
	}
	return nil
}

func (x *GenerationEvent) GetGenerationEventZGEN() *GenerationEventZGEN {
	if x != nil {
		return x.GenerationEventZGEN
	}
	return nil
}

// Generation event profile
type GenerationEventProfile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// UML inherited base object
	EventMessageInfo *commonmodule.EventMessageInfo `protobuf:"bytes,1,opt,name=eventMessageInfo,proto3" json:"eventMessageInfo,omitempty"`
	// MISSING DOCUMENTATION!!!
	GeneratingUnit *GeneratingUnit `protobuf:"bytes,2,opt,name=generatingUnit,proto3" json:"generatingUnit,omitempty"`
	// MISSING DOCUMENTATION!!!
	GenerationEvent *GenerationEvent `protobuf:"bytes,3,opt,name=generationEvent,proto3" json:"generationEvent,omitempty"`
}

func (x *GenerationEventProfile) Reset() {
	*x = GenerationEventProfile{}
	if protoimpl.UnsafeEnabled {
		mi := &file_generationmodule_generationmodule_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenerationEventProfile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerationEventProfile) ProtoMessage() {}

func (x *GenerationEventProfile) ProtoReflect() protoreflect.Message {
	mi := &file_generationmodule_generationmodule_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerationEventProfile.ProtoReflect.Descriptor instead.
func (*GenerationEventProfile) Descriptor() ([]byte, []int) {
	return file_generationmodule_generationmodule_proto_rawDescGZIP(), []int{18}
}

func (x *GenerationEventProfile) GetEventMessageInfo() *commonmodule.EventMessageInfo {
	if x != nil {
		return x.EventMessageInfo
	}
	return nil
}

func (x *GenerationEventProfile) GetGeneratingUnit() *GeneratingUnit {
	if x != nil {
		return x.GeneratingUnit
	}
	return nil
}

func (x *GenerationEventProfile) GetGenerationEvent() *GenerationEvent {
	if x != nil {
		return x.GenerationEvent
	}
	return nil
}

// Specialized 61850 ZGEN class
type GenerationStatusZGEN struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// UML inherited base object
	GenerationEventAndStatusZGEN *GenerationEventAndStatusZGEN `protobuf:"bytes,1,opt,name=generationEventAndStatusZGEN,proto3" json:"generationEventAndStatusZGEN,omitempty"`
}

func (x *GenerationStatusZGEN) Reset() {
	*x = GenerationStatusZGEN{}
	if protoimpl.UnsafeEnabled {
		mi := &file_generationmodule_generationmodule_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenerationStatusZGEN) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerationStatusZGEN) ProtoMessage() {}

func (x *GenerationStatusZGEN) ProtoReflect() protoreflect.Message {
	mi := &file_generationmodule_generationmodule_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerationStatusZGEN.ProtoReflect.Descriptor instead.
func (*GenerationStatusZGEN) Descriptor() ([]byte, []int) {
	return file_generationmodule_generationmodule_proto_rawDescGZIP(), []int{19}
}

func (x *GenerationStatusZGEN) GetGenerationEventAndStatusZGEN() *GenerationEventAndStatusZGEN {
	if x != nil {
		return x.GenerationEventAndStatusZGEN
	}
	return nil
}

// Generation status
type GenerationStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// UML inherited base object
	StatusValue *commonmodule.StatusValue `protobuf:"bytes,1,opt,name=statusValue,proto3" json:"statusValue,omitempty"`
	// MISSING DOCUMENTATION!!!
	GenerationStatusZGEN *GenerationStatusZGEN `protobuf:"bytes,2,opt,name=generationStatusZGEN,proto3" json:"generationStatusZGEN,omitempty"`
}

func (x *GenerationStatus) Reset() {
	*x = GenerationStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_generationmodule_generationmodule_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenerationStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerationStatus) ProtoMessage() {}

func (x *GenerationStatus) ProtoReflect() protoreflect.Message {
	mi := &file_generationmodule_generationmodule_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerationStatus.ProtoReflect.Descriptor instead.
func (*GenerationStatus) Descriptor() ([]byte, []int) {
	return file_generationmodule_generationmodule_proto_rawDescGZIP(), []int{20}
}

func (x *GenerationStatus) GetStatusValue() *commonmodule.StatusValue {
	if x != nil {
		return x.StatusValue
	}
	return nil
}

func (x *GenerationStatus) GetGenerationStatusZGEN() *GenerationStatusZGEN {
	if x != nil {
		return x.GenerationStatusZGEN
	}
	return nil
}

// Generation status profile
type GenerationStatusProfile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// UML inherited base object
	StatusMessageInfo *commonmodule.StatusMessageInfo `protobuf:"bytes,1,opt,name=statusMessageInfo,proto3" json:"statusMessageInfo,omitempty"`
	// MISSING DOCUMENTATION!!!
	GeneratingUnit *GeneratingUnit `protobuf:"bytes,2,opt,name=generatingUnit,proto3" json:"generatingUnit,omitempty"`
	// MISSING DOCUMENTATION!!!
	GenerationStatus *GenerationStatus `protobuf:"bytes,3,opt,name=generationStatus,proto3" json:"generationStatus,omitempty"`
}

func (x *GenerationStatusProfile) Reset() {
	*x = GenerationStatusProfile{}
	if protoimpl.UnsafeEnabled {
		mi := &file_generationmodule_generationmodule_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenerationStatusProfile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerationStatusProfile) ProtoMessage() {}

func (x *GenerationStatusProfile) ProtoReflect() protoreflect.Message {
	mi := &file_generationmodule_generationmodule_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerationStatusProfile.ProtoReflect.Descriptor instead.
func (*GenerationStatusProfile) Descriptor() ([]byte, []int) {
	return file_generationmodule_generationmodule_proto_rawDescGZIP(), []int{21}
}

func (x *GenerationStatusProfile) GetStatusMessageInfo() *commonmodule.StatusMessageInfo {
	if x != nil {
		return x.StatusMessageInfo
	}
	return nil
}

func (x *GenerationStatusProfile) GetGeneratingUnit() *GeneratingUnit {
	if x != nil {
		return x.GeneratingUnit
	}
	return nil
}

func (x *GenerationStatusProfile) GetGenerationStatus() *GenerationStatus {
	if x != nil {
		return x.GenerationStatus
	}
	return nil
}

var File_generationmodule_generationmodule_proto protoreflect.FileDescriptor

var file_generationmodule_generationmodule_proto_rawDesc = []byte{
	0x0a, 0x27, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x6d, 0x6f, 0x64, 0x75,
	0x6c, 0x65, 0x2f, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x6d, 0x6f, 0x64,
	0x75, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x10, 0x67, 0x65, 0x6e, 0x65, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x1a, 0x09, 0x75, 0x6d, 0x6c,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x77, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x6d, 0x6f,
	0x64, 0x75, 0x6c, 0x65, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x6d, 0x6f, 0x64, 0x75, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xad, 0x07, 0x0a, 0x0f, 0x47, 0x65, 0x6e, 0x65,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x46, 0x0a, 0x11, 0x62,
	0x6c, 0x61, 0x63, 0x6b, 0x53, 0x74, 0x61, 0x72, 0x74, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x6d,
	0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x53, 0x50, 0x43,
	0x52, 0x11, 0x62, 0x6c, 0x61, 0x63, 0x6b, 0x53, 0x74, 0x61, 0x72, 0x74, 0x45, 0x6e, 0x61, 0x62,
	0x6c, 0x65, 0x64, 0x12, 0x54, 0x0a, 0x18, 0x66, 0x72, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x79,
	0x53, 0x65, 0x74, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x6d, 0x6f,
	0x64, 0x75, 0x6c, 0x65, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x53, 0x50, 0x43, 0x52,
	0x18, 0x66, 0x72, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x79, 0x53, 0x65, 0x74, 0x50, 0x6f, 0x69,
	0x6e, 0x74, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x3b, 0x0a, 0x0a, 0x70, 0x63, 0x74,
	0x48, 0x7a, 0x44, 0x72, 0x6f, 0x6f, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x46, 0x6c, 0x6f, 0x61, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0a, 0x70, 0x63, 0x74, 0x48,
	0x7a, 0x44, 0x72, 0x6f, 0x6f, 0x70, 0x12, 0x39, 0x0a, 0x09, 0x70, 0x63, 0x74, 0x56, 0x44, 0x72,
	0x6f, 0x6f, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x46, 0x6c, 0x6f, 0x61,
	0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x09, 0x70, 0x63, 0x74, 0x56, 0x44, 0x72, 0x6f, 0x6f,
	0x70, 0x12, 0x34, 0x0a, 0x09, 0x72, 0x61, 0x6d, 0x70, 0x52, 0x61, 0x74, 0x65, 0x73, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x6d, 0x6f, 0x64,
	0x75, 0x6c, 0x65, 0x2e, 0x52, 0x61, 0x6d, 0x70, 0x52, 0x61, 0x74, 0x65, 0x52, 0x09, 0x72, 0x61,
	0x6d, 0x70, 0x52, 0x61, 0x74, 0x65, 0x73, 0x12, 0x58, 0x0a, 0x1a, 0x72, 0x65, 0x61, 0x63, 0x74,
	0x69, 0x76, 0x65, 0x50, 0x77, 0x72, 0x53, 0x65, 0x74, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x45, 0x6e,
	0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x72,
	0x6f, 0x6c, 0x53, 0x50, 0x43, 0x52, 0x1a, 0x72, 0x65, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x50,
	0x77, 0x72, 0x53, 0x65, 0x74, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65,
	0x64, 0x12, 0x50, 0x0a, 0x16, 0x72, 0x65, 0x61, 0x6c, 0x50, 0x77, 0x72, 0x53, 0x65, 0x74, 0x50,
	0x6f, 0x69, 0x6e, 0x74, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x18, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65,
	0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x53, 0x50, 0x43, 0x52, 0x16, 0x72, 0x65, 0x61,
	0x6c, 0x50, 0x77, 0x72, 0x53, 0x65, 0x74, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x45, 0x6e, 0x61, 0x62,
	0x6c, 0x65, 0x64, 0x12, 0x2e, 0x0a, 0x05, 0x72, 0x65, 0x73, 0x65, 0x74, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x18, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x6d, 0x6f, 0x64, 0x75, 0x6c,
	0x65, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x53, 0x50, 0x43, 0x52, 0x05, 0x72, 0x65,
	0x73, 0x65, 0x74, 0x12, 0x36, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x20, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x6d, 0x6f, 0x64, 0x75, 0x6c,
	0x65, 0x2e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x4b, 0x69, 0x6e, 0x64, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x40, 0x0a, 0x0e, 0x73,
	0x79, 0x6e, 0x63, 0x42, 0x61, 0x63, 0x6b, 0x54, 0x6f, 0x47, 0x72, 0x69, 0x64, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x6d, 0x6f, 0x64, 0x75,
	0x6c, 0x65, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x53, 0x50, 0x43, 0x52, 0x0e, 0x73,
	0x79, 0x6e, 0x63, 0x42, 0x61, 0x63, 0x6b, 0x54, 0x6f, 0x47, 0x72, 0x69, 0x64, 0x12, 0x5e, 0x0a,
	0x1d, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x54, 0x6f, 0x49, 0x73, 0x6c, 0x6e, 0x64, 0x4f, 0x6e, 0x47,
	0x72, 0x69, 0x64, 0x4c, 0x6f, 0x73, 0x73, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x6d, 0x6f, 0x64,
	0x75, 0x6c, 0x65, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x53, 0x50, 0x43, 0x52, 0x1d,
	0x74, 0x72, 0x61, 0x6e, 0x73, 0x54, 0x6f, 0x49, 0x73, 0x6c, 0x6e, 0x64, 0x4f, 0x6e, 0x47, 0x72,
	0x69, 0x64, 0x4c, 0x6f, 0x73, 0x73, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x50, 0x0a,
	0x16, 0x76, 0x6f, 0x6c, 0x74, 0x61, 0x67, 0x65, 0x53, 0x65, 0x74, 0x50, 0x6f, 0x69, 0x6e, 0x74,
	0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x43, 0x6f, 0x6e,
	0x74, 0x72, 0x6f, 0x6c, 0x53, 0x50, 0x43, 0x52, 0x16, 0x76, 0x6f, 0x6c, 0x74, 0x61, 0x67, 0x65,
	0x53, 0x65, 0x74, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12,
	0x46, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0d, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x6d, 0x6f, 0x64, 0x75, 0x6c,
	0x65, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x42, 0x08, 0x88, 0xb5, 0x18, 0x01, 0x90, 0xb5, 0x18, 0x01, 0x52, 0x09, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x54, 0x0a, 0x0d, 0x47, 0x65, 0x6e, 0x65, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x53, 0x47, 0x12, 0x43, 0x0a, 0x06, 0x63, 0x72, 0x76, 0x50,
	0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x67, 0x65, 0x6e, 0x65, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x47, 0x65, 0x6e, 0x65,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x42, 0x08, 0x88, 0xb5, 0x18,
	0x01, 0x90, 0xb5, 0x18, 0x01, 0x52, 0x06, 0x63, 0x72, 0x76, 0x50, 0x74, 0x73, 0x22, 0x64, 0x0a,
	0x1d, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x72,
	0x6f, 0x6c, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x46, 0x53, 0x43, 0x48, 0x12, 0x43,
	0x0a, 0x07, 0x56, 0x61, 0x6c, 0x44, 0x43, 0x53, 0x47, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1f, 0x2e, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x6d, 0x6f, 0x64, 0x75,
	0x6c, 0x65, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x53, 0x47,
	0x42, 0x08, 0x88, 0xb5, 0x18, 0x01, 0x90, 0xb5, 0x18, 0x01, 0x52, 0x07, 0x56, 0x61, 0x6c, 0x44,
	0x43, 0x53, 0x47, 0x22, 0xd1, 0x01, 0x0a, 0x15, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x46, 0x53, 0x43, 0x43, 0x12, 0x41, 0x0a,
	0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x46, 0x53, 0x43, 0x43, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x19, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x6d, 0x6f, 0x64, 0x75, 0x6c,
	0x65, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x46, 0x53, 0x43, 0x43, 0x42, 0x04, 0x80,
	0xb5, 0x18, 0x01, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x46, 0x53, 0x43, 0x43,
	0x12, 0x75, 0x0a, 0x1d, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f,
	0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x46, 0x53, 0x43,
	0x48, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x53, 0x63, 0x68, 0x65,
	0x64, 0x75, 0x6c, 0x65, 0x46, 0x53, 0x43, 0x48, 0x52, 0x1d, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x53, 0x63, 0x68, 0x65, 0x64,
	0x75, 0x6c, 0x65, 0x46, 0x53, 0x43, 0x48, 0x22, 0xed, 0x01, 0x0a, 0x11, 0x47, 0x65, 0x6e, 0x65,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x12, 0x44, 0x0a,
	0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x6d, 0x6f, 0x64, 0x75,
	0x6c, 0x65, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x42,
	0x04, 0x80, 0xb5, 0x18, 0x01, 0x52, 0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x12, 0x33, 0x0a, 0x05, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x6d, 0x6f, 0x64, 0x75, 0x6c,
	0x65, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x52, 0x05, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x12, 0x5d, 0x0a, 0x15, 0x67, 0x65, 0x6e, 0x65,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x46, 0x53, 0x43,
	0x43, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x46, 0x53, 0x43, 0x43,
	0x52, 0x15, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x74,
	0x72, 0x6f, 0x6c, 0x46, 0x53, 0x43, 0x43, 0x22, 0xac, 0x01, 0x0a, 0x0e, 0x47, 0x65, 0x6e, 0x65,
	0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x55, 0x6e, 0x69, 0x74, 0x12, 0x59, 0x0a, 0x13, 0x63, 0x6f,
	0x6e, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6e, 0x67, 0x45, 0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x43, 0x6f, 0x6e, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6e,
	0x67, 0x45, 0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x42, 0x04, 0x80, 0xb5, 0x18, 0x01,
	0x52, 0x13, 0x63, 0x6f, 0x6e, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6e, 0x67, 0x45, 0x71, 0x75, 0x69,
	0x70, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x3f, 0x0a, 0x0d, 0x6d, 0x61, 0x78, 0x4f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x41, 0x63, 0x74, 0x69,
	0x76, 0x65, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x52, 0x0d, 0x6d, 0x61, 0x78, 0x4f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x22, 0xa9, 0x02, 0x0a, 0x18, 0x47, 0x65, 0x6e, 0x65, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x50, 0x72, 0x6f, 0x66,
	0x69, 0x6c, 0x65, 0x12, 0x56, 0x0a, 0x12, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x20, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x43,
	0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66,
	0x6f, 0x42, 0x04, 0x80, 0xb5, 0x18, 0x01, 0x52, 0x12, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x52, 0x0a, 0x0e, 0x67,
	0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x55, 0x6e, 0x69, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6e,
	0x67, 0x55, 0x6e, 0x69, 0x74, 0x42, 0x08, 0x88, 0xb5, 0x18, 0x01, 0x90, 0xb5, 0x18, 0x01, 0x52,
	0x0e, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x55, 0x6e, 0x69, 0x74, 0x12,
	0x5b, 0x0a, 0x11, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e,
	0x74, 0x72, 0x6f, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x67, 0x65, 0x6e,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x47, 0x65,
	0x6e, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x42,
	0x08, 0x88, 0xb5, 0x18, 0x01, 0x90, 0xb5, 0x18, 0x01, 0x52, 0x11, 0x67, 0x65, 0x6e, 0x65, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x3a, 0x04, 0xc0, 0xf3,
	0x18, 0x01, 0x22, 0x88, 0x01, 0x0a, 0x0e, 0x44, 0x72, 0x6f, 0x6f, 0x70, 0x50, 0x61, 0x72, 0x61,
	0x6d, 0x65, 0x74, 0x65, 0x72, 0x12, 0x31, 0x0a, 0x05, 0x73, 0x6c, 0x6f, 0x70, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x46, 0x6c, 0x6f, 0x61, 0x74, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x52, 0x05, 0x73, 0x6c, 0x6f, 0x70, 0x65, 0x12, 0x43, 0x0a, 0x0e, 0x75, 0x6e, 0x6c, 0x6f,
	0x61, 0x64, 0x65, 0x64, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x46, 0x6c, 0x6f, 0x61, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0e, 0x75,
	0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x65, 0x64, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x22, 0xd5, 0x02,
	0x0a, 0x10, 0x52, 0x65, 0x61, 0x6c, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x74, 0x72,
	0x6f, 0x6c, 0x12, 0x46, 0x0a, 0x0d, 0x64, 0x72, 0x6f, 0x6f, 0x70, 0x53, 0x65, 0x74, 0x70, 0x6f,
	0x69, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x67, 0x65, 0x6e, 0x65,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x44, 0x72, 0x6f,
	0x6f, 0x70, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x52, 0x0d, 0x64, 0x72, 0x6f,
	0x6f, 0x70, 0x53, 0x65, 0x74, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x4d, 0x0a, 0x13, 0x69, 0x73,
	0x6f, 0x63, 0x68, 0x72, 0x6f, 0x6e, 0x6f, 0x75, 0x73, 0x53, 0x65, 0x74, 0x70, 0x6f, 0x69, 0x6e,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x46, 0x6c, 0x6f, 0x61, 0x74, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x52, 0x13, 0x69, 0x73, 0x6f, 0x63, 0x68, 0x72, 0x6f, 0x6e, 0x6f, 0x75,
	0x73, 0x53, 0x65, 0x74, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x5f, 0x0a, 0x14, 0x72, 0x65, 0x61,
	0x6c, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x4d, 0x6f, 0x64,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f,
	0x52, 0x65, 0x61, 0x6c, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c,
	0x4b, 0x69, 0x6e, 0x64, 0x52, 0x14, 0x72, 0x65, 0x61, 0x6c, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x43,
	0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x49, 0x0a, 0x11, 0x72, 0x65,
	0x61, 0x6c, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x53, 0x65, 0x74, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x46, 0x6c, 0x6f, 0x61, 0x74, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x52, 0x11, 0x72, 0x65, 0x61, 0x6c, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x53, 0x65, 0x74,
	0x70, 0x6f, 0x69, 0x6e, 0x74, 0x22, 0xb4, 0x03, 0x0a, 0x14, 0x52, 0x65, 0x61, 0x63, 0x74, 0x69,
	0x76, 0x65, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x12, 0x46,
	0x0a, 0x0d, 0x64, 0x72, 0x6f, 0x6f, 0x70, 0x53, 0x65, 0x74, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x44, 0x72, 0x6f, 0x6f, 0x70, 0x50, 0x61,
	0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x52, 0x0d, 0x64, 0x72, 0x6f, 0x6f, 0x70, 0x53, 0x65,
	0x74, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x4d, 0x0a, 0x13, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x46,
	0x61, 0x63, 0x74, 0x6f, 0x72, 0x53, 0x65, 0x74, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x46, 0x6c, 0x6f, 0x61, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x52, 0x13, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x46, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x53, 0x65, 0x74,
	0x70, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x6b, 0x0a, 0x18, 0x72, 0x65, 0x61, 0x63, 0x74, 0x69, 0x76,
	0x65, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x4d, 0x6f, 0x64,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f,
	0x52, 0x65, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x43, 0x6f, 0x6e,
	0x74, 0x72, 0x6f, 0x6c, 0x4b, 0x69, 0x6e, 0x64, 0x52, 0x18, 0x72, 0x65, 0x61, 0x63, 0x74, 0x69,
	0x76, 0x65, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x4d, 0x6f,
	0x64, 0x65, 0x12, 0x51, 0x0a, 0x15, 0x72, 0x65, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x50, 0x6f,
	0x77, 0x65, 0x72, 0x53, 0x65, 0x74, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x46, 0x6c, 0x6f, 0x61, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x15,
	0x72, 0x65, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x53, 0x65, 0x74,
	0x70, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x45, 0x0a, 0x0f, 0x76, 0x6f, 0x6c, 0x74, 0x61, 0x67, 0x65,
	0x53, 0x65, 0x74, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x46, 0x6c, 0x6f, 0x61, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0f, 0x76, 0x6f, 0x6c,
	0x74, 0x61, 0x67, 0x65, 0x53, 0x65, 0x74, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x22, 0xc2, 0x02, 0x0a,
	0x19, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x69, 0x73, 0x63, 0x72,
	0x65, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x12, 0x44, 0x0a, 0x0c, 0x63, 0x6f,
	0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e,
	0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x04, 0x80, 0xb5,
	0x18, 0x01, 0x52, 0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x12, 0x33, 0x0a, 0x05, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x43,
	0x68, 0x65, 0x63, 0x6b, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x05,
	0x63, 0x68, 0x65, 0x63, 0x6b, 0x12, 0x5a, 0x0a, 0x14, 0x52, 0x65, 0x61, 0x63, 0x74, 0x69, 0x76,
	0x65, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x52, 0x65, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x50,
	0x6f, 0x77, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x52, 0x14, 0x52, 0x65, 0x61,
	0x63, 0x74, 0x69, 0x76, 0x65, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f,
	0x6c, 0x12, 0x4e, 0x0a, 0x10, 0x52, 0x65, 0x61, 0x6c, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x43, 0x6f,
	0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x67, 0x65,
	0x6e, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x52,
	0x65, 0x61, 0x6c, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x52,
	0x10, 0x52, 0x65, 0x61, 0x6c, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f,
	0x6c, 0x22, 0xc9, 0x02, 0x0a, 0x20, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x44, 0x69, 0x73, 0x63, 0x72, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x50,
	0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x56, 0x0a, 0x12, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f,
	0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x20, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x6d, 0x6f, 0x64, 0x75, 0x6c,
	0x65, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x49, 0x6e, 0x66, 0x6f, 0x42, 0x04, 0x80, 0xb5, 0x18, 0x01, 0x52, 0x12, 0x63, 0x6f, 0x6e, 0x74,
	0x72, 0x6f, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x52,
	0x0a, 0x0e, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x55, 0x6e, 0x69, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61,
	0x74, 0x69, 0x6e, 0x67, 0x55, 0x6e, 0x69, 0x74, 0x42, 0x08, 0x88, 0xb5, 0x18, 0x01, 0x90, 0xb5,
	0x18, 0x01, 0x52, 0x0e, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x55, 0x6e,
	0x69, 0x74, 0x12, 0x73, 0x0a, 0x19, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x44, 0x69, 0x73, 0x63, 0x72, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x44, 0x69, 0x73, 0x63, 0x72, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72,
	0x6f, 0x6c, 0x42, 0x08, 0x88, 0xb5, 0x18, 0x01, 0x90, 0xb5, 0x18, 0x01, 0x52, 0x19, 0x67, 0x65,
	0x6e, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x69, 0x73, 0x63, 0x72, 0x65, 0x74, 0x65,
	0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x3a, 0x04, 0xc0, 0xf3, 0x18, 0x01, 0x22, 0xcd, 0x02,
	0x0a, 0x11, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x61, 0x64,
	0x69, 0x6e, 0x67, 0x12, 0x86, 0x01, 0x0a, 0x22, 0x63, 0x6f, 0x6e, 0x64, 0x75, 0x63, 0x74, 0x69,
	0x6e, 0x67, 0x45, 0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x65, 0x72, 0x6d, 0x69,
	0x6e, 0x61, 0x6c, 0x52, 0x65, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x30, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e,
	0x43, 0x6f, 0x6e, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6e, 0x67, 0x45, 0x71, 0x75, 0x69, 0x70, 0x6d,
	0x65, 0x6e, 0x74, 0x54, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x6c, 0x52, 0x65, 0x61, 0x64, 0x69,
	0x6e, 0x67, 0x42, 0x04, 0x80, 0xb5, 0x18, 0x01, 0x52, 0x22, 0x63, 0x6f, 0x6e, 0x64, 0x75, 0x63,
	0x74, 0x69, 0x6e, 0x67, 0x45, 0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x65, 0x72,
	0x6d, 0x69, 0x6e, 0x61, 0x6c, 0x52, 0x65, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x12, 0x35, 0x0a, 0x09,
	0x70, 0x68, 0x61, 0x73, 0x65, 0x4d, 0x4d, 0x54, 0x4e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x17, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x50,
	0x68, 0x61, 0x73, 0x65, 0x4d, 0x4d, 0x54, 0x4e, 0x52, 0x09, 0x70, 0x68, 0x61, 0x73, 0x65, 0x4d,
	0x4d, 0x54, 0x4e, 0x12, 0x3b, 0x0a, 0x0b, 0x72, 0x65, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x4d, 0x4d,
	0x54, 0x52, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x52, 0x65, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x4d,
	0x4d, 0x54, 0x52, 0x52, 0x0b, 0x72, 0x65, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x4d, 0x4d, 0x54, 0x52,
	0x12, 0x3b, 0x0a, 0x0b, 0x72, 0x65, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x4d, 0x4d, 0x58, 0x55, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x6d, 0x6f,
	0x64, 0x75, 0x6c, 0x65, 0x2e, 0x52, 0x65, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x4d, 0x4d, 0x58, 0x55,
	0x52, 0x0b, 0x72, 0x65, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x4d, 0x4d, 0x58, 0x55, 0x22, 0xa9, 0x02,
	0x0a, 0x18, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x61, 0x64,
	0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x56, 0x0a, 0x12, 0x72, 0x65,
	0x61, 0x64, 0x69, 0x6e, 0x67, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x6d,
	0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x52, 0x65, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x04, 0x80, 0xb5, 0x18, 0x01, 0x52, 0x12,
	0x72, 0x65, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x52, 0x0a, 0x0e, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67,
	0x55, 0x6e, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x67, 0x65, 0x6e,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x47, 0x65,
	0x6e, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x55, 0x6e, 0x69, 0x74, 0x42, 0x08, 0x88, 0xb5,
	0x18, 0x01, 0x90, 0xb5, 0x18, 0x01, 0x52, 0x0e, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x6e, 0x67, 0x55, 0x6e, 0x69, 0x74, 0x12, 0x5b, 0x0a, 0x11, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x23, 0x2e, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x6d, 0x6f,
	0x64, 0x75, 0x6c, 0x65, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x42, 0x08, 0x88, 0xb5, 0x18, 0x01, 0x90, 0xb5, 0x18, 0x01,
	0x52, 0x11, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x61, 0x64,
	0x69, 0x6e, 0x67, 0x3a, 0x04, 0xc0, 0xf3, 0x18, 0x01, 0x22, 0xb4, 0x06, 0x0a, 0x15, 0x47, 0x65,
	0x6e, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x45, 0x0a, 0x11, 0x62, 0x6c, 0x61, 0x63, 0x6b, 0x53, 0x74, 0x61, 0x72,
	0x74, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x53, 0x50, 0x53, 0x52, 0x11, 0x62, 0x6c, 0x61, 0x63, 0x6b, 0x53, 0x74,
	0x61, 0x72, 0x74, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x53, 0x0a, 0x18, 0x66, 0x72,
	0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x79, 0x53, 0x65, 0x74, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x45,
	0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x53, 0x50, 0x53, 0x52, 0x18, 0x66, 0x72, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x79,
	0x53, 0x65, 0x74, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12,
	0x3b, 0x0a, 0x0a, 0x70, 0x63, 0x74, 0x48, 0x7a, 0x44, 0x72, 0x6f, 0x6f, 0x70, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x46, 0x6c, 0x6f, 0x61, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x52, 0x0a, 0x70, 0x63, 0x74, 0x48, 0x7a, 0x44, 0x72, 0x6f, 0x6f, 0x70, 0x12, 0x39, 0x0a, 0x09,
	0x70, 0x63, 0x74, 0x56, 0x44, 0x72, 0x6f, 0x6f, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x46, 0x6c, 0x6f, 0x61, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x09, 0x70, 0x63,
	0x74, 0x56, 0x44, 0x72, 0x6f, 0x6f, 0x70, 0x12, 0x34, 0x0a, 0x09, 0x72, 0x61, 0x6d, 0x70, 0x52,
	0x61, 0x74, 0x65, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x52, 0x61, 0x6d, 0x70, 0x52, 0x61,
	0x74, 0x65, 0x52, 0x09, 0x72, 0x61, 0x6d, 0x70, 0x52, 0x61, 0x74, 0x65, 0x73, 0x12, 0x57, 0x0a,
	0x1a, 0x72, 0x65, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x50, 0x77, 0x72, 0x53, 0x65, 0x74, 0x50,
	0x6f, 0x69, 0x6e, 0x74, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x17, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65,
	0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x53, 0x50, 0x53, 0x52, 0x1a, 0x72, 0x65, 0x61, 0x63,
	0x74, 0x69, 0x76, 0x65, 0x50, 0x77, 0x72, 0x53, 0x65, 0x74, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x45,
	0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x4f, 0x0a, 0x16, 0x72, 0x65, 0x61, 0x6c, 0x50, 0x77,
	0x72, 0x53, 0x65, 0x74, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x6d,
	0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x53, 0x50, 0x53, 0x52,
	0x16, 0x72, 0x65, 0x61, 0x6c, 0x50, 0x77, 0x72, 0x53, 0x65, 0x74, 0x50, 0x6f, 0x69, 0x6e, 0x74,
	0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x36, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x6d,
	0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x4b, 0x69, 0x6e, 0x64, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12,
	0x3f, 0x0a, 0x0e, 0x73, 0x79, 0x6e, 0x63, 0x42, 0x61, 0x63, 0x6b, 0x54, 0x6f, 0x47, 0x72, 0x69,
	0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x53, 0x50, 0x53,
	0x52, 0x0e, 0x73, 0x79, 0x6e, 0x63, 0x42, 0x61, 0x63, 0x6b, 0x54, 0x6f, 0x47, 0x72, 0x69, 0x64,
	0x12, 0x5d, 0x0a, 0x1d, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x54, 0x6f, 0x49, 0x73, 0x6c, 0x6e, 0x64,
	0x4f, 0x6e, 0x47, 0x72, 0x69, 0x64, 0x4c, 0x6f, 0x73, 0x73, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65,
	0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x53, 0x50, 0x53,
	0x52, 0x1d, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x54, 0x6f, 0x49, 0x73, 0x6c, 0x6e, 0x64, 0x4f, 0x6e,
	0x47, 0x72, 0x69, 0x64, 0x4c, 0x6f, 0x73, 0x73, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12,
	0x4f, 0x0a, 0x16, 0x76, 0x6f, 0x6c, 0x74, 0x61, 0x67, 0x65, 0x53, 0x65, 0x74, 0x50, 0x6f, 0x69,
	0x6e, 0x74, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x17, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x53, 0x50, 0x53, 0x52, 0x16, 0x76, 0x6f, 0x6c, 0x74, 0x61, 0x67,
	0x65, 0x53, 0x65, 0x74, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64,
	0x22, 0xbf, 0x03, 0x0a, 0x1c, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x41, 0x6e, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5a, 0x47, 0x45,
	0x4e, 0x12, 0x74, 0x0a, 0x1c, 0x6c, 0x6f, 0x67, 0x69, 0x63, 0x61, 0x6c, 0x4e, 0x6f, 0x64, 0x65,
	0x46, 0x6f, 0x72, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x41, 0x6e, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x4c, 0x6f, 0x67, 0x69, 0x63, 0x61, 0x6c, 0x4e, 0x6f,
	0x64, 0x65, 0x46, 0x6f, 0x72, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x41, 0x6e, 0x64, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x42, 0x04, 0x80, 0xb5, 0x18, 0x01, 0x52, 0x1c, 0x6c, 0x6f, 0x67, 0x69, 0x63,
	0x61, 0x6c, 0x4e, 0x6f, 0x64, 0x65, 0x46, 0x6f, 0x72, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x41, 0x6e,
	0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x33, 0x0a, 0x08, 0x41, 0x75, 0x78, 0x50, 0x77,
	0x72, 0x53, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x53,
	0x50, 0x53, 0x52, 0x08, 0x41, 0x75, 0x78, 0x50, 0x77, 0x72, 0x53, 0x74, 0x12, 0x43, 0x0a, 0x0b,
	0x44, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x54, 0x65, 0x73, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x21, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65,
	0x2e, 0x45, 0x4e, 0x53, 0x5f, 0x44, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x54, 0x65, 0x73, 0x74,
	0x4b, 0x69, 0x6e, 0x64, 0x52, 0x0b, 0x44, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x54, 0x65, 0x73,
	0x74, 0x12, 0x31, 0x0a, 0x07, 0x45, 0x6d, 0x67, 0x53, 0x74, 0x6f, 0x70, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x17, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x6d, 0x6f, 0x64, 0x75, 0x6c,
	0x65, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x53, 0x50, 0x53, 0x52, 0x07, 0x45, 0x6d, 0x67,
	0x53, 0x74, 0x6f, 0x70, 0x12, 0x31, 0x0a, 0x07, 0x47, 0x6e, 0x53, 0x79, 0x6e, 0x53, 0x74, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x6d, 0x6f,
	0x64, 0x75, 0x6c, 0x65, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x53, 0x50, 0x53, 0x52, 0x07,
	0x47, 0x6e, 0x53, 0x79, 0x6e, 0x53, 0x74, 0x12, 0x49, 0x0a, 0x0b, 0x50, 0x6f, 0x69, 0x6e, 0x74,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x67,
	0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e,
	0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x0b, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x22, 0x8f, 0x01, 0x0a, 0x13, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x5a, 0x47, 0x45, 0x4e, 0x12, 0x78, 0x0a, 0x1c, 0x67, 0x65,
	0x6e, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x41, 0x6e, 0x64,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5a, 0x47, 0x45, 0x4e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x2e, 0x2e, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x6d, 0x6f, 0x64,
	0x75, 0x6c, 0x65, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x41, 0x6e, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5a, 0x47, 0x45, 0x4e,
	0x42, 0x04, 0x80, 0xb5, 0x18, 0x01, 0x52, 0x1c, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x41, 0x6e, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x5a, 0x47, 0x45, 0x4e, 0x22, 0xaa, 0x01, 0x0a, 0x0f, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x3e, 0x0a, 0x0a, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x04, 0x80, 0xb5, 0x18, 0x01, 0x52, 0x0a, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x57, 0x0a, 0x13, 0x67, 0x65, 0x6e, 0x65,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x5a, 0x47, 0x45, 0x4e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x5a, 0x47, 0x45, 0x4e, 0x52, 0x13, 0x67, 0x65,
	0x6e, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x5a, 0x47, 0x45,
	0x4e, 0x22, 0x9b, 0x02, 0x0a, 0x16, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x50, 0x0a, 0x10,
	0x65, 0x76, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x6d,
	0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x04, 0x80, 0xb5, 0x18, 0x01, 0x52, 0x10, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x52,
	0x0a, 0x0e, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x55, 0x6e, 0x69, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61,
	0x74, 0x69, 0x6e, 0x67, 0x55, 0x6e, 0x69, 0x74, 0x42, 0x08, 0x88, 0xb5, 0x18, 0x01, 0x90, 0xb5,
	0x18, 0x01, 0x52, 0x0e, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x55, 0x6e,
	0x69, 0x74, 0x12, 0x55, 0x0a, 0x0f, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x67, 0x65,
	0x6e, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x47,
	0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x42, 0x08,
	0x88, 0xb5, 0x18, 0x01, 0x90, 0xb5, 0x18, 0x01, 0x52, 0x0f, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x3a, 0x04, 0xc0, 0xf3, 0x18, 0x01, 0x22,
	0x90, 0x01, 0x0a, 0x14, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x5a, 0x47, 0x45, 0x4e, 0x12, 0x78, 0x0a, 0x1c, 0x67, 0x65, 0x6e, 0x65,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x41, 0x6e, 0x64, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x5a, 0x47, 0x45, 0x4e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e,
	0x2e, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x6d, 0x6f, 0x64, 0x75, 0x6c,
	0x65, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x41, 0x6e, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5a, 0x47, 0x45, 0x4e, 0x42, 0x04,
	0x80, 0xb5, 0x18, 0x01, 0x52, 0x1c, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x41, 0x6e, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5a, 0x47,
	0x45, 0x4e, 0x22, 0xb1, 0x01, 0x0a, 0x10, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x41, 0x0a, 0x0b, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x04, 0x80, 0xb5, 0x18, 0x01, 0x52, 0x0b, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x5a, 0x0a, 0x14, 0x67, 0x65,
	0x6e, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5a, 0x47,
	0x45, 0x4e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x67, 0x65, 0x6e, 0x65, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x47, 0x65, 0x6e, 0x65,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5a, 0x47, 0x45, 0x4e,
	0x52, 0x14, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x5a, 0x47, 0x45, 0x4e, 0x22, 0xa2, 0x02, 0x0a, 0x17, 0x47, 0x65, 0x6e, 0x65, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x50, 0x72, 0x6f, 0x66, 0x69,
	0x6c, 0x65, 0x12, 0x53, 0x0a, 0x11, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x04,
	0x80, 0xb5, 0x18, 0x01, 0x52, 0x11, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x52, 0x0a, 0x0e, 0x67, 0x65, 0x6e, 0x65, 0x72,
	0x61, 0x74, 0x69, 0x6e, 0x67, 0x55, 0x6e, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x20, 0x2e, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x6d, 0x6f, 0x64, 0x75,
	0x6c, 0x65, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x55, 0x6e, 0x69,
	0x74, 0x42, 0x08, 0x88, 0xb5, 0x18, 0x01, 0x90, 0xb5, 0x18, 0x01, 0x52, 0x0e, 0x67, 0x65, 0x6e,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x55, 0x6e, 0x69, 0x74, 0x12, 0x58, 0x0a, 0x10, 0x67,
	0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x42, 0x08, 0x88, 0xb5, 0x18, 0x01, 0x90,
	0xb5, 0x18, 0x01, 0x52, 0x10, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x3a, 0x04, 0xc0, 0xf3, 0x18, 0x01, 0x42, 0x90, 0x01, 0x0a, 0x18,
	0x6f, 0x70, 0x65, 0x6e, 0x66, 0x6d, 0x62, 0x2e, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x50, 0x01, 0x5a, 0x57, 0x67, 0x69, 0x74, 0x6c,
	0x61, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6f, 0x70, 0x65, 0x6e, 0x66, 0x6d, 0x62, 0x2f, 0x70,
	0x73, 0x6d, 0x2f, 0x6f, 0x70, 0x73, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f,
	0x67, 0x6f, 0x2d, 0x6f, 0x70, 0x65, 0x6e, 0x66, 0x6d, 0x62, 0x2d, 0x6f, 0x70, 0x73, 0x2d, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x76, 0x32, 0x2f, 0x6f, 0x70, 0x65, 0x6e, 0x66,
	0x6d, 0x62, 0x2f, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x6d, 0x6f, 0x64,
	0x75, 0x6c, 0x65, 0xaa, 0x02, 0x18, 0x6f, 0x70, 0x65, 0x6e, 0x66, 0x6d, 0x62, 0x2e, 0x67, 0x65,
	0x6e, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_generationmodule_generationmodule_proto_rawDescOnce sync.Once
	file_generationmodule_generationmodule_proto_rawDescData = file_generationmodule_generationmodule_proto_rawDesc
)

func file_generationmodule_generationmodule_proto_rawDescGZIP() []byte {
	file_generationmodule_generationmodule_proto_rawDescOnce.Do(func() {
		file_generationmodule_generationmodule_proto_rawDescData = protoimpl.X.CompressGZIP(file_generationmodule_generationmodule_proto_rawDescData)
	})
	return file_generationmodule_generationmodule_proto_rawDescData
}

var file_generationmodule_generationmodule_proto_msgTypes = make([]protoimpl.MessageInfo, 22)
var file_generationmodule_generationmodule_proto_goTypes = []interface{}{
	(*GenerationPoint)(nil),                                 // 0: generationmodule.GenerationPoint
	(*GenerationCSG)(nil),                                   // 1: generationmodule.GenerationCSG
	(*GenerationControlScheduleFSCH)(nil),                   // 2: generationmodule.GenerationControlScheduleFSCH
	(*GenerationControlFSCC)(nil),                           // 3: generationmodule.GenerationControlFSCC
	(*GenerationControl)(nil),                               // 4: generationmodule.GenerationControl
	(*GeneratingUnit)(nil),                                  // 5: generationmodule.GeneratingUnit
	(*GenerationControlProfile)(nil),                        // 6: generationmodule.GenerationControlProfile
	(*DroopParameter)(nil),                                  // 7: generationmodule.DroopParameter
	(*RealPowerControl)(nil),                                // 8: generationmodule.RealPowerControl
	(*ReactivePowerControl)(nil),                            // 9: generationmodule.ReactivePowerControl
	(*GenerationDiscreteControl)(nil),                       // 10: generationmodule.GenerationDiscreteControl
	(*GenerationDiscreteControlProfile)(nil),                // 11: generationmodule.GenerationDiscreteControlProfile
	(*GenerationReading)(nil),                               // 12: generationmodule.GenerationReading
	(*GenerationReadingProfile)(nil),                        // 13: generationmodule.GenerationReadingProfile
	(*GenerationPointStatus)(nil),                           // 14: generationmodule.GenerationPointStatus
	(*GenerationEventAndStatusZGEN)(nil),                    // 15: generationmodule.GenerationEventAndStatusZGEN
	(*GenerationEventZGEN)(nil),                             // 16: generationmodule.GenerationEventZGEN
	(*GenerationEvent)(nil),                                 // 17: generationmodule.GenerationEvent
	(*GenerationEventProfile)(nil),                          // 18: generationmodule.GenerationEventProfile
	(*GenerationStatusZGEN)(nil),                            // 19: generationmodule.GenerationStatusZGEN
	(*GenerationStatus)(nil),                                // 20: generationmodule.GenerationStatus
	(*GenerationStatusProfile)(nil),                         // 21: generationmodule.GenerationStatusProfile
	(*commonmodule.ControlSPC)(nil),                         // 22: commonmodule.ControlSPC
	(*wrapperspb.FloatValue)(nil),                           // 23: google.protobuf.FloatValue
	(*commonmodule.RampRate)(nil),                           // 24: commonmodule.RampRate
	(*commonmodule.Optional_StateKind)(nil),                 // 25: commonmodule.Optional_StateKind
	(*commonmodule.ControlTimestamp)(nil),                   // 26: commonmodule.ControlTimestamp
	(*commonmodule.ControlFSCC)(nil),                        // 27: commonmodule.ControlFSCC
	(*commonmodule.ControlValue)(nil),                       // 28: commonmodule.ControlValue
	(*commonmodule.CheckConditions)(nil),                    // 29: commonmodule.CheckConditions
	(*commonmodule.ConductingEquipment)(nil),                // 30: commonmodule.ConductingEquipment
	(*commonmodule.ActivePower)(nil),                        // 31: commonmodule.ActivePower
	(*commonmodule.ControlMessageInfo)(nil),                 // 32: commonmodule.ControlMessageInfo
	(*commonmodule.Optional_RealPowerControlKind)(nil),      // 33: commonmodule.Optional_RealPowerControlKind
	(*commonmodule.Optional_ReactivePowerControlKind)(nil),  // 34: commonmodule.Optional_ReactivePowerControlKind
	(*commonmodule.ConductingEquipmentTerminalReading)(nil), // 35: commonmodule.ConductingEquipmentTerminalReading
	(*commonmodule.PhaseMMTN)(nil),                          // 36: commonmodule.PhaseMMTN
	(*commonmodule.ReadingMMTR)(nil),                        // 37: commonmodule.ReadingMMTR
	(*commonmodule.ReadingMMXU)(nil),                        // 38: commonmodule.ReadingMMXU
	(*commonmodule.ReadingMessageInfo)(nil),                 // 39: commonmodule.ReadingMessageInfo
	(*commonmodule.StatusSPS)(nil),                          // 40: commonmodule.StatusSPS
	(*commonmodule.LogicalNodeForEventAndStatus)(nil),       // 41: commonmodule.LogicalNodeForEventAndStatus
	(*commonmodule.ENS_DynamicTestKind)(nil),                // 42: commonmodule.ENS_DynamicTestKind
	(*commonmodule.EventValue)(nil),                         // 43: commonmodule.EventValue
	(*commonmodule.EventMessageInfo)(nil),                   // 44: commonmodule.EventMessageInfo
	(*commonmodule.StatusValue)(nil),                        // 45: commonmodule.StatusValue
	(*commonmodule.StatusMessageInfo)(nil),                  // 46: commonmodule.StatusMessageInfo
}
var file_generationmodule_generationmodule_proto_depIdxs = []int32{
	22, // 0: generationmodule.GenerationPoint.blackStartEnabled:type_name -> commonmodule.ControlSPC
	22, // 1: generationmodule.GenerationPoint.frequencySetPointEnabled:type_name -> commonmodule.ControlSPC
	23, // 2: generationmodule.GenerationPoint.pctHzDroop:type_name -> google.protobuf.FloatValue
	23, // 3: generationmodule.GenerationPoint.pctVDroop:type_name -> google.protobuf.FloatValue
	24, // 4: generationmodule.GenerationPoint.rampRates:type_name -> commonmodule.RampRate
	22, // 5: generationmodule.GenerationPoint.reactivePwrSetPointEnabled:type_name -> commonmodule.ControlSPC
	22, // 6: generationmodule.GenerationPoint.realPwrSetPointEnabled:type_name -> commonmodule.ControlSPC
	22, // 7: generationmodule.GenerationPoint.reset:type_name -> commonmodule.ControlSPC
	25, // 8: generationmodule.GenerationPoint.state:type_name -> commonmodule.Optional_StateKind
	22, // 9: generationmodule.GenerationPoint.syncBackToGrid:type_name -> commonmodule.ControlSPC
	22, // 10: generationmodule.GenerationPoint.transToIslndOnGridLossEnabled:type_name -> commonmodule.ControlSPC
	22, // 11: generationmodule.GenerationPoint.voltageSetPointEnabled:type_name -> commonmodule.ControlSPC
	26, // 12: generationmodule.GenerationPoint.startTime:type_name -> commonmodule.ControlTimestamp
	0,  // 13: generationmodule.GenerationCSG.crvPts:type_name -> generationmodule.GenerationPoint
	1,  // 14: generationmodule.GenerationControlScheduleFSCH.ValDCSG:type_name -> generationmodule.GenerationCSG
	27, // 15: generationmodule.GenerationControlFSCC.controlFSCC:type_name -> commonmodule.ControlFSCC
	2,  // 16: generationmodule.GenerationControlFSCC.GenerationControlScheduleFSCH:type_name -> generationmodule.GenerationControlScheduleFSCH
	28, // 17: generationmodule.GenerationControl.controlValue:type_name -> commonmodule.ControlValue
	29, // 18: generationmodule.GenerationControl.check:type_name -> commonmodule.CheckConditions
	3,  // 19: generationmodule.GenerationControl.generationControlFSCC:type_name -> generationmodule.GenerationControlFSCC
	30, // 20: generationmodule.GeneratingUnit.conductingEquipment:type_name -> commonmodule.ConductingEquipment
	31, // 21: generationmodule.GeneratingUnit.maxOperatingP:type_name -> commonmodule.ActivePower
	32, // 22: generationmodule.GenerationControlProfile.controlMessageInfo:type_name -> commonmodule.ControlMessageInfo
	5,  // 23: generationmodule.GenerationControlProfile.generatingUnit:type_name -> generationmodule.GeneratingUnit
	4,  // 24: generationmodule.GenerationControlProfile.generationControl:type_name -> generationmodule.GenerationControl
	23, // 25: generationmodule.DroopParameter.slope:type_name -> google.protobuf.FloatValue
	23, // 26: generationmodule.DroopParameter.unloadedOffset:type_name -> google.protobuf.FloatValue
	7,  // 27: generationmodule.RealPowerControl.droopSetpoint:type_name -> generationmodule.DroopParameter
	23, // 28: generationmodule.RealPowerControl.isochronousSetpoint:type_name -> google.protobuf.FloatValue
	33, // 29: generationmodule.RealPowerControl.realPowerControlMode:type_name -> commonmodule.Optional_RealPowerControlKind
	23, // 30: generationmodule.RealPowerControl.realPowerSetpoint:type_name -> google.protobuf.FloatValue
	7,  // 31: generationmodule.ReactivePowerControl.droopSetpoint:type_name -> generationmodule.DroopParameter
	23, // 32: generationmodule.ReactivePowerControl.powerFactorSetpoint:type_name -> google.protobuf.FloatValue
	34, // 33: generationmodule.ReactivePowerControl.reactivePowerControlMode:type_name -> commonmodule.Optional_ReactivePowerControlKind
	23, // 34: generationmodule.ReactivePowerControl.reactivePowerSetpoint:type_name -> google.protobuf.FloatValue
	23, // 35: generationmodule.ReactivePowerControl.voltageSetpoint:type_name -> google.protobuf.FloatValue
	28, // 36: generationmodule.GenerationDiscreteControl.controlValue:type_name -> commonmodule.ControlValue
	29, // 37: generationmodule.GenerationDiscreteControl.check:type_name -> commonmodule.CheckConditions
	9,  // 38: generationmodule.GenerationDiscreteControl.ReactivePowerControl:type_name -> generationmodule.ReactivePowerControl
	8,  // 39: generationmodule.GenerationDiscreteControl.RealPowerControl:type_name -> generationmodule.RealPowerControl
	32, // 40: generationmodule.GenerationDiscreteControlProfile.controlMessageInfo:type_name -> commonmodule.ControlMessageInfo
	5,  // 41: generationmodule.GenerationDiscreteControlProfile.generatingUnit:type_name -> generationmodule.GeneratingUnit
	10, // 42: generationmodule.GenerationDiscreteControlProfile.generationDiscreteControl:type_name -> generationmodule.GenerationDiscreteControl
	35, // 43: generationmodule.GenerationReading.conductingEquipmentTerminalReading:type_name -> commonmodule.ConductingEquipmentTerminalReading
	36, // 44: generationmodule.GenerationReading.phaseMMTN:type_name -> commonmodule.PhaseMMTN
	37, // 45: generationmodule.GenerationReading.readingMMTR:type_name -> commonmodule.ReadingMMTR
	38, // 46: generationmodule.GenerationReading.readingMMXU:type_name -> commonmodule.ReadingMMXU
	39, // 47: generationmodule.GenerationReadingProfile.readingMessageInfo:type_name -> commonmodule.ReadingMessageInfo
	5,  // 48: generationmodule.GenerationReadingProfile.generatingUnit:type_name -> generationmodule.GeneratingUnit
	12, // 49: generationmodule.GenerationReadingProfile.generationReading:type_name -> generationmodule.GenerationReading
	40, // 50: generationmodule.GenerationPointStatus.blackStartEnabled:type_name -> commonmodule.StatusSPS
	40, // 51: generationmodule.GenerationPointStatus.frequencySetPointEnabled:type_name -> commonmodule.StatusSPS
	23, // 52: generationmodule.GenerationPointStatus.pctHzDroop:type_name -> google.protobuf.FloatValue
	23, // 53: generationmodule.GenerationPointStatus.pctVDroop:type_name -> google.protobuf.FloatValue
	24, // 54: generationmodule.GenerationPointStatus.rampRates:type_name -> commonmodule.RampRate
	40, // 55: generationmodule.GenerationPointStatus.reactivePwrSetPointEnabled:type_name -> commonmodule.StatusSPS
	40, // 56: generationmodule.GenerationPointStatus.realPwrSetPointEnabled:type_name -> commonmodule.StatusSPS
	25, // 57: generationmodule.GenerationPointStatus.state:type_name -> commonmodule.Optional_StateKind
	40, // 58: generationmodule.GenerationPointStatus.syncBackToGrid:type_name -> commonmodule.StatusSPS
	40, // 59: generationmodule.GenerationPointStatus.transToIslndOnGridLossEnabled:type_name -> commonmodule.StatusSPS
	40, // 60: generationmodule.GenerationPointStatus.voltageSetPointEnabled:type_name -> commonmodule.StatusSPS
	41, // 61: generationmodule.GenerationEventAndStatusZGEN.logicalNodeForEventAndStatus:type_name -> commonmodule.LogicalNodeForEventAndStatus
	40, // 62: generationmodule.GenerationEventAndStatusZGEN.AuxPwrSt:type_name -> commonmodule.StatusSPS
	42, // 63: generationmodule.GenerationEventAndStatusZGEN.DynamicTest:type_name -> commonmodule.ENS_DynamicTestKind
	40, // 64: generationmodule.GenerationEventAndStatusZGEN.EmgStop:type_name -> commonmodule.StatusSPS
	40, // 65: generationmodule.GenerationEventAndStatusZGEN.GnSynSt:type_name -> commonmodule.StatusSPS
	14, // 66: generationmodule.GenerationEventAndStatusZGEN.PointStatus:type_name -> generationmodule.GenerationPointStatus
	15, // 67: generationmodule.GenerationEventZGEN.generationEventAndStatusZGEN:type_name -> generationmodule.GenerationEventAndStatusZGEN
	43, // 68: generationmodule.GenerationEvent.eventValue:type_name -> commonmodule.EventValue
	16, // 69: generationmodule.GenerationEvent.generationEventZGEN:type_name -> generationmodule.GenerationEventZGEN
	44, // 70: generationmodule.GenerationEventProfile.eventMessageInfo:type_name -> commonmodule.EventMessageInfo
	5,  // 71: generationmodule.GenerationEventProfile.generatingUnit:type_name -> generationmodule.GeneratingUnit
	17, // 72: generationmodule.GenerationEventProfile.generationEvent:type_name -> generationmodule.GenerationEvent
	15, // 73: generationmodule.GenerationStatusZGEN.generationEventAndStatusZGEN:type_name -> generationmodule.GenerationEventAndStatusZGEN
	45, // 74: generationmodule.GenerationStatus.statusValue:type_name -> commonmodule.StatusValue
	19, // 75: generationmodule.GenerationStatus.generationStatusZGEN:type_name -> generationmodule.GenerationStatusZGEN
	46, // 76: generationmodule.GenerationStatusProfile.statusMessageInfo:type_name -> commonmodule.StatusMessageInfo
	5,  // 77: generationmodule.GenerationStatusProfile.generatingUnit:type_name -> generationmodule.GeneratingUnit
	20, // 78: generationmodule.GenerationStatusProfile.generationStatus:type_name -> generationmodule.GenerationStatus
	79, // [79:79] is the sub-list for method output_type
	79, // [79:79] is the sub-list for method input_type
	79, // [79:79] is the sub-list for extension type_name
	79, // [79:79] is the sub-list for extension extendee
	0,  // [0:79] is the sub-list for field type_name
}

func init() { file_generationmodule_generationmodule_proto_init() }
func file_generationmodule_generationmodule_proto_init() {
	if File_generationmodule_generationmodule_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_generationmodule_generationmodule_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GenerationPoint); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_generationmodule_generationmodule_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GenerationCSG); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_generationmodule_generationmodule_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GenerationControlScheduleFSCH); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_generationmodule_generationmodule_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GenerationControlFSCC); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_generationmodule_generationmodule_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GenerationControl); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_generationmodule_generationmodule_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GeneratingUnit); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_generationmodule_generationmodule_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GenerationControlProfile); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_generationmodule_generationmodule_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DroopParameter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_generationmodule_generationmodule_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RealPowerControl); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_generationmodule_generationmodule_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReactivePowerControl); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_generationmodule_generationmodule_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GenerationDiscreteControl); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_generationmodule_generationmodule_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GenerationDiscreteControlProfile); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_generationmodule_generationmodule_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GenerationReading); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_generationmodule_generationmodule_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GenerationReadingProfile); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_generationmodule_generationmodule_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GenerationPointStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_generationmodule_generationmodule_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GenerationEventAndStatusZGEN); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_generationmodule_generationmodule_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GenerationEventZGEN); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_generationmodule_generationmodule_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GenerationEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_generationmodule_generationmodule_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GenerationEventProfile); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_generationmodule_generationmodule_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GenerationStatusZGEN); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_generationmodule_generationmodule_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GenerationStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_generationmodule_generationmodule_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GenerationStatusProfile); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_generationmodule_generationmodule_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   22,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_generationmodule_generationmodule_proto_goTypes,
		DependencyIndexes: file_generationmodule_generationmodule_proto_depIdxs,
		MessageInfos:      file_generationmodule_generationmodule_proto_msgTypes,
	}.Build()
	File_generationmodule_generationmodule_proto = out.File
	file_generationmodule_generationmodule_proto_rawDesc = nil
	file_generationmodule_generationmodule_proto_goTypes = nil
	file_generationmodule_generationmodule_proto_depIdxs = nil
}
