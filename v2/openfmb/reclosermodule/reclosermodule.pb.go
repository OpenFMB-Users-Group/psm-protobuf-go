// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v4.22.2
// source: reclosermodule/reclosermodule.proto

// OpenFMB Operational Model (61850-CIM) (v2.1.0).eapx
// Monday, April 3, 2023 7:34:35 PM UTC

package reclosermodule

import (
	_ "gitlab.com/openfmb/psm/ops/protobuf/go-openfmb-ops-protobuf/v2/openfmb"
	commonmodule "gitlab.com/openfmb/psm/ops/protobuf/go-openfmb-ops-protobuf/v2/openfmb/commonmodule"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	wrapperspb "google.golang.org/protobuf/types/known/wrapperspb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Protection mode such as a group setting or pre-defined curve profile. It is usually pre-defined
// by a circuit segment service.
type RecloserDiscreteControlXCBR struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// UML inherited base object
	DiscreteControlXCBR *commonmodule.DiscreteControlXCBR `protobuf:"bytes,1,opt,name=discreteControlXCBR,proto3" json:"discreteControlXCBR,omitempty"`
}

func (x *RecloserDiscreteControlXCBR) Reset() {
	*x = RecloserDiscreteControlXCBR{}
	if protoimpl.UnsafeEnabled {
		mi := &file_reclosermodule_reclosermodule_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RecloserDiscreteControlXCBR) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecloserDiscreteControlXCBR) ProtoMessage() {}

func (x *RecloserDiscreteControlXCBR) ProtoReflect() protoreflect.Message {
	mi := &file_reclosermodule_reclosermodule_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecloserDiscreteControlXCBR.ProtoReflect.Descriptor instead.
func (*RecloserDiscreteControlXCBR) Descriptor() ([]byte, []int) {
	return file_reclosermodule_reclosermodule_proto_rawDescGZIP(), []int{0}
}

func (x *RecloserDiscreteControlXCBR) GetDiscreteControlXCBR() *commonmodule.DiscreteControlXCBR {
	if x != nil {
		return x.DiscreteControlXCBR
	}
	return nil
}

// Recloser discrete control
type RecloserDiscreteControl struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// UML inherited base object
	ControlValue *commonmodule.ControlValue `protobuf:"bytes,1,opt,name=controlValue,proto3" json:"controlValue,omitempty"`
	// MISSING DOCUMENTATION!!!
	Check *commonmodule.CheckConditions `protobuf:"bytes,2,opt,name=check,proto3" json:"check,omitempty"`
	// MISSING DOCUMENTATION!!!
	RecloserDiscreteControlXCBR *RecloserDiscreteControlXCBR `protobuf:"bytes,3,opt,name=recloserDiscreteControlXCBR,proto3" json:"recloserDiscreteControlXCBR,omitempty"`
}

func (x *RecloserDiscreteControl) Reset() {
	*x = RecloserDiscreteControl{}
	if protoimpl.UnsafeEnabled {
		mi := &file_reclosermodule_reclosermodule_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RecloserDiscreteControl) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecloserDiscreteControl) ProtoMessage() {}

func (x *RecloserDiscreteControl) ProtoReflect() protoreflect.Message {
	mi := &file_reclosermodule_reclosermodule_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecloserDiscreteControl.ProtoReflect.Descriptor instead.
func (*RecloserDiscreteControl) Descriptor() ([]byte, []int) {
	return file_reclosermodule_reclosermodule_proto_rawDescGZIP(), []int{1}
}

func (x *RecloserDiscreteControl) GetControlValue() *commonmodule.ControlValue {
	if x != nil {
		return x.ControlValue
	}
	return nil
}

func (x *RecloserDiscreteControl) GetCheck() *commonmodule.CheckConditions {
	if x != nil {
		return x.Check
	}
	return nil
}

func (x *RecloserDiscreteControl) GetRecloserDiscreteControlXCBR() *RecloserDiscreteControlXCBR {
	if x != nil {
		return x.RecloserDiscreteControlXCBR
	}
	return nil
}

// Pole-mounted fault interrupter with built-in phase and ground relays, current transformer (CT),
// and supplemental controls.
type Recloser struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// UML inherited base object
	ConductingEquipment *commonmodule.ConductingEquipment `protobuf:"bytes,1,opt,name=conductingEquipment,proto3" json:"conductingEquipment,omitempty"`
	// MISSING DOCUMENTATION!!!
	NormalOpen *wrapperspb.BoolValue `protobuf:"bytes,2,opt,name=normalOpen,proto3" json:"normalOpen,omitempty"`
}

func (x *Recloser) Reset() {
	*x = Recloser{}
	if protoimpl.UnsafeEnabled {
		mi := &file_reclosermodule_reclosermodule_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Recloser) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Recloser) ProtoMessage() {}

func (x *Recloser) ProtoReflect() protoreflect.Message {
	mi := &file_reclosermodule_reclosermodule_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Recloser.ProtoReflect.Descriptor instead.
func (*Recloser) Descriptor() ([]byte, []int) {
	return file_reclosermodule_reclosermodule_proto_rawDescGZIP(), []int{2}
}

func (x *Recloser) GetConductingEquipment() *commonmodule.ConductingEquipment {
	if x != nil {
		return x.ConductingEquipment
	}
	return nil
}

func (x *Recloser) GetNormalOpen() *wrapperspb.BoolValue {
	if x != nil {
		return x.NormalOpen
	}
	return nil
}

// Recloser control profile.  Instructs an end device (or an end device group) to perform a
// specified action.
type RecloserDiscreteControlProfile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// UML inherited base object
	ControlMessageInfo *commonmodule.ControlMessageInfo `protobuf:"bytes,1,opt,name=controlMessageInfo,proto3" json:"controlMessageInfo,omitempty"`
	// MISSING DOCUMENTATION!!!
	Recloser *Recloser `protobuf:"bytes,2,opt,name=recloser,proto3" json:"recloser,omitempty"`
	// MISSING DOCUMENTATION!!!
	RecloserDiscreteControl *RecloserDiscreteControl `protobuf:"bytes,3,opt,name=recloserDiscreteControl,proto3" json:"recloserDiscreteControl,omitempty"`
}

func (x *RecloserDiscreteControlProfile) Reset() {
	*x = RecloserDiscreteControlProfile{}
	if protoimpl.UnsafeEnabled {
		mi := &file_reclosermodule_reclosermodule_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RecloserDiscreteControlProfile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecloserDiscreteControlProfile) ProtoMessage() {}

func (x *RecloserDiscreteControlProfile) ProtoReflect() protoreflect.Message {
	mi := &file_reclosermodule_reclosermodule_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecloserDiscreteControlProfile.ProtoReflect.Descriptor instead.
func (*RecloserDiscreteControlProfile) Descriptor() ([]byte, []int) {
	return file_reclosermodule_reclosermodule_proto_rawDescGZIP(), []int{3}
}

func (x *RecloserDiscreteControlProfile) GetControlMessageInfo() *commonmodule.ControlMessageInfo {
	if x != nil {
		return x.ControlMessageInfo
	}
	return nil
}

func (x *RecloserDiscreteControlProfile) GetRecloser() *Recloser {
	if x != nil {
		return x.Recloser
	}
	return nil
}

func (x *RecloserDiscreteControlProfile) GetRecloserDiscreteControl() *RecloserDiscreteControl {
	if x != nil {
		return x.RecloserDiscreteControl
	}
	return nil
}

// Recloser event
type RecloserEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// UML inherited base object
	EventValue *commonmodule.EventValue `protobuf:"bytes,1,opt,name=eventValue,proto3" json:"eventValue,omitempty"`
	// MISSING DOCUMENTATION!!!
	StatusAndEventXCBR *commonmodule.StatusAndEventXCBR `protobuf:"bytes,2,opt,name=statusAndEventXCBR,proto3" json:"statusAndEventXCBR,omitempty"`
}

func (x *RecloserEvent) Reset() {
	*x = RecloserEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_reclosermodule_reclosermodule_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RecloserEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecloserEvent) ProtoMessage() {}

func (x *RecloserEvent) ProtoReflect() protoreflect.Message {
	mi := &file_reclosermodule_reclosermodule_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecloserEvent.ProtoReflect.Descriptor instead.
func (*RecloserEvent) Descriptor() ([]byte, []int) {
	return file_reclosermodule_reclosermodule_proto_rawDescGZIP(), []int{4}
}

func (x *RecloserEvent) GetEventValue() *commonmodule.EventValue {
	if x != nil {
		return x.EventValue
	}
	return nil
}

func (x *RecloserEvent) GetStatusAndEventXCBR() *commonmodule.StatusAndEventXCBR {
	if x != nil {
		return x.StatusAndEventXCBR
	}
	return nil
}

// Recloser event profile
type RecloserEventProfile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// UML inherited base object
	EventMessageInfo *commonmodule.EventMessageInfo `protobuf:"bytes,1,opt,name=eventMessageInfo,proto3" json:"eventMessageInfo,omitempty"`
	// MISSING DOCUMENTATION!!!
	Recloser *Recloser `protobuf:"bytes,2,opt,name=recloser,proto3" json:"recloser,omitempty"`
	// MISSING DOCUMENTATION!!!
	RecloserEvent *RecloserEvent `protobuf:"bytes,3,opt,name=recloserEvent,proto3" json:"recloserEvent,omitempty"`
}

func (x *RecloserEventProfile) Reset() {
	*x = RecloserEventProfile{}
	if protoimpl.UnsafeEnabled {
		mi := &file_reclosermodule_reclosermodule_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RecloserEventProfile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecloserEventProfile) ProtoMessage() {}

func (x *RecloserEventProfile) ProtoReflect() protoreflect.Message {
	mi := &file_reclosermodule_reclosermodule_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecloserEventProfile.ProtoReflect.Descriptor instead.
func (*RecloserEventProfile) Descriptor() ([]byte, []int) {
	return file_reclosermodule_reclosermodule_proto_rawDescGZIP(), []int{5}
}

func (x *RecloserEventProfile) GetEventMessageInfo() *commonmodule.EventMessageInfo {
	if x != nil {
		return x.EventMessageInfo
	}
	return nil
}

func (x *RecloserEventProfile) GetRecloser() *Recloser {
	if x != nil {
		return x.Recloser
	}
	return nil
}

func (x *RecloserEventProfile) GetRecloserEvent() *RecloserEvent {
	if x != nil {
		return x.RecloserEvent
	}
	return nil
}

// Recloser reading value
type RecloserReading struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// UML inherited base object
	ConductingEquipmentTerminalReading *commonmodule.ConductingEquipmentTerminalReading `protobuf:"bytes,1,opt,name=conductingEquipmentTerminalReading,proto3" json:"conductingEquipmentTerminalReading,omitempty"`
	// MISSING DOCUMENTATION!!!
	DiffReadingMMXU *commonmodule.ReadingMMXU `protobuf:"bytes,2,opt,name=diffReadingMMXU,proto3" json:"diffReadingMMXU,omitempty"`
	// MISSING DOCUMENTATION!!!
	PhaseMMTN *commonmodule.PhaseMMTN `protobuf:"bytes,3,opt,name=phaseMMTN,proto3" json:"phaseMMTN,omitempty"`
	// MISSING DOCUMENTATION!!!
	ReadingMMTR *commonmodule.ReadingMMTR `protobuf:"bytes,4,opt,name=readingMMTR,proto3" json:"readingMMTR,omitempty"`
	// MISSING DOCUMENTATION!!!
	ReadingMMXU *commonmodule.ReadingMMXU `protobuf:"bytes,5,opt,name=readingMMXU,proto3" json:"readingMMXU,omitempty"`
}

func (x *RecloserReading) Reset() {
	*x = RecloserReading{}
	if protoimpl.UnsafeEnabled {
		mi := &file_reclosermodule_reclosermodule_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RecloserReading) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecloserReading) ProtoMessage() {}

func (x *RecloserReading) ProtoReflect() protoreflect.Message {
	mi := &file_reclosermodule_reclosermodule_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecloserReading.ProtoReflect.Descriptor instead.
func (*RecloserReading) Descriptor() ([]byte, []int) {
	return file_reclosermodule_reclosermodule_proto_rawDescGZIP(), []int{6}
}

func (x *RecloserReading) GetConductingEquipmentTerminalReading() *commonmodule.ConductingEquipmentTerminalReading {
	if x != nil {
		return x.ConductingEquipmentTerminalReading
	}
	return nil
}

func (x *RecloserReading) GetDiffReadingMMXU() *commonmodule.ReadingMMXU {
	if x != nil {
		return x.DiffReadingMMXU
	}
	return nil
}

func (x *RecloserReading) GetPhaseMMTN() *commonmodule.PhaseMMTN {
	if x != nil {
		return x.PhaseMMTN
	}
	return nil
}

func (x *RecloserReading) GetReadingMMTR() *commonmodule.ReadingMMTR {
	if x != nil {
		return x.ReadingMMTR
	}
	return nil
}

func (x *RecloserReading) GetReadingMMXU() *commonmodule.ReadingMMXU {
	if x != nil {
		return x.ReadingMMXU
	}
	return nil
}

// Recloser reading profile
type RecloserReadingProfile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// UML inherited base object
	ReadingMessageInfo *commonmodule.ReadingMessageInfo `protobuf:"bytes,1,opt,name=readingMessageInfo,proto3" json:"readingMessageInfo,omitempty"`
	// MISSING DOCUMENTATION!!!
	Recloser *Recloser `protobuf:"bytes,2,opt,name=recloser,proto3" json:"recloser,omitempty"`
	// MISSING DOCUMENTATION!!!
	RecloserReading []*RecloserReading `protobuf:"bytes,3,rep,name=recloserReading,proto3" json:"recloserReading,omitempty"`
}

func (x *RecloserReadingProfile) Reset() {
	*x = RecloserReadingProfile{}
	if protoimpl.UnsafeEnabled {
		mi := &file_reclosermodule_reclosermodule_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RecloserReadingProfile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecloserReadingProfile) ProtoMessage() {}

func (x *RecloserReadingProfile) ProtoReflect() protoreflect.Message {
	mi := &file_reclosermodule_reclosermodule_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecloserReadingProfile.ProtoReflect.Descriptor instead.
func (*RecloserReadingProfile) Descriptor() ([]byte, []int) {
	return file_reclosermodule_reclosermodule_proto_rawDescGZIP(), []int{7}
}

func (x *RecloserReadingProfile) GetReadingMessageInfo() *commonmodule.ReadingMessageInfo {
	if x != nil {
		return x.ReadingMessageInfo
	}
	return nil
}

func (x *RecloserReadingProfile) GetRecloser() *Recloser {
	if x != nil {
		return x.Recloser
	}
	return nil
}

func (x *RecloserReadingProfile) GetRecloserReading() []*RecloserReading {
	if x != nil {
		return x.RecloserReading
	}
	return nil
}

// Recloser status
type RecloserStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// UML inherited base object
	StatusValue *commonmodule.StatusValue `protobuf:"bytes,1,opt,name=statusValue,proto3" json:"statusValue,omitempty"`
	// MISSING DOCUMENTATION!!!
	StatusAndEventXCBR *commonmodule.StatusAndEventXCBR `protobuf:"bytes,2,opt,name=statusAndEventXCBR,proto3" json:"statusAndEventXCBR,omitempty"`
}

func (x *RecloserStatus) Reset() {
	*x = RecloserStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_reclosermodule_reclosermodule_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RecloserStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecloserStatus) ProtoMessage() {}

func (x *RecloserStatus) ProtoReflect() protoreflect.Message {
	mi := &file_reclosermodule_reclosermodule_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecloserStatus.ProtoReflect.Descriptor instead.
func (*RecloserStatus) Descriptor() ([]byte, []int) {
	return file_reclosermodule_reclosermodule_proto_rawDescGZIP(), []int{8}
}

func (x *RecloserStatus) GetStatusValue() *commonmodule.StatusValue {
	if x != nil {
		return x.StatusValue
	}
	return nil
}

func (x *RecloserStatus) GetStatusAndEventXCBR() *commonmodule.StatusAndEventXCBR {
	if x != nil {
		return x.StatusAndEventXCBR
	}
	return nil
}

// Recloser status profile
type RecloserStatusProfile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// UML inherited base object
	StatusMessageInfo *commonmodule.StatusMessageInfo `protobuf:"bytes,1,opt,name=statusMessageInfo,proto3" json:"statusMessageInfo,omitempty"`
	// MISSING DOCUMENTATION!!!
	Recloser *Recloser `protobuf:"bytes,2,opt,name=recloser,proto3" json:"recloser,omitempty"`
	// MISSING DOCUMENTATION!!!
	RecloserStatus *RecloserStatus `protobuf:"bytes,3,opt,name=recloserStatus,proto3" json:"recloserStatus,omitempty"`
}

func (x *RecloserStatusProfile) Reset() {
	*x = RecloserStatusProfile{}
	if protoimpl.UnsafeEnabled {
		mi := &file_reclosermodule_reclosermodule_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RecloserStatusProfile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecloserStatusProfile) ProtoMessage() {}

func (x *RecloserStatusProfile) ProtoReflect() protoreflect.Message {
	mi := &file_reclosermodule_reclosermodule_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecloserStatusProfile.ProtoReflect.Descriptor instead.
func (*RecloserStatusProfile) Descriptor() ([]byte, []int) {
	return file_reclosermodule_reclosermodule_proto_rawDescGZIP(), []int{9}
}

func (x *RecloserStatusProfile) GetStatusMessageInfo() *commonmodule.StatusMessageInfo {
	if x != nil {
		return x.StatusMessageInfo
	}
	return nil
}

func (x *RecloserStatusProfile) GetRecloser() *Recloser {
	if x != nil {
		return x.Recloser
	}
	return nil
}

func (x *RecloserStatusProfile) GetRecloserStatus() *RecloserStatus {
	if x != nil {
		return x.RecloserStatus
	}
	return nil
}

var File_reclosermodule_reclosermodule_proto protoreflect.FileDescriptor

var file_reclosermodule_reclosermodule_proto_rawDesc = []byte{
	0x0a, 0x23, 0x72, 0x65, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x72, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65,
	0x2f, 0x72, 0x65, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x72, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0e, 0x72, 0x65, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x72, 0x6d,
	0x6f, 0x64, 0x75, 0x6c, 0x65, 0x1a, 0x09, 0x75, 0x6d, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2f, 0x77, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x1f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2f, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0x78, 0x0a, 0x1b, 0x52, 0x65, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x72, 0x44, 0x69, 0x73,
	0x63, 0x72, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x58, 0x43, 0x42, 0x52,
	0x12, 0x59, 0x0a, 0x13, 0x64, 0x69, 0x73, 0x63, 0x72, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x74,
	0x72, 0x6f, 0x6c, 0x58, 0x43, 0x42, 0x52, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x44, 0x69, 0x73,
	0x63, 0x72, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x58, 0x43, 0x42, 0x52,
	0x42, 0x04, 0x80, 0xb5, 0x18, 0x01, 0x52, 0x13, 0x64, 0x69, 0x73, 0x63, 0x72, 0x65, 0x74, 0x65,
	0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x58, 0x43, 0x42, 0x52, 0x22, 0x83, 0x02, 0x0a, 0x17,
	0x52, 0x65, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x72, 0x44, 0x69, 0x73, 0x63, 0x72, 0x65, 0x74, 0x65,
	0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x12, 0x44, 0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x72,
	0x6f, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x43, 0x6f, 0x6e,
	0x74, 0x72, 0x6f, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x04, 0x80, 0xb5, 0x18, 0x01, 0x52,
	0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x33, 0x0a,
	0x05, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x43, 0x68, 0x65, 0x63,
	0x6b, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x05, 0x63, 0x68, 0x65,
	0x63, 0x6b, 0x12, 0x6d, 0x0a, 0x1b, 0x72, 0x65, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x72, 0x44, 0x69,
	0x73, 0x63, 0x72, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x58, 0x43, 0x42,
	0x52, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x72, 0x65, 0x63, 0x6c, 0x6f, 0x73,
	0x65, 0x72, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x52, 0x65, 0x63, 0x6c, 0x6f, 0x73, 0x65,
	0x72, 0x44, 0x69, 0x73, 0x63, 0x72, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c,
	0x58, 0x43, 0x42, 0x52, 0x52, 0x1b, 0x72, 0x65, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x72, 0x44, 0x69,
	0x73, 0x63, 0x72, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x58, 0x43, 0x42,
	0x52, 0x22, 0xa1, 0x01, 0x0a, 0x08, 0x52, 0x65, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x72, 0x12, 0x59,
	0x0a, 0x13, 0x63, 0x6f, 0x6e, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6e, 0x67, 0x45, 0x71, 0x75, 0x69,
	0x70, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x43, 0x6f, 0x6e, 0x64, 0x75,
	0x63, 0x74, 0x69, 0x6e, 0x67, 0x45, 0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x42, 0x04,
	0x80, 0xb5, 0x18, 0x01, 0x52, 0x13, 0x63, 0x6f, 0x6e, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6e, 0x67,
	0x45, 0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x3a, 0x0a, 0x0a, 0x6e, 0x6f, 0x72,
	0x6d, 0x61, 0x6c, 0x4f, 0x70, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x42, 0x6f, 0x6f, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0a, 0x6e, 0x6f, 0x72, 0x6d, 0x61,
	0x6c, 0x4f, 0x70, 0x65, 0x6e, 0x22, 0xab, 0x02, 0x0a, 0x1e, 0x52, 0x65, 0x63, 0x6c, 0x6f, 0x73,
	0x65, 0x72, 0x44, 0x69, 0x73, 0x63, 0x72, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f,
	0x6c, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x56, 0x0a, 0x12, 0x63, 0x6f, 0x6e, 0x74,
	0x72, 0x6f, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x6d, 0x6f, 0x64,
	0x75, 0x6c, 0x65, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x04, 0x80, 0xb5, 0x18, 0x01, 0x52, 0x12, 0x63, 0x6f,
	0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x3e, 0x0a, 0x08, 0x72, 0x65, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x18, 0x2e, 0x72, 0x65, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x72, 0x6d, 0x6f, 0x64,
	0x75, 0x6c, 0x65, 0x2e, 0x52, 0x65, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x72, 0x42, 0x08, 0x88, 0xb5,
	0x18, 0x01, 0x90, 0xb5, 0x18, 0x01, 0x52, 0x08, 0x72, 0x65, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x72,
	0x12, 0x6b, 0x0a, 0x17, 0x72, 0x65, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x72, 0x44, 0x69, 0x73, 0x63,
	0x72, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x27, 0x2e, 0x72, 0x65, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x72, 0x6d, 0x6f, 0x64, 0x75,
	0x6c, 0x65, 0x2e, 0x52, 0x65, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x72, 0x44, 0x69, 0x73, 0x63, 0x72,
	0x65, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x42, 0x08, 0x88, 0xb5, 0x18, 0x01,
	0x90, 0xb5, 0x18, 0x01, 0x52, 0x17, 0x72, 0x65, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x72, 0x44, 0x69,
	0x73, 0x63, 0x72, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x3a, 0x04, 0xc0,
	0xf3, 0x18, 0x01, 0x22, 0xa1, 0x01, 0x0a, 0x0d, 0x52, 0x65, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x72,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x3e, 0x0a, 0x0a, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x42, 0x04, 0x80, 0xb5, 0x18, 0x01, 0x52, 0x0a, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x50, 0x0a, 0x12, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x41,
	0x6e, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x58, 0x43, 0x42, 0x52, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x20, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65,
	0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x41, 0x6e, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x58,
	0x43, 0x42, 0x52, 0x52, 0x12, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x41, 0x6e, 0x64, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x58, 0x43, 0x42, 0x52, 0x22, 0xfd, 0x01, 0x0a, 0x14, 0x52, 0x65, 0x63, 0x6c,
	0x6f, 0x73, 0x65, 0x72, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65,
	0x12, 0x50, 0x0a, 0x10, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x49, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x04, 0x80, 0xb5, 0x18, 0x01,
	0x52, 0x10, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x3e, 0x0a, 0x08, 0x72, 0x65, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x72, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x72, 0x65, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x72, 0x6d,
	0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x52, 0x65, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x72, 0x42, 0x08,
	0x88, 0xb5, 0x18, 0x01, 0x90, 0xb5, 0x18, 0x01, 0x52, 0x08, 0x72, 0x65, 0x63, 0x6c, 0x6f, 0x73,
	0x65, 0x72, 0x12, 0x4d, 0x0a, 0x0d, 0x72, 0x65, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x72, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x72, 0x65, 0x63, 0x6c,
	0x6f, 0x73, 0x65, 0x72, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x52, 0x65, 0x63, 0x6c, 0x6f,
	0x73, 0x65, 0x72, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x42, 0x08, 0x88, 0xb5, 0x18, 0x01, 0x90, 0xb5,
	0x18, 0x01, 0x52, 0x0d, 0x72, 0x65, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x72, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x3a, 0x04, 0xc0, 0xf3, 0x18, 0x01, 0x22, 0x90, 0x03, 0x0a, 0x0f, 0x52, 0x65, 0x63, 0x6c,
	0x6f, 0x73, 0x65, 0x72, 0x52, 0x65, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x12, 0x86, 0x01, 0x0a, 0x22,
	0x63, 0x6f, 0x6e, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6e, 0x67, 0x45, 0x71, 0x75, 0x69, 0x70, 0x6d,
	0x65, 0x6e, 0x74, 0x54, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x6c, 0x52, 0x65, 0x61, 0x64, 0x69,
	0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x43, 0x6f, 0x6e, 0x64, 0x75, 0x63, 0x74, 0x69,
	0x6e, 0x67, 0x45, 0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x65, 0x72, 0x6d, 0x69,
	0x6e, 0x61, 0x6c, 0x52, 0x65, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x42, 0x04, 0x80, 0xb5, 0x18, 0x01,
	0x52, 0x22, 0x63, 0x6f, 0x6e, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6e, 0x67, 0x45, 0x71, 0x75, 0x69,
	0x70, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x6c, 0x52, 0x65, 0x61,
	0x64, 0x69, 0x6e, 0x67, 0x12, 0x43, 0x0a, 0x0f, 0x64, 0x69, 0x66, 0x66, 0x52, 0x65, 0x61, 0x64,
	0x69, 0x6e, 0x67, 0x4d, 0x4d, 0x58, 0x55, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x52, 0x65, 0x61,
	0x64, 0x69, 0x6e, 0x67, 0x4d, 0x4d, 0x58, 0x55, 0x52, 0x0f, 0x64, 0x69, 0x66, 0x66, 0x52, 0x65,
	0x61, 0x64, 0x69, 0x6e, 0x67, 0x4d, 0x4d, 0x58, 0x55, 0x12, 0x35, 0x0a, 0x09, 0x70, 0x68, 0x61,
	0x73, 0x65, 0x4d, 0x4d, 0x54, 0x4e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x50, 0x68, 0x61, 0x73,
	0x65, 0x4d, 0x4d, 0x54, 0x4e, 0x52, 0x09, 0x70, 0x68, 0x61, 0x73, 0x65, 0x4d, 0x4d, 0x54, 0x4e,
	0x12, 0x3b, 0x0a, 0x0b, 0x72, 0x65, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x4d, 0x4d, 0x54, 0x52, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x6d, 0x6f,
	0x64, 0x75, 0x6c, 0x65, 0x2e, 0x52, 0x65, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x4d, 0x4d, 0x54, 0x52,
	0x52, 0x0b, 0x72, 0x65, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x4d, 0x4d, 0x54, 0x52, 0x12, 0x3b, 0x0a,
	0x0b, 0x72, 0x65, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x4d, 0x4d, 0x58, 0x55, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x19, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x6d, 0x6f, 0x64, 0x75, 0x6c,
	0x65, 0x2e, 0x52, 0x65, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x4d, 0x4d, 0x58, 0x55, 0x52, 0x0b, 0x72,
	0x65, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x4d, 0x4d, 0x58, 0x55, 0x22, 0x8f, 0x02, 0x0a, 0x16, 0x52,
	0x65, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x72, 0x52, 0x65, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x50, 0x72,
	0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x56, 0x0a, 0x12, 0x72, 0x65, 0x61, 0x64, 0x69, 0x6e, 0x67,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x20, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65,
	0x2e, 0x52, 0x65, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49,
	0x6e, 0x66, 0x6f, 0x42, 0x04, 0x80, 0xb5, 0x18, 0x01, 0x52, 0x12, 0x72, 0x65, 0x61, 0x64, 0x69,
	0x6e, 0x67, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x3e, 0x0a,
	0x08, 0x72, 0x65, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x18, 0x2e, 0x72, 0x65, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x72, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65,
	0x2e, 0x52, 0x65, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x72, 0x42, 0x08, 0x88, 0xb5, 0x18, 0x01, 0x90,
	0xb5, 0x18, 0x01, 0x52, 0x08, 0x72, 0x65, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x72, 0x12, 0x57, 0x0a,
	0x0f, 0x72, 0x65, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x72, 0x52, 0x65, 0x61, 0x64, 0x69, 0x6e, 0x67,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x72, 0x65, 0x63, 0x6c, 0x6f, 0x73, 0x65,
	0x72, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x52, 0x65, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x72,
	0x52, 0x65, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x42, 0x0c, 0x88, 0xb5, 0x18, 0x01, 0x90, 0xb5, 0x18,
	0x01, 0x98, 0xb5, 0x18, 0x02, 0x52, 0x0f, 0x72, 0x65, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x72, 0x52,
	0x65, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x3a, 0x04, 0xc0, 0xf3, 0x18, 0x01, 0x22, 0xa5, 0x01, 0x0a,
	0x0e, 0x52, 0x65, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x41, 0x0a, 0x0b, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x6d, 0x6f, 0x64,
	0x75, 0x6c, 0x65, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x42,
	0x04, 0x80, 0xb5, 0x18, 0x01, 0x52, 0x0b, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x12, 0x50, 0x0a, 0x12, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x41, 0x6e, 0x64, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x58, 0x43, 0x42, 0x52, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x41, 0x6e, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x58, 0x43, 0x42, 0x52,
	0x52, 0x12, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x41, 0x6e, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x58, 0x43, 0x42, 0x52, 0x22, 0x84, 0x02, 0x0a, 0x15, 0x52, 0x65, 0x63, 0x6c, 0x6f, 0x73, 0x65,
	0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x53,
	0x0a, 0x11, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49,
	0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x04, 0x80, 0xb5, 0x18, 0x01,
	0x52, 0x11, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x3e, 0x0a, 0x08, 0x72, 0x65, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x72, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x72, 0x65, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x72,
	0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x52, 0x65, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x72, 0x42,
	0x08, 0x88, 0xb5, 0x18, 0x01, 0x90, 0xb5, 0x18, 0x01, 0x52, 0x08, 0x72, 0x65, 0x63, 0x6c, 0x6f,
	0x73, 0x65, 0x72, 0x12, 0x50, 0x0a, 0x0e, 0x72, 0x65, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x72, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x72, 0x65,
	0x63, 0x6c, 0x6f, 0x73, 0x65, 0x72, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x52, 0x65, 0x63,
	0x6c, 0x6f, 0x73, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x42, 0x08, 0x88, 0xb5, 0x18,
	0x01, 0x90, 0xb5, 0x18, 0x01, 0x52, 0x0e, 0x72, 0x65, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x72, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x3a, 0x04, 0xc0, 0xf3, 0x18, 0x01, 0x42, 0x8a, 0x01, 0x0a, 0x16,
	0x6f, 0x70, 0x65, 0x6e, 0x66, 0x6d, 0x62, 0x2e, 0x72, 0x65, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x72,
	0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x50, 0x01, 0x5a, 0x55, 0x67, 0x69, 0x74, 0x6c, 0x61, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6f, 0x70, 0x65, 0x6e, 0x66, 0x6d, 0x62, 0x2f, 0x70, 0x73, 0x6d,
	0x2f, 0x6f, 0x70, 0x73, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x67, 0x6f,
	0x2d, 0x6f, 0x70, 0x65, 0x6e, 0x66, 0x6d, 0x62, 0x2d, 0x6f, 0x70, 0x73, 0x2d, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x76, 0x32, 0x2f, 0x6f, 0x70, 0x65, 0x6e, 0x66, 0x6d, 0x62,
	0x2f, 0x72, 0x65, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x72, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0xaa,
	0x02, 0x16, 0x6f, 0x70, 0x65, 0x6e, 0x66, 0x6d, 0x62, 0x2e, 0x72, 0x65, 0x63, 0x6c, 0x6f, 0x73,
	0x65, 0x72, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_reclosermodule_reclosermodule_proto_rawDescOnce sync.Once
	file_reclosermodule_reclosermodule_proto_rawDescData = file_reclosermodule_reclosermodule_proto_rawDesc
)

func file_reclosermodule_reclosermodule_proto_rawDescGZIP() []byte {
	file_reclosermodule_reclosermodule_proto_rawDescOnce.Do(func() {
		file_reclosermodule_reclosermodule_proto_rawDescData = protoimpl.X.CompressGZIP(file_reclosermodule_reclosermodule_proto_rawDescData)
	})
	return file_reclosermodule_reclosermodule_proto_rawDescData
}

var file_reclosermodule_reclosermodule_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_reclosermodule_reclosermodule_proto_goTypes = []interface{}{
	(*RecloserDiscreteControlXCBR)(nil),                     // 0: reclosermodule.RecloserDiscreteControlXCBR
	(*RecloserDiscreteControl)(nil),                         // 1: reclosermodule.RecloserDiscreteControl
	(*Recloser)(nil),                                        // 2: reclosermodule.Recloser
	(*RecloserDiscreteControlProfile)(nil),                  // 3: reclosermodule.RecloserDiscreteControlProfile
	(*RecloserEvent)(nil),                                   // 4: reclosermodule.RecloserEvent
	(*RecloserEventProfile)(nil),                            // 5: reclosermodule.RecloserEventProfile
	(*RecloserReading)(nil),                                 // 6: reclosermodule.RecloserReading
	(*RecloserReadingProfile)(nil),                          // 7: reclosermodule.RecloserReadingProfile
	(*RecloserStatus)(nil),                                  // 8: reclosermodule.RecloserStatus
	(*RecloserStatusProfile)(nil),                           // 9: reclosermodule.RecloserStatusProfile
	(*commonmodule.DiscreteControlXCBR)(nil),                // 10: commonmodule.DiscreteControlXCBR
	(*commonmodule.ControlValue)(nil),                       // 11: commonmodule.ControlValue
	(*commonmodule.CheckConditions)(nil),                    // 12: commonmodule.CheckConditions
	(*commonmodule.ConductingEquipment)(nil),                // 13: commonmodule.ConductingEquipment
	(*wrapperspb.BoolValue)(nil),                            // 14: google.protobuf.BoolValue
	(*commonmodule.ControlMessageInfo)(nil),                 // 15: commonmodule.ControlMessageInfo
	(*commonmodule.EventValue)(nil),                         // 16: commonmodule.EventValue
	(*commonmodule.StatusAndEventXCBR)(nil),                 // 17: commonmodule.StatusAndEventXCBR
	(*commonmodule.EventMessageInfo)(nil),                   // 18: commonmodule.EventMessageInfo
	(*commonmodule.ConductingEquipmentTerminalReading)(nil), // 19: commonmodule.ConductingEquipmentTerminalReading
	(*commonmodule.ReadingMMXU)(nil),                        // 20: commonmodule.ReadingMMXU
	(*commonmodule.PhaseMMTN)(nil),                          // 21: commonmodule.PhaseMMTN
	(*commonmodule.ReadingMMTR)(nil),                        // 22: commonmodule.ReadingMMTR
	(*commonmodule.ReadingMessageInfo)(nil),                 // 23: commonmodule.ReadingMessageInfo
	(*commonmodule.StatusValue)(nil),                        // 24: commonmodule.StatusValue
	(*commonmodule.StatusMessageInfo)(nil),                  // 25: commonmodule.StatusMessageInfo
}
var file_reclosermodule_reclosermodule_proto_depIdxs = []int32{
	10, // 0: reclosermodule.RecloserDiscreteControlXCBR.discreteControlXCBR:type_name -> commonmodule.DiscreteControlXCBR
	11, // 1: reclosermodule.RecloserDiscreteControl.controlValue:type_name -> commonmodule.ControlValue
	12, // 2: reclosermodule.RecloserDiscreteControl.check:type_name -> commonmodule.CheckConditions
	0,  // 3: reclosermodule.RecloserDiscreteControl.recloserDiscreteControlXCBR:type_name -> reclosermodule.RecloserDiscreteControlXCBR
	13, // 4: reclosermodule.Recloser.conductingEquipment:type_name -> commonmodule.ConductingEquipment
	14, // 5: reclosermodule.Recloser.normalOpen:type_name -> google.protobuf.BoolValue
	15, // 6: reclosermodule.RecloserDiscreteControlProfile.controlMessageInfo:type_name -> commonmodule.ControlMessageInfo
	2,  // 7: reclosermodule.RecloserDiscreteControlProfile.recloser:type_name -> reclosermodule.Recloser
	1,  // 8: reclosermodule.RecloserDiscreteControlProfile.recloserDiscreteControl:type_name -> reclosermodule.RecloserDiscreteControl
	16, // 9: reclosermodule.RecloserEvent.eventValue:type_name -> commonmodule.EventValue
	17, // 10: reclosermodule.RecloserEvent.statusAndEventXCBR:type_name -> commonmodule.StatusAndEventXCBR
	18, // 11: reclosermodule.RecloserEventProfile.eventMessageInfo:type_name -> commonmodule.EventMessageInfo
	2,  // 12: reclosermodule.RecloserEventProfile.recloser:type_name -> reclosermodule.Recloser
	4,  // 13: reclosermodule.RecloserEventProfile.recloserEvent:type_name -> reclosermodule.RecloserEvent
	19, // 14: reclosermodule.RecloserReading.conductingEquipmentTerminalReading:type_name -> commonmodule.ConductingEquipmentTerminalReading
	20, // 15: reclosermodule.RecloserReading.diffReadingMMXU:type_name -> commonmodule.ReadingMMXU
	21, // 16: reclosermodule.RecloserReading.phaseMMTN:type_name -> commonmodule.PhaseMMTN
	22, // 17: reclosermodule.RecloserReading.readingMMTR:type_name -> commonmodule.ReadingMMTR
	20, // 18: reclosermodule.RecloserReading.readingMMXU:type_name -> commonmodule.ReadingMMXU
	23, // 19: reclosermodule.RecloserReadingProfile.readingMessageInfo:type_name -> commonmodule.ReadingMessageInfo
	2,  // 20: reclosermodule.RecloserReadingProfile.recloser:type_name -> reclosermodule.Recloser
	6,  // 21: reclosermodule.RecloserReadingProfile.recloserReading:type_name -> reclosermodule.RecloserReading
	24, // 22: reclosermodule.RecloserStatus.statusValue:type_name -> commonmodule.StatusValue
	17, // 23: reclosermodule.RecloserStatus.statusAndEventXCBR:type_name -> commonmodule.StatusAndEventXCBR
	25, // 24: reclosermodule.RecloserStatusProfile.statusMessageInfo:type_name -> commonmodule.StatusMessageInfo
	2,  // 25: reclosermodule.RecloserStatusProfile.recloser:type_name -> reclosermodule.Recloser
	8,  // 26: reclosermodule.RecloserStatusProfile.recloserStatus:type_name -> reclosermodule.RecloserStatus
	27, // [27:27] is the sub-list for method output_type
	27, // [27:27] is the sub-list for method input_type
	27, // [27:27] is the sub-list for extension type_name
	27, // [27:27] is the sub-list for extension extendee
	0,  // [0:27] is the sub-list for field type_name
}

func init() { file_reclosermodule_reclosermodule_proto_init() }
func file_reclosermodule_reclosermodule_proto_init() {
	if File_reclosermodule_reclosermodule_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_reclosermodule_reclosermodule_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RecloserDiscreteControlXCBR); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_reclosermodule_reclosermodule_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RecloserDiscreteControl); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_reclosermodule_reclosermodule_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Recloser); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_reclosermodule_reclosermodule_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RecloserDiscreteControlProfile); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_reclosermodule_reclosermodule_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RecloserEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_reclosermodule_reclosermodule_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RecloserEventProfile); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_reclosermodule_reclosermodule_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RecloserReading); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_reclosermodule_reclosermodule_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RecloserReadingProfile); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_reclosermodule_reclosermodule_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RecloserStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_reclosermodule_reclosermodule_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RecloserStatusProfile); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_reclosermodule_reclosermodule_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_reclosermodule_reclosermodule_proto_goTypes,
		DependencyIndexes: file_reclosermodule_reclosermodule_proto_depIdxs,
		MessageInfos:      file_reclosermodule_reclosermodule_proto_msgTypes,
	}.Build()
	File_reclosermodule_reclosermodule_proto = out.File
	file_reclosermodule_reclosermodule_proto_rawDesc = nil
	file_reclosermodule_reclosermodule_proto_goTypes = nil
	file_reclosermodule_reclosermodule_proto_depIdxs = nil
}
