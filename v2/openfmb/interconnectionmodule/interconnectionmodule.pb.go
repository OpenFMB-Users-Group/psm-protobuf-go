// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v4.22.2
// source: interconnectionmodule/interconnectionmodule.proto

// OpenFMB Operational Model (61850-CIM) (v2.1.0).eapx
// Monday, April 3, 2023 7:34:35 PM UTC

// This module is an early alpha release and subject to change. It is NOT part of the gateway test
// procedure for OpenFMB certification.

package interconnectionmodule

import (
	_ "gitlab.com/openfmb/psm/ops/protobuf/go-openfmb-ops-protobuf/v2/openfmb"
	commonmodule "gitlab.com/openfmb/psm/ops/protobuf/go-openfmb-ops-protobuf/v2/openfmb/commonmodule"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	wrapperspb "google.golang.org/protobuf/types/known/wrapperspb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Point definition (Point)
type InterconnectionPoint struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Black start enable
	BlackStartEnabled *commonmodule.ControlSPC `protobuf:"bytes,1,opt,name=blackStartEnabled,proto3" json:"blackStartEnabled,omitempty"`
	// Enable frequency set point
	FrequencySetPointEnabled *commonmodule.ControlSPC `protobuf:"bytes,2,opt,name=frequencySetPointEnabled,proto3" json:"frequencySetPointEnabled,omitempty"`
	// Island control
	Island *commonmodule.ControlSPC `protobuf:"bytes,3,opt,name=island,proto3" json:"island,omitempty"`
	// Black start enable
	PctHzDroop *wrapperspb.FloatValue `protobuf:"bytes,4,opt,name=pctHzDroop,proto3" json:"pctHzDroop,omitempty"`
	// Black start enable
	PctVDroop *wrapperspb.FloatValue `protobuf:"bytes,5,opt,name=pctVDroop,proto3" json:"pctVDroop,omitempty"`
	// Ramp rates
	RampRates *commonmodule.RampRate `protobuf:"bytes,6,opt,name=rampRates,proto3" json:"rampRates,omitempty"`
	// Enable reactive power set point
	ReactivePwrSetPointEnabled *commonmodule.ControlSPC `protobuf:"bytes,7,opt,name=reactivePwrSetPointEnabled,proto3" json:"reactivePwrSetPointEnabled,omitempty"`
	// Enable real power set point
	RealPwrSetPointEnabled *commonmodule.ControlSPC `protobuf:"bytes,8,opt,name=realPwrSetPointEnabled,proto3" json:"realPwrSetPointEnabled,omitempty"`
	// Enable voltage set point
	VoltageSetPointEnabled *commonmodule.ControlSPC `protobuf:"bytes,9,opt,name=voltageSetPointEnabled,proto3" json:"voltageSetPointEnabled,omitempty"`
	// Start time
	StartTime *commonmodule.Timestamp `protobuf:"bytes,10,opt,name=startTime,proto3" json:"startTime,omitempty"`
}

func (x *InterconnectionPoint) Reset() {
	*x = InterconnectionPoint{}
	if protoimpl.UnsafeEnabled {
		mi := &file_interconnectionmodule_interconnectionmodule_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InterconnectionPoint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InterconnectionPoint) ProtoMessage() {}

func (x *InterconnectionPoint) ProtoReflect() protoreflect.Message {
	mi := &file_interconnectionmodule_interconnectionmodule_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InterconnectionPoint.ProtoReflect.Descriptor instead.
func (*InterconnectionPoint) Descriptor() ([]byte, []int) {
	return file_interconnectionmodule_interconnectionmodule_proto_rawDescGZIP(), []int{0}
}

func (x *InterconnectionPoint) GetBlackStartEnabled() *commonmodule.ControlSPC {
	if x != nil {
		return x.BlackStartEnabled
	}
	return nil
}

func (x *InterconnectionPoint) GetFrequencySetPointEnabled() *commonmodule.ControlSPC {
	if x != nil {
		return x.FrequencySetPointEnabled
	}
	return nil
}

func (x *InterconnectionPoint) GetIsland() *commonmodule.ControlSPC {
	if x != nil {
		return x.Island
	}
	return nil
}

func (x *InterconnectionPoint) GetPctHzDroop() *wrapperspb.FloatValue {
	if x != nil {
		return x.PctHzDroop
	}
	return nil
}

func (x *InterconnectionPoint) GetPctVDroop() *wrapperspb.FloatValue {
	if x != nil {
		return x.PctVDroop
	}
	return nil
}

func (x *InterconnectionPoint) GetRampRates() *commonmodule.RampRate {
	if x != nil {
		return x.RampRates
	}
	return nil
}

func (x *InterconnectionPoint) GetReactivePwrSetPointEnabled() *commonmodule.ControlSPC {
	if x != nil {
		return x.ReactivePwrSetPointEnabled
	}
	return nil
}

func (x *InterconnectionPoint) GetRealPwrSetPointEnabled() *commonmodule.ControlSPC {
	if x != nil {
		return x.RealPwrSetPointEnabled
	}
	return nil
}

func (x *InterconnectionPoint) GetVoltageSetPointEnabled() *commonmodule.ControlSPC {
	if x != nil {
		return x.VoltageSetPointEnabled
	}
	return nil
}

func (x *InterconnectionPoint) GetStartTime() *commonmodule.Timestamp {
	if x != nil {
		return x.StartTime
	}
	return nil
}

// Curve shape setting (FC=SP) (CSG_SP)
type InterconnectionCSG struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The array with the points specifying a curve shape.
	CrvPts []*InterconnectionPoint `protobuf:"bytes,1,rep,name=crvPts,proto3" json:"crvPts,omitempty"`
}

func (x *InterconnectionCSG) Reset() {
	*x = InterconnectionCSG{}
	if protoimpl.UnsafeEnabled {
		mi := &file_interconnectionmodule_interconnectionmodule_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InterconnectionCSG) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InterconnectionCSG) ProtoMessage() {}

func (x *InterconnectionCSG) ProtoReflect() protoreflect.Message {
	mi := &file_interconnectionmodule_interconnectionmodule_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InterconnectionCSG.ProtoReflect.Descriptor instead.
func (*InterconnectionCSG) Descriptor() ([]byte, []int) {
	return file_interconnectionmodule_interconnectionmodule_proto_rawDescGZIP(), []int{1}
}

func (x *InterconnectionCSG) GetCrvPts() []*InterconnectionPoint {
	if x != nil {
		return x.CrvPts
	}
	return nil
}

// OpenFMB specialization for control schedule using:  LN: Schedule   Name: FSCH
type InterconnectionControlScheduleFSCH struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Discrete value in InterconnectionCSG type
	ValDCSG *InterconnectionCSG `protobuf:"bytes,1,opt,name=ValDCSG,proto3" json:"ValDCSG,omitempty"`
}

func (x *InterconnectionControlScheduleFSCH) Reset() {
	*x = InterconnectionControlScheduleFSCH{}
	if protoimpl.UnsafeEnabled {
		mi := &file_interconnectionmodule_interconnectionmodule_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InterconnectionControlScheduleFSCH) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InterconnectionControlScheduleFSCH) ProtoMessage() {}

func (x *InterconnectionControlScheduleFSCH) ProtoReflect() protoreflect.Message {
	mi := &file_interconnectionmodule_interconnectionmodule_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InterconnectionControlScheduleFSCH.ProtoReflect.Descriptor instead.
func (*InterconnectionControlScheduleFSCH) Descriptor() ([]byte, []int) {
	return file_interconnectionmodule_interconnectionmodule_proto_rawDescGZIP(), []int{2}
}

func (x *InterconnectionControlScheduleFSCH) GetValDCSG() *InterconnectionCSG {
	if x != nil {
		return x.ValDCSG
	}
	return nil
}

// Specialized 61850 FSCC class for interconnection schedule
type InterconnectionScheduleFSCC struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// UML inherited base object
	ControlFSCC *commonmodule.ControlFSCC `protobuf:"bytes,1,opt,name=controlFSCC,proto3" json:"controlFSCC,omitempty"`
	// MISSING DOCUMENTATION!!!
	InterconnectionControlScheduleFSCH []*InterconnectionControlScheduleFSCH `protobuf:"bytes,2,rep,name=interconnectionControlScheduleFSCH,proto3" json:"interconnectionControlScheduleFSCH,omitempty"`
}

func (x *InterconnectionScheduleFSCC) Reset() {
	*x = InterconnectionScheduleFSCC{}
	if protoimpl.UnsafeEnabled {
		mi := &file_interconnectionmodule_interconnectionmodule_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InterconnectionScheduleFSCC) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InterconnectionScheduleFSCC) ProtoMessage() {}

func (x *InterconnectionScheduleFSCC) ProtoReflect() protoreflect.Message {
	mi := &file_interconnectionmodule_interconnectionmodule_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InterconnectionScheduleFSCC.ProtoReflect.Descriptor instead.
func (*InterconnectionScheduleFSCC) Descriptor() ([]byte, []int) {
	return file_interconnectionmodule_interconnectionmodule_proto_rawDescGZIP(), []int{3}
}

func (x *InterconnectionScheduleFSCC) GetControlFSCC() *commonmodule.ControlFSCC {
	if x != nil {
		return x.ControlFSCC
	}
	return nil
}

func (x *InterconnectionScheduleFSCC) GetInterconnectionControlScheduleFSCH() []*InterconnectionControlScheduleFSCH {
	if x != nil {
		return x.InterconnectionControlScheduleFSCH
	}
	return nil
}

// Interconnection schedule
type InterconnectionSchedule struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// UML inherited base object
	IdentifiedObject *commonmodule.IdentifiedObject `protobuf:"bytes,1,opt,name=identifiedObject,proto3" json:"identifiedObject,omitempty"`
	// MISSING DOCUMENTATION!!!
	Check *commonmodule.CheckConditions `protobuf:"bytes,2,opt,name=check,proto3" json:"check,omitempty"`
	// MISSING DOCUMENTATION!!!
	InterconnectionScheduleFSCC *InterconnectionScheduleFSCC `protobuf:"bytes,3,opt,name=interconnectionScheduleFSCC,proto3" json:"interconnectionScheduleFSCC,omitempty"`
}

func (x *InterconnectionSchedule) Reset() {
	*x = InterconnectionSchedule{}
	if protoimpl.UnsafeEnabled {
		mi := &file_interconnectionmodule_interconnectionmodule_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InterconnectionSchedule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InterconnectionSchedule) ProtoMessage() {}

func (x *InterconnectionSchedule) ProtoReflect() protoreflect.Message {
	mi := &file_interconnectionmodule_interconnectionmodule_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InterconnectionSchedule.ProtoReflect.Descriptor instead.
func (*InterconnectionSchedule) Descriptor() ([]byte, []int) {
	return file_interconnectionmodule_interconnectionmodule_proto_rawDescGZIP(), []int{4}
}

func (x *InterconnectionSchedule) GetIdentifiedObject() *commonmodule.IdentifiedObject {
	if x != nil {
		return x.IdentifiedObject
	}
	return nil
}

func (x *InterconnectionSchedule) GetCheck() *commonmodule.CheckConditions {
	if x != nil {
		return x.Check
	}
	return nil
}

func (x *InterconnectionSchedule) GetInterconnectionScheduleFSCC() *InterconnectionScheduleFSCC {
	if x != nil {
		return x.InterconnectionScheduleFSCC
	}
	return nil
}

// Planned interconnection schedule profile
type InterconnectionPlannedScheduleProfile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// UML inherited base object
	ControlMessageInfo *commonmodule.ControlMessageInfo `protobuf:"bytes,1,opt,name=controlMessageInfo,proto3" json:"controlMessageInfo,omitempty"`
	// MISSING DOCUMENTATION!!!
	RequesterCircuitSegmentService *commonmodule.ApplicationSystem `protobuf:"bytes,2,opt,name=requesterCircuitSegmentService,proto3" json:"requesterCircuitSegmentService,omitempty"`
	// MISSING DOCUMENTATION!!!
	InterconnectionSchedule *InterconnectionSchedule `protobuf:"bytes,3,opt,name=interconnectionSchedule,proto3" json:"interconnectionSchedule,omitempty"`
	// MISSING DOCUMENTATION!!!
	TiePoint *commonmodule.ConductingEquipment `protobuf:"bytes,4,opt,name=tiePoint,proto3" json:"tiePoint,omitempty"`
	// MISSING DOCUMENTATION!!!
	ResponderCircuitSegmentService *commonmodule.ApplicationSystem `protobuf:"bytes,5,opt,name=responderCircuitSegmentService,proto3" json:"responderCircuitSegmentService,omitempty"`
}

func (x *InterconnectionPlannedScheduleProfile) Reset() {
	*x = InterconnectionPlannedScheduleProfile{}
	if protoimpl.UnsafeEnabled {
		mi := &file_interconnectionmodule_interconnectionmodule_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InterconnectionPlannedScheduleProfile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InterconnectionPlannedScheduleProfile) ProtoMessage() {}

func (x *InterconnectionPlannedScheduleProfile) ProtoReflect() protoreflect.Message {
	mi := &file_interconnectionmodule_interconnectionmodule_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InterconnectionPlannedScheduleProfile.ProtoReflect.Descriptor instead.
func (*InterconnectionPlannedScheduleProfile) Descriptor() ([]byte, []int) {
	return file_interconnectionmodule_interconnectionmodule_proto_rawDescGZIP(), []int{5}
}

func (x *InterconnectionPlannedScheduleProfile) GetControlMessageInfo() *commonmodule.ControlMessageInfo {
	if x != nil {
		return x.ControlMessageInfo
	}
	return nil
}

func (x *InterconnectionPlannedScheduleProfile) GetRequesterCircuitSegmentService() *commonmodule.ApplicationSystem {
	if x != nil {
		return x.RequesterCircuitSegmentService
	}
	return nil
}

func (x *InterconnectionPlannedScheduleProfile) GetInterconnectionSchedule() *InterconnectionSchedule {
	if x != nil {
		return x.InterconnectionSchedule
	}
	return nil
}

func (x *InterconnectionPlannedScheduleProfile) GetTiePoint() *commonmodule.ConductingEquipment {
	if x != nil {
		return x.TiePoint
	}
	return nil
}

func (x *InterconnectionPlannedScheduleProfile) GetResponderCircuitSegmentService() *commonmodule.ApplicationSystem {
	if x != nil {
		return x.ResponderCircuitSegmentService
	}
	return nil
}

// Requested interconnection schedule profile
type InterconnectionRequestedScheduleProfile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// UML inherited base object
	ControlMessageInfo *commonmodule.ControlMessageInfo `protobuf:"bytes,1,opt,name=controlMessageInfo,proto3" json:"controlMessageInfo,omitempty"`
	// MISSING DOCUMENTATION!!!
	RequesterCircuitSegmentService *commonmodule.ApplicationSystem `protobuf:"bytes,2,opt,name=requesterCircuitSegmentService,proto3" json:"requesterCircuitSegmentService,omitempty"`
	// MISSING DOCUMENTATION!!!
	InterconnectionSchedule *InterconnectionSchedule `protobuf:"bytes,3,opt,name=interconnectionSchedule,proto3" json:"interconnectionSchedule,omitempty"`
	// MISSING DOCUMENTATION!!!
	TiePoint *commonmodule.ConductingEquipment `protobuf:"bytes,4,opt,name=tiePoint,proto3" json:"tiePoint,omitempty"`
	// MISSING DOCUMENTATION!!!
	ResponderCircuitSegmentService *commonmodule.ApplicationSystem `protobuf:"bytes,5,opt,name=responderCircuitSegmentService,proto3" json:"responderCircuitSegmentService,omitempty"`
}

func (x *InterconnectionRequestedScheduleProfile) Reset() {
	*x = InterconnectionRequestedScheduleProfile{}
	if protoimpl.UnsafeEnabled {
		mi := &file_interconnectionmodule_interconnectionmodule_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InterconnectionRequestedScheduleProfile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InterconnectionRequestedScheduleProfile) ProtoMessage() {}

func (x *InterconnectionRequestedScheduleProfile) ProtoReflect() protoreflect.Message {
	mi := &file_interconnectionmodule_interconnectionmodule_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InterconnectionRequestedScheduleProfile.ProtoReflect.Descriptor instead.
func (*InterconnectionRequestedScheduleProfile) Descriptor() ([]byte, []int) {
	return file_interconnectionmodule_interconnectionmodule_proto_rawDescGZIP(), []int{6}
}

func (x *InterconnectionRequestedScheduleProfile) GetControlMessageInfo() *commonmodule.ControlMessageInfo {
	if x != nil {
		return x.ControlMessageInfo
	}
	return nil
}

func (x *InterconnectionRequestedScheduleProfile) GetRequesterCircuitSegmentService() *commonmodule.ApplicationSystem {
	if x != nil {
		return x.RequesterCircuitSegmentService
	}
	return nil
}

func (x *InterconnectionRequestedScheduleProfile) GetInterconnectionSchedule() *InterconnectionSchedule {
	if x != nil {
		return x.InterconnectionSchedule
	}
	return nil
}

func (x *InterconnectionRequestedScheduleProfile) GetTiePoint() *commonmodule.ConductingEquipment {
	if x != nil {
		return x.TiePoint
	}
	return nil
}

func (x *InterconnectionRequestedScheduleProfile) GetResponderCircuitSegmentService() *commonmodule.ApplicationSystem {
	if x != nil {
		return x.ResponderCircuitSegmentService
	}
	return nil
}

var File_interconnectionmodule_interconnectionmodule_proto protoreflect.FileDescriptor

var file_interconnectionmodule_interconnectionmodule_proto_rawDesc = []byte{
	0x0a, 0x31, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x63, 0x6f, 0x6e,
	0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x15, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x1a, 0x09, 0x75, 0x6d, 0x6c, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x77, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x6d, 0x6f, 0x64,
	0x75, 0x6c, 0x65, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xd3, 0x05, 0x0a, 0x14, 0x49, 0x6e, 0x74, 0x65, 0x72,
	0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x12,
	0x46, 0x0a, 0x11, 0x62, 0x6c, 0x61, 0x63, 0x6b, 0x53, 0x74, 0x61, 0x72, 0x74, 0x45, 0x6e, 0x61,
	0x62, 0x6c, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f,
	0x6c, 0x53, 0x50, 0x43, 0x52, 0x11, 0x62, 0x6c, 0x61, 0x63, 0x6b, 0x53, 0x74, 0x61, 0x72, 0x74,
	0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x54, 0x0a, 0x18, 0x66, 0x72, 0x65, 0x71, 0x75,
	0x65, 0x6e, 0x63, 0x79, 0x53, 0x65, 0x74, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x45, 0x6e, 0x61, 0x62,
	0x6c, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c,
	0x53, 0x50, 0x43, 0x52, 0x18, 0x66, 0x72, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x79, 0x53, 0x65,
	0x74, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x30, 0x0a,
	0x06, 0x69, 0x73, 0x6c, 0x61, 0x6e, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x43, 0x6f, 0x6e,
	0x74, 0x72, 0x6f, 0x6c, 0x53, 0x50, 0x43, 0x52, 0x06, 0x69, 0x73, 0x6c, 0x61, 0x6e, 0x64, 0x12,
	0x3b, 0x0a, 0x0a, 0x70, 0x63, 0x74, 0x48, 0x7a, 0x44, 0x72, 0x6f, 0x6f, 0x70, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x46, 0x6c, 0x6f, 0x61, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x52, 0x0a, 0x70, 0x63, 0x74, 0x48, 0x7a, 0x44, 0x72, 0x6f, 0x6f, 0x70, 0x12, 0x39, 0x0a, 0x09,
	0x70, 0x63, 0x74, 0x56, 0x44, 0x72, 0x6f, 0x6f, 0x70, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x46, 0x6c, 0x6f, 0x61, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x09, 0x70, 0x63,
	0x74, 0x56, 0x44, 0x72, 0x6f, 0x6f, 0x70, 0x12, 0x34, 0x0a, 0x09, 0x72, 0x61, 0x6d, 0x70, 0x52,
	0x61, 0x74, 0x65, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x52, 0x61, 0x6d, 0x70, 0x52, 0x61,
	0x74, 0x65, 0x52, 0x09, 0x72, 0x61, 0x6d, 0x70, 0x52, 0x61, 0x74, 0x65, 0x73, 0x12, 0x58, 0x0a,
	0x1a, 0x72, 0x65, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x50, 0x77, 0x72, 0x53, 0x65, 0x74, 0x50,
	0x6f, 0x69, 0x6e, 0x74, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x18, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65,
	0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x53, 0x50, 0x43, 0x52, 0x1a, 0x72, 0x65, 0x61,
	0x63, 0x74, 0x69, 0x76, 0x65, 0x50, 0x77, 0x72, 0x53, 0x65, 0x74, 0x50, 0x6f, 0x69, 0x6e, 0x74,
	0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x50, 0x0a, 0x16, 0x72, 0x65, 0x61, 0x6c, 0x50,
	0x77, 0x72, 0x53, 0x65, 0x74, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65,
	0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x53, 0x50,
	0x43, 0x52, 0x16, 0x72, 0x65, 0x61, 0x6c, 0x50, 0x77, 0x72, 0x53, 0x65, 0x74, 0x50, 0x6f, 0x69,
	0x6e, 0x74, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x50, 0x0a, 0x16, 0x76, 0x6f, 0x6c,
	0x74, 0x61, 0x67, 0x65, 0x53, 0x65, 0x74, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x45, 0x6e, 0x61, 0x62,
	0x6c, 0x65, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c,
	0x53, 0x50, 0x43, 0x52, 0x16, 0x76, 0x6f, 0x6c, 0x74, 0x61, 0x67, 0x65, 0x53, 0x65, 0x74, 0x50,
	0x6f, 0x69, 0x6e, 0x74, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x3f, 0x0a, 0x09, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x08, 0x88, 0xb5, 0x18, 0x01, 0x90, 0xb5, 0x18,
	0x01, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x63, 0x0a, 0x12,
	0x49, 0x6e, 0x74, 0x65, 0x72, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43,
	0x53, 0x47, 0x12, 0x4d, 0x0a, 0x06, 0x63, 0x72, 0x76, 0x50, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72,
	0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x42,
	0x08, 0x88, 0xb5, 0x18, 0x01, 0x90, 0xb5, 0x18, 0x01, 0x52, 0x06, 0x63, 0x72, 0x76, 0x50, 0x74,
	0x73, 0x22, 0x73, 0x0a, 0x22, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x53, 0x63, 0x68, 0x65, 0x64,
	0x75, 0x6c, 0x65, 0x46, 0x53, 0x43, 0x48, 0x12, 0x4d, 0x0a, 0x07, 0x56, 0x61, 0x6c, 0x44, 0x43,
	0x53, 0x47, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72,
	0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65,
	0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x43, 0x53, 0x47, 0x42, 0x08, 0x88, 0xb5, 0x18, 0x01, 0x90, 0xb5, 0x18, 0x01, 0x52, 0x07, 0x56,
	0x61, 0x6c, 0x44, 0x43, 0x53, 0x47, 0x22, 0xf2, 0x01, 0x0a, 0x1b, 0x49, 0x6e, 0x74, 0x65, 0x72,
	0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75,
	0x6c, 0x65, 0x46, 0x53, 0x43, 0x43, 0x12, 0x41, 0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f,
	0x6c, 0x46, 0x53, 0x43, 0x43, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x72,
	0x6f, 0x6c, 0x46, 0x53, 0x43, 0x43, 0x42, 0x04, 0x80, 0xb5, 0x18, 0x01, 0x52, 0x0b, 0x63, 0x6f,
	0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x46, 0x53, 0x43, 0x43, 0x12, 0x8f, 0x01, 0x0a, 0x22, 0x69, 0x6e,
	0x74, 0x65, 0x72, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e,
	0x74, 0x72, 0x6f, 0x6c, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x46, 0x53, 0x43, 0x48,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x39, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x63, 0x6f,
	0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x49,
	0x6e, 0x74, 0x65, 0x72, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f,
	0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x46, 0x53, 0x43,
	0x48, 0x42, 0x04, 0x90, 0xb5, 0x18, 0x00, 0x52, 0x22, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x63, 0x6f,
	0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x53,
	0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x46, 0x53, 0x43, 0x48, 0x22, 0xa0, 0x02, 0x0a, 0x17,
	0x49, 0x6e, 0x74, 0x65, 0x72, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53,
	0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x12, 0x50, 0x0a, 0x10, 0x69, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x66, 0x69, 0x65, 0x64, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65,
	0x2e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x64, 0x4f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x42, 0x04, 0x80, 0xb5, 0x18, 0x01, 0x52, 0x10, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66,
	0x69, 0x65, 0x64, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x33, 0x0a, 0x05, 0x63, 0x68, 0x65,
	0x63, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x43, 0x6f, 0x6e,
	0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x05, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x12, 0x7e,
	0x0a, 0x1b, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x46, 0x53, 0x43, 0x43, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x63, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x49, 0x6e, 0x74, 0x65,
	0x72, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x63, 0x68, 0x65, 0x64,
	0x75, 0x6c, 0x65, 0x46, 0x53, 0x43, 0x43, 0x42, 0x08, 0x88, 0xb5, 0x18, 0x01, 0x90, 0xb5, 0x18,
	0x01, 0x52, 0x1b, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x46, 0x53, 0x43, 0x43, 0x22, 0xa8,
	0x04, 0x0a, 0x25, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x50, 0x6c, 0x61, 0x6e, 0x6e, 0x65, 0x64, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c,
	0x65, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x56, 0x0a, 0x12, 0x63, 0x6f, 0x6e, 0x74,
	0x72, 0x6f, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x6d, 0x6f, 0x64,
	0x75, 0x6c, 0x65, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x04, 0x80, 0xb5, 0x18, 0x01, 0x52, 0x12, 0x63, 0x6f,
	0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x71, 0x0a, 0x1e, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x72, 0x43, 0x69, 0x72,
	0x63, 0x75, 0x69, 0x74, 0x53, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x42, 0x08, 0x88, 0xb5, 0x18, 0x01, 0x90,
	0xb5, 0x18, 0x01, 0x52, 0x1e, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x72, 0x43, 0x69,
	0x72, 0x63, 0x75, 0x69, 0x74, 0x53, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x12, 0x72, 0x0a, 0x17, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x63, 0x6f, 0x6e, 0x6e,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x63, 0x6f, 0x6e, 0x6e,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x49, 0x6e, 0x74,
	0x65, 0x72, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x63, 0x68, 0x65,
	0x64, 0x75, 0x6c, 0x65, 0x42, 0x08, 0x88, 0xb5, 0x18, 0x01, 0x90, 0xb5, 0x18, 0x01, 0x52, 0x17,
	0x69, 0x6e, 0x74, 0x65, 0x72, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53,
	0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x12, 0x47, 0x0a, 0x08, 0x74, 0x69, 0x65, 0x50, 0x6f,
	0x69, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x43, 0x6f, 0x6e, 0x64, 0x75, 0x63, 0x74,
	0x69, 0x6e, 0x67, 0x45, 0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x42, 0x08, 0x88, 0xb5,
	0x18, 0x01, 0x90, 0xb5, 0x18, 0x01, 0x52, 0x08, 0x74, 0x69, 0x65, 0x50, 0x6f, 0x69, 0x6e, 0x74,
	0x12, 0x71, 0x0a, 0x1e, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x64, 0x65, 0x72, 0x43, 0x69, 0x72,
	0x63, 0x75, 0x69, 0x74, 0x53, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x42, 0x08, 0x88, 0xb5, 0x18, 0x01, 0x90,
	0xb5, 0x18, 0x01, 0x52, 0x1e, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x64, 0x65, 0x72, 0x43, 0x69,
	0x72, 0x63, 0x75, 0x69, 0x74, 0x53, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x3a, 0x04, 0xc0, 0xf3, 0x18, 0x01, 0x22, 0xaa, 0x04, 0x0a, 0x27, 0x49, 0x6e,
	0x74, 0x65, 0x72, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x65, 0x64, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x50, 0x72,
	0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x56, 0x0a, 0x12, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x20, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65,
	0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49,
	0x6e, 0x66, 0x6f, 0x42, 0x04, 0x80, 0xb5, 0x18, 0x01, 0x52, 0x12, 0x63, 0x6f, 0x6e, 0x74, 0x72,
	0x6f, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x71, 0x0a,
	0x1e, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x72, 0x43, 0x69, 0x72, 0x63, 0x75, 0x69,
	0x74, 0x53, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x6d, 0x6f,
	0x64, 0x75, 0x6c, 0x65, 0x2e, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x42, 0x08, 0x88, 0xb5, 0x18, 0x01, 0x90, 0xb5, 0x18, 0x01,
	0x52, 0x1e, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x72, 0x43, 0x69, 0x72, 0x63, 0x75,
	0x69, 0x74, 0x53, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x12, 0x72, 0x0a, 0x17, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x2e, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x63,
	0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c,
	0x65, 0x42, 0x08, 0x88, 0xb5, 0x18, 0x01, 0x90, 0xb5, 0x18, 0x01, 0x52, 0x17, 0x69, 0x6e, 0x74,
	0x65, 0x72, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x63, 0x68, 0x65,
	0x64, 0x75, 0x6c, 0x65, 0x12, 0x47, 0x0a, 0x08, 0x74, 0x69, 0x65, 0x50, 0x6f, 0x69, 0x6e, 0x74,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x6d,
	0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x43, 0x6f, 0x6e, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6e, 0x67,
	0x45, 0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x42, 0x08, 0x88, 0xb5, 0x18, 0x01, 0x90,
	0xb5, 0x18, 0x01, 0x52, 0x08, 0x74, 0x69, 0x65, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x71, 0x0a,
	0x1e, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x64, 0x65, 0x72, 0x43, 0x69, 0x72, 0x63, 0x75, 0x69,
	0x74, 0x53, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x6d, 0x6f,
	0x64, 0x75, 0x6c, 0x65, 0x2e, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x42, 0x08, 0x88, 0xb5, 0x18, 0x01, 0x90, 0xb5, 0x18, 0x01,
	0x52, 0x1e, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x64, 0x65, 0x72, 0x43, 0x69, 0x72, 0x63, 0x75,
	0x69, 0x74, 0x53, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x3a, 0x04, 0xc0, 0xf3, 0x18, 0x01, 0x42, 0x9f, 0x01, 0x0a, 0x1d, 0x6f, 0x70, 0x65, 0x6e, 0x66,
	0x6d, 0x62, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x50, 0x01, 0x5a, 0x5c, 0x67, 0x69, 0x74, 0x6c,
	0x61, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6f, 0x70, 0x65, 0x6e, 0x66, 0x6d, 0x62, 0x2f, 0x70,
	0x73, 0x6d, 0x2f, 0x6f, 0x70, 0x73, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f,
	0x67, 0x6f, 0x2d, 0x6f, 0x70, 0x65, 0x6e, 0x66, 0x6d, 0x62, 0x2d, 0x6f, 0x70, 0x73, 0x2d, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x76, 0x32, 0x2f, 0x6f, 0x70, 0x65, 0x6e, 0x66,
	0x6d, 0x62, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0xaa, 0x02, 0x1d, 0x6f, 0x70, 0x65, 0x6e, 0x66,
	0x6d, 0x62, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_interconnectionmodule_interconnectionmodule_proto_rawDescOnce sync.Once
	file_interconnectionmodule_interconnectionmodule_proto_rawDescData = file_interconnectionmodule_interconnectionmodule_proto_rawDesc
)

func file_interconnectionmodule_interconnectionmodule_proto_rawDescGZIP() []byte {
	file_interconnectionmodule_interconnectionmodule_proto_rawDescOnce.Do(func() {
		file_interconnectionmodule_interconnectionmodule_proto_rawDescData = protoimpl.X.CompressGZIP(file_interconnectionmodule_interconnectionmodule_proto_rawDescData)
	})
	return file_interconnectionmodule_interconnectionmodule_proto_rawDescData
}

var file_interconnectionmodule_interconnectionmodule_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_interconnectionmodule_interconnectionmodule_proto_goTypes = []interface{}{
	(*InterconnectionPoint)(nil),                    // 0: interconnectionmodule.InterconnectionPoint
	(*InterconnectionCSG)(nil),                      // 1: interconnectionmodule.InterconnectionCSG
	(*InterconnectionControlScheduleFSCH)(nil),      // 2: interconnectionmodule.InterconnectionControlScheduleFSCH
	(*InterconnectionScheduleFSCC)(nil),             // 3: interconnectionmodule.InterconnectionScheduleFSCC
	(*InterconnectionSchedule)(nil),                 // 4: interconnectionmodule.InterconnectionSchedule
	(*InterconnectionPlannedScheduleProfile)(nil),   // 5: interconnectionmodule.InterconnectionPlannedScheduleProfile
	(*InterconnectionRequestedScheduleProfile)(nil), // 6: interconnectionmodule.InterconnectionRequestedScheduleProfile
	(*commonmodule.ControlSPC)(nil),                 // 7: commonmodule.ControlSPC
	(*wrapperspb.FloatValue)(nil),                   // 8: google.protobuf.FloatValue
	(*commonmodule.RampRate)(nil),                   // 9: commonmodule.RampRate
	(*commonmodule.Timestamp)(nil),                  // 10: commonmodule.Timestamp
	(*commonmodule.ControlFSCC)(nil),                // 11: commonmodule.ControlFSCC
	(*commonmodule.IdentifiedObject)(nil),           // 12: commonmodule.IdentifiedObject
	(*commonmodule.CheckConditions)(nil),            // 13: commonmodule.CheckConditions
	(*commonmodule.ControlMessageInfo)(nil),         // 14: commonmodule.ControlMessageInfo
	(*commonmodule.ApplicationSystem)(nil),          // 15: commonmodule.ApplicationSystem
	(*commonmodule.ConductingEquipment)(nil),        // 16: commonmodule.ConductingEquipment
}
var file_interconnectionmodule_interconnectionmodule_proto_depIdxs = []int32{
	7,  // 0: interconnectionmodule.InterconnectionPoint.blackStartEnabled:type_name -> commonmodule.ControlSPC
	7,  // 1: interconnectionmodule.InterconnectionPoint.frequencySetPointEnabled:type_name -> commonmodule.ControlSPC
	7,  // 2: interconnectionmodule.InterconnectionPoint.island:type_name -> commonmodule.ControlSPC
	8,  // 3: interconnectionmodule.InterconnectionPoint.pctHzDroop:type_name -> google.protobuf.FloatValue
	8,  // 4: interconnectionmodule.InterconnectionPoint.pctVDroop:type_name -> google.protobuf.FloatValue
	9,  // 5: interconnectionmodule.InterconnectionPoint.rampRates:type_name -> commonmodule.RampRate
	7,  // 6: interconnectionmodule.InterconnectionPoint.reactivePwrSetPointEnabled:type_name -> commonmodule.ControlSPC
	7,  // 7: interconnectionmodule.InterconnectionPoint.realPwrSetPointEnabled:type_name -> commonmodule.ControlSPC
	7,  // 8: interconnectionmodule.InterconnectionPoint.voltageSetPointEnabled:type_name -> commonmodule.ControlSPC
	10, // 9: interconnectionmodule.InterconnectionPoint.startTime:type_name -> commonmodule.Timestamp
	0,  // 10: interconnectionmodule.InterconnectionCSG.crvPts:type_name -> interconnectionmodule.InterconnectionPoint
	1,  // 11: interconnectionmodule.InterconnectionControlScheduleFSCH.ValDCSG:type_name -> interconnectionmodule.InterconnectionCSG
	11, // 12: interconnectionmodule.InterconnectionScheduleFSCC.controlFSCC:type_name -> commonmodule.ControlFSCC
	2,  // 13: interconnectionmodule.InterconnectionScheduleFSCC.interconnectionControlScheduleFSCH:type_name -> interconnectionmodule.InterconnectionControlScheduleFSCH
	12, // 14: interconnectionmodule.InterconnectionSchedule.identifiedObject:type_name -> commonmodule.IdentifiedObject
	13, // 15: interconnectionmodule.InterconnectionSchedule.check:type_name -> commonmodule.CheckConditions
	3,  // 16: interconnectionmodule.InterconnectionSchedule.interconnectionScheduleFSCC:type_name -> interconnectionmodule.InterconnectionScheduleFSCC
	14, // 17: interconnectionmodule.InterconnectionPlannedScheduleProfile.controlMessageInfo:type_name -> commonmodule.ControlMessageInfo
	15, // 18: interconnectionmodule.InterconnectionPlannedScheduleProfile.requesterCircuitSegmentService:type_name -> commonmodule.ApplicationSystem
	4,  // 19: interconnectionmodule.InterconnectionPlannedScheduleProfile.interconnectionSchedule:type_name -> interconnectionmodule.InterconnectionSchedule
	16, // 20: interconnectionmodule.InterconnectionPlannedScheduleProfile.tiePoint:type_name -> commonmodule.ConductingEquipment
	15, // 21: interconnectionmodule.InterconnectionPlannedScheduleProfile.responderCircuitSegmentService:type_name -> commonmodule.ApplicationSystem
	14, // 22: interconnectionmodule.InterconnectionRequestedScheduleProfile.controlMessageInfo:type_name -> commonmodule.ControlMessageInfo
	15, // 23: interconnectionmodule.InterconnectionRequestedScheduleProfile.requesterCircuitSegmentService:type_name -> commonmodule.ApplicationSystem
	4,  // 24: interconnectionmodule.InterconnectionRequestedScheduleProfile.interconnectionSchedule:type_name -> interconnectionmodule.InterconnectionSchedule
	16, // 25: interconnectionmodule.InterconnectionRequestedScheduleProfile.tiePoint:type_name -> commonmodule.ConductingEquipment
	15, // 26: interconnectionmodule.InterconnectionRequestedScheduleProfile.responderCircuitSegmentService:type_name -> commonmodule.ApplicationSystem
	27, // [27:27] is the sub-list for method output_type
	27, // [27:27] is the sub-list for method input_type
	27, // [27:27] is the sub-list for extension type_name
	27, // [27:27] is the sub-list for extension extendee
	0,  // [0:27] is the sub-list for field type_name
}

func init() { file_interconnectionmodule_interconnectionmodule_proto_init() }
func file_interconnectionmodule_interconnectionmodule_proto_init() {
	if File_interconnectionmodule_interconnectionmodule_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_interconnectionmodule_interconnectionmodule_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InterconnectionPoint); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_interconnectionmodule_interconnectionmodule_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InterconnectionCSG); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_interconnectionmodule_interconnectionmodule_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InterconnectionControlScheduleFSCH); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_interconnectionmodule_interconnectionmodule_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InterconnectionScheduleFSCC); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_interconnectionmodule_interconnectionmodule_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InterconnectionSchedule); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_interconnectionmodule_interconnectionmodule_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InterconnectionPlannedScheduleProfile); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_interconnectionmodule_interconnectionmodule_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InterconnectionRequestedScheduleProfile); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_interconnectionmodule_interconnectionmodule_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_interconnectionmodule_interconnectionmodule_proto_goTypes,
		DependencyIndexes: file_interconnectionmodule_interconnectionmodule_proto_depIdxs,
		MessageInfos:      file_interconnectionmodule_interconnectionmodule_proto_msgTypes,
	}.Build()
	File_interconnectionmodule_interconnectionmodule_proto = out.File
	file_interconnectionmodule_interconnectionmodule_proto_rawDesc = nil
	file_interconnectionmodule_interconnectionmodule_proto_goTypes = nil
	file_interconnectionmodule_interconnectionmodule_proto_depIdxs = nil
}
