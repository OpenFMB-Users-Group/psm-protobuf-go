// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v4.22.3
// source: loadmodule/loadmodule.proto

// OpenFMB Operational Model (61850-CIM) (v2.1.0).eapx
// Monday, April 3, 2023 7:34:35 PM UTC

package loadmodule

import (
	_ "gitlab.com/openfmb/psm/ops/protobuf/go-openfmb-ops-protobuf/v2/openfmb"
	commonmodule "gitlab.com/openfmb/psm/ops/protobuf/go-openfmb-ops-protobuf/v2/openfmb/commonmodule"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	wrapperspb "google.golang.org/protobuf/types/known/wrapperspb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Point definition (Point)
type LoadPoint struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Ramp rates
	RampRates *commonmodule.RampRate `protobuf:"bytes,1,opt,name=rampRates,proto3" json:"rampRates,omitempty"`
	// Enable reactive power set point
	ReactivePwrSetPointEnabled *commonmodule.ControlSPC `protobuf:"bytes,2,opt,name=reactivePwrSetPointEnabled,proto3" json:"reactivePwrSetPointEnabled,omitempty"`
	// Enable joint real power set point
	RealPwrSetPointEnabled *commonmodule.ControlSPC `protobuf:"bytes,3,opt,name=realPwrSetPointEnabled,proto3" json:"realPwrSetPointEnabled,omitempty"`
	// Reset device
	Reset_ *commonmodule.ControlSPC `protobuf:"bytes,4,opt,name=reset,proto3" json:"reset,omitempty"`
	// ESS state
	State *commonmodule.Optional_StateKind `protobuf:"bytes,5,opt,name=state,proto3" json:"state,omitempty"`
	// Start time
	StartTime *commonmodule.ControlTimestamp `protobuf:"bytes,6,opt,name=startTime,proto3" json:"startTime,omitempty"`
}

func (x *LoadPoint) Reset() {
	*x = LoadPoint{}
	if protoimpl.UnsafeEnabled {
		mi := &file_loadmodule_loadmodule_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoadPoint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoadPoint) ProtoMessage() {}

func (x *LoadPoint) ProtoReflect() protoreflect.Message {
	mi := &file_loadmodule_loadmodule_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoadPoint.ProtoReflect.Descriptor instead.
func (*LoadPoint) Descriptor() ([]byte, []int) {
	return file_loadmodule_loadmodule_proto_rawDescGZIP(), []int{0}
}

func (x *LoadPoint) GetRampRates() *commonmodule.RampRate {
	if x != nil {
		return x.RampRates
	}
	return nil
}

func (x *LoadPoint) GetReactivePwrSetPointEnabled() *commonmodule.ControlSPC {
	if x != nil {
		return x.ReactivePwrSetPointEnabled
	}
	return nil
}

func (x *LoadPoint) GetRealPwrSetPointEnabled() *commonmodule.ControlSPC {
	if x != nil {
		return x.RealPwrSetPointEnabled
	}
	return nil
}

func (x *LoadPoint) GetReset_() *commonmodule.ControlSPC {
	if x != nil {
		return x.Reset_
	}
	return nil
}

func (x *LoadPoint) GetState() *commonmodule.Optional_StateKind {
	if x != nil {
		return x.State
	}
	return nil
}

func (x *LoadPoint) GetStartTime() *commonmodule.ControlTimestamp {
	if x != nil {
		return x.StartTime
	}
	return nil
}

// Curve shape setting (FC=SP) (CSG_SP)
type LoadCSG struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The array with the points specifying a curve shape.
	CrvPts []*LoadPoint `protobuf:"bytes,1,rep,name=crvPts,proto3" json:"crvPts,omitempty"`
}

func (x *LoadCSG) Reset() {
	*x = LoadCSG{}
	if protoimpl.UnsafeEnabled {
		mi := &file_loadmodule_loadmodule_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoadCSG) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoadCSG) ProtoMessage() {}

func (x *LoadCSG) ProtoReflect() protoreflect.Message {
	mi := &file_loadmodule_loadmodule_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoadCSG.ProtoReflect.Descriptor instead.
func (*LoadCSG) Descriptor() ([]byte, []int) {
	return file_loadmodule_loadmodule_proto_rawDescGZIP(), []int{1}
}

func (x *LoadCSG) GetCrvPts() []*LoadPoint {
	if x != nil {
		return x.CrvPts
	}
	return nil
}

// OpenFMB specialization for control schedule using:  LN: Schedule   Name: FSCH
type LoadControlScheduleFSCH struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Discrete value in LoadCSG type
	ValDCSG *LoadCSG `protobuf:"bytes,1,opt,name=ValDCSG,proto3" json:"ValDCSG,omitempty"`
}

func (x *LoadControlScheduleFSCH) Reset() {
	*x = LoadControlScheduleFSCH{}
	if protoimpl.UnsafeEnabled {
		mi := &file_loadmodule_loadmodule_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoadControlScheduleFSCH) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoadControlScheduleFSCH) ProtoMessage() {}

func (x *LoadControlScheduleFSCH) ProtoReflect() protoreflect.Message {
	mi := &file_loadmodule_loadmodule_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoadControlScheduleFSCH.ProtoReflect.Descriptor instead.
func (*LoadControlScheduleFSCH) Descriptor() ([]byte, []int) {
	return file_loadmodule_loadmodule_proto_rawDescGZIP(), []int{2}
}

func (x *LoadControlScheduleFSCH) GetValDCSG() *LoadCSG {
	if x != nil {
		return x.ValDCSG
	}
	return nil
}

// Specialized FSCC 61850 class.  LN: Schedule controller   Name: FSCC
type LoadControlFSCC struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// UML inherited base object
	ControlFSCC *commonmodule.ControlFSCC `protobuf:"bytes,1,opt,name=controlFSCC,proto3" json:"controlFSCC,omitempty"`
	// MISSING DOCUMENTATION!!!
	LoadControlScheduleFSCH *LoadControlScheduleFSCH `protobuf:"bytes,2,opt,name=loadControlScheduleFSCH,proto3" json:"loadControlScheduleFSCH,omitempty"`
}

func (x *LoadControlFSCC) Reset() {
	*x = LoadControlFSCC{}
	if protoimpl.UnsafeEnabled {
		mi := &file_loadmodule_loadmodule_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoadControlFSCC) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoadControlFSCC) ProtoMessage() {}

func (x *LoadControlFSCC) ProtoReflect() protoreflect.Message {
	mi := &file_loadmodule_loadmodule_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoadControlFSCC.ProtoReflect.Descriptor instead.
func (*LoadControlFSCC) Descriptor() ([]byte, []int) {
	return file_loadmodule_loadmodule_proto_rawDescGZIP(), []int{3}
}

func (x *LoadControlFSCC) GetControlFSCC() *commonmodule.ControlFSCC {
	if x != nil {
		return x.ControlFSCC
	}
	return nil
}

func (x *LoadControlFSCC) GetLoadControlScheduleFSCH() *LoadControlScheduleFSCH {
	if x != nil {
		return x.LoadControlScheduleFSCH
	}
	return nil
}

// Load control
type LoadControl struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// UML inherited base object
	ControlValue *commonmodule.ControlValue `protobuf:"bytes,1,opt,name=controlValue,proto3" json:"controlValue,omitempty"`
	// MISSING DOCUMENTATION!!!
	Check *commonmodule.CheckConditions `protobuf:"bytes,2,opt,name=check,proto3" json:"check,omitempty"`
	// MISSING DOCUMENTATION!!!
	LoadControlFSCC *LoadControlFSCC `protobuf:"bytes,3,opt,name=loadControlFSCC,proto3" json:"loadControlFSCC,omitempty"`
}

func (x *LoadControl) Reset() {
	*x = LoadControl{}
	if protoimpl.UnsafeEnabled {
		mi := &file_loadmodule_loadmodule_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoadControl) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoadControl) ProtoMessage() {}

func (x *LoadControl) ProtoReflect() protoreflect.Message {
	mi := &file_loadmodule_loadmodule_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoadControl.ProtoReflect.Descriptor instead.
func (*LoadControl) Descriptor() ([]byte, []int) {
	return file_loadmodule_loadmodule_proto_rawDescGZIP(), []int{4}
}

func (x *LoadControl) GetControlValue() *commonmodule.ControlValue {
	if x != nil {
		return x.ControlValue
	}
	return nil
}

func (x *LoadControl) GetCheck() *commonmodule.CheckConditions {
	if x != nil {
		return x.Check
	}
	return nil
}

func (x *LoadControl) GetLoadControlFSCC() *LoadControlFSCC {
	if x != nil {
		return x.LoadControlFSCC
	}
	return nil
}

// Load control profile
type LoadControlProfile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// UML inherited base object
	ControlMessageInfo *commonmodule.ControlMessageInfo `protobuf:"bytes,1,opt,name=controlMessageInfo,proto3" json:"controlMessageInfo,omitempty"`
	// MISSING DOCUMENTATION!!!
	EnergyConsumer *commonmodule.EnergyConsumer `protobuf:"bytes,2,opt,name=energyConsumer,proto3" json:"energyConsumer,omitempty"`
	// MISSING DOCUMENTATION!!!
	LoadControl *LoadControl `protobuf:"bytes,3,opt,name=loadControl,proto3" json:"loadControl,omitempty"`
}

func (x *LoadControlProfile) Reset() {
	*x = LoadControlProfile{}
	if protoimpl.UnsafeEnabled {
		mi := &file_loadmodule_loadmodule_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoadControlProfile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoadControlProfile) ProtoMessage() {}

func (x *LoadControlProfile) ProtoReflect() protoreflect.Message {
	mi := &file_loadmodule_loadmodule_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoadControlProfile.ProtoReflect.Descriptor instead.
func (*LoadControlProfile) Descriptor() ([]byte, []int) {
	return file_loadmodule_loadmodule_proto_rawDescGZIP(), []int{5}
}

func (x *LoadControlProfile) GetControlMessageInfo() *commonmodule.ControlMessageInfo {
	if x != nil {
		return x.ControlMessageInfo
	}
	return nil
}

func (x *LoadControlProfile) GetEnergyConsumer() *commonmodule.EnergyConsumer {
	if x != nil {
		return x.EnergyConsumer
	}
	return nil
}

func (x *LoadControlProfile) GetLoadControl() *LoadControl {
	if x != nil {
		return x.LoadControl
	}
	return nil
}

// Point definition (Point)
type LoadPointStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Ramp rates
	RampRates *commonmodule.RampRate `protobuf:"bytes,1,opt,name=rampRates,proto3" json:"rampRates,omitempty"`
	// Enable reactive power set point
	ReactivePwrSetPointEnabled *commonmodule.StatusSPS `protobuf:"bytes,2,opt,name=reactivePwrSetPointEnabled,proto3" json:"reactivePwrSetPointEnabled,omitempty"`
	// Enable joint real power set point
	RealPwrSetPointEnabled *commonmodule.StatusSPS `protobuf:"bytes,3,opt,name=realPwrSetPointEnabled,proto3" json:"realPwrSetPointEnabled,omitempty"`
	// Reset device
	Reset_ *commonmodule.StatusSPS `protobuf:"bytes,4,opt,name=reset,proto3" json:"reset,omitempty"`
	// ESS state
	State *commonmodule.Optional_StateKind `protobuf:"bytes,5,opt,name=state,proto3" json:"state,omitempty"`
}

func (x *LoadPointStatus) Reset() {
	*x = LoadPointStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_loadmodule_loadmodule_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoadPointStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoadPointStatus) ProtoMessage() {}

func (x *LoadPointStatus) ProtoReflect() protoreflect.Message {
	mi := &file_loadmodule_loadmodule_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoadPointStatus.ProtoReflect.Descriptor instead.
func (*LoadPointStatus) Descriptor() ([]byte, []int) {
	return file_loadmodule_loadmodule_proto_rawDescGZIP(), []int{6}
}

func (x *LoadPointStatus) GetRampRates() *commonmodule.RampRate {
	if x != nil {
		return x.RampRates
	}
	return nil
}

func (x *LoadPointStatus) GetReactivePwrSetPointEnabled() *commonmodule.StatusSPS {
	if x != nil {
		return x.ReactivePwrSetPointEnabled
	}
	return nil
}

func (x *LoadPointStatus) GetRealPwrSetPointEnabled() *commonmodule.StatusSPS {
	if x != nil {
		return x.RealPwrSetPointEnabled
	}
	return nil
}

func (x *LoadPointStatus) GetReset_() *commonmodule.StatusSPS {
	if x != nil {
		return x.Reset_
	}
	return nil
}

func (x *LoadPointStatus) GetState() *commonmodule.Optional_StateKind {
	if x != nil {
		return x.State
	}
	return nil
}

// Specialized 61850 ZGLD class
type LoadEventAndStatusZGLD struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// UML inherited base object
	LogicalNodeForEventAndStatus *commonmodule.LogicalNodeForEventAndStatus `protobuf:"bytes,1,opt,name=logicalNodeForEventAndStatus,proto3" json:"logicalNodeForEventAndStatus,omitempty"`
	// MISSING DOCUMENTATION!!!
	DynamicTest *commonmodule.ENS_DynamicTestKind `protobuf:"bytes,2,opt,name=DynamicTest,proto3" json:"DynamicTest,omitempty"`
	// Emergency stop
	EmgStop *commonmodule.StatusSPS `protobuf:"bytes,3,opt,name=EmgStop,proto3" json:"EmgStop,omitempty"`
	// Point status
	PointStatus *LoadPointStatus `protobuf:"bytes,4,opt,name=PointStatus,proto3" json:"PointStatus,omitempty"`
}

func (x *LoadEventAndStatusZGLD) Reset() {
	*x = LoadEventAndStatusZGLD{}
	if protoimpl.UnsafeEnabled {
		mi := &file_loadmodule_loadmodule_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoadEventAndStatusZGLD) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoadEventAndStatusZGLD) ProtoMessage() {}

func (x *LoadEventAndStatusZGLD) ProtoReflect() protoreflect.Message {
	mi := &file_loadmodule_loadmodule_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoadEventAndStatusZGLD.ProtoReflect.Descriptor instead.
func (*LoadEventAndStatusZGLD) Descriptor() ([]byte, []int) {
	return file_loadmodule_loadmodule_proto_rawDescGZIP(), []int{7}
}

func (x *LoadEventAndStatusZGLD) GetLogicalNodeForEventAndStatus() *commonmodule.LogicalNodeForEventAndStatus {
	if x != nil {
		return x.LogicalNodeForEventAndStatus
	}
	return nil
}

func (x *LoadEventAndStatusZGLD) GetDynamicTest() *commonmodule.ENS_DynamicTestKind {
	if x != nil {
		return x.DynamicTest
	}
	return nil
}

func (x *LoadEventAndStatusZGLD) GetEmgStop() *commonmodule.StatusSPS {
	if x != nil {
		return x.EmgStop
	}
	return nil
}

func (x *LoadEventAndStatusZGLD) GetPointStatus() *LoadPointStatus {
	if x != nil {
		return x.PointStatus
	}
	return nil
}

// Specialized 61850 ZGLD LN class
type LoadEventZGLD struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// UML inherited base object
	LoadEventAndStatusZGLD *LoadEventAndStatusZGLD `protobuf:"bytes,1,opt,name=loadEventAndStatusZGLD,proto3" json:"loadEventAndStatusZGLD,omitempty"`
}

func (x *LoadEventZGLD) Reset() {
	*x = LoadEventZGLD{}
	if protoimpl.UnsafeEnabled {
		mi := &file_loadmodule_loadmodule_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoadEventZGLD) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoadEventZGLD) ProtoMessage() {}

func (x *LoadEventZGLD) ProtoReflect() protoreflect.Message {
	mi := &file_loadmodule_loadmodule_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoadEventZGLD.ProtoReflect.Descriptor instead.
func (*LoadEventZGLD) Descriptor() ([]byte, []int) {
	return file_loadmodule_loadmodule_proto_rawDescGZIP(), []int{8}
}

func (x *LoadEventZGLD) GetLoadEventAndStatusZGLD() *LoadEventAndStatusZGLD {
	if x != nil {
		return x.LoadEventAndStatusZGLD
	}
	return nil
}

// Load event
type LoadEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// UML inherited base object
	EventValue *commonmodule.EventValue `protobuf:"bytes,1,opt,name=eventValue,proto3" json:"eventValue,omitempty"`
	// MISSING DOCUMENTATION!!!
	LoadEventZGLD *LoadEventZGLD `protobuf:"bytes,2,opt,name=loadEventZGLD,proto3" json:"loadEventZGLD,omitempty"`
}

func (x *LoadEvent) Reset() {
	*x = LoadEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_loadmodule_loadmodule_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoadEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoadEvent) ProtoMessage() {}

func (x *LoadEvent) ProtoReflect() protoreflect.Message {
	mi := &file_loadmodule_loadmodule_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoadEvent.ProtoReflect.Descriptor instead.
func (*LoadEvent) Descriptor() ([]byte, []int) {
	return file_loadmodule_loadmodule_proto_rawDescGZIP(), []int{9}
}

func (x *LoadEvent) GetEventValue() *commonmodule.EventValue {
	if x != nil {
		return x.EventValue
	}
	return nil
}

func (x *LoadEvent) GetLoadEventZGLD() *LoadEventZGLD {
	if x != nil {
		return x.LoadEventZGLD
	}
	return nil
}

// Load event profile
type LoadEventProfile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// UML inherited base object
	EventMessageInfo *commonmodule.EventMessageInfo `protobuf:"bytes,1,opt,name=eventMessageInfo,proto3" json:"eventMessageInfo,omitempty"`
	// MISSING DOCUMENTATION!!!
	EnergyConsumer *commonmodule.EnergyConsumer `protobuf:"bytes,2,opt,name=energyConsumer,proto3" json:"energyConsumer,omitempty"`
	// MISSING DOCUMENTATION!!!
	LoadEvent *LoadEvent `protobuf:"bytes,3,opt,name=loadEvent,proto3" json:"loadEvent,omitempty"`
}

func (x *LoadEventProfile) Reset() {
	*x = LoadEventProfile{}
	if protoimpl.UnsafeEnabled {
		mi := &file_loadmodule_loadmodule_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoadEventProfile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoadEventProfile) ProtoMessage() {}

func (x *LoadEventProfile) ProtoReflect() protoreflect.Message {
	mi := &file_loadmodule_loadmodule_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoadEventProfile.ProtoReflect.Descriptor instead.
func (*LoadEventProfile) Descriptor() ([]byte, []int) {
	return file_loadmodule_loadmodule_proto_rawDescGZIP(), []int{10}
}

func (x *LoadEventProfile) GetEventMessageInfo() *commonmodule.EventMessageInfo {
	if x != nil {
		return x.EventMessageInfo
	}
	return nil
}

func (x *LoadEventProfile) GetEnergyConsumer() *commonmodule.EnergyConsumer {
	if x != nil {
		return x.EnergyConsumer
	}
	return nil
}

func (x *LoadEventProfile) GetLoadEvent() *LoadEvent {
	if x != nil {
		return x.LoadEvent
	}
	return nil
}

// Load reading value
type LoadReading struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// UML inherited base object
	ConductingEquipmentTerminalReading *commonmodule.ConductingEquipmentTerminalReading `protobuf:"bytes,1,opt,name=conductingEquipmentTerminalReading,proto3" json:"conductingEquipmentTerminalReading,omitempty"`
	// MISSING DOCUMENTATION!!!
	PhaseMMTN *commonmodule.PhaseMMTN `protobuf:"bytes,2,opt,name=phaseMMTN,proto3" json:"phaseMMTN,omitempty"`
	// MISSING DOCUMENTATION!!!
	ReadingMMTR *commonmodule.ReadingMMTR `protobuf:"bytes,3,opt,name=readingMMTR,proto3" json:"readingMMTR,omitempty"`
	// MISSING DOCUMENTATION!!!
	ReadingMMXU *commonmodule.ReadingMMXU `protobuf:"bytes,4,opt,name=readingMMXU,proto3" json:"readingMMXU,omitempty"`
}

func (x *LoadReading) Reset() {
	*x = LoadReading{}
	if protoimpl.UnsafeEnabled {
		mi := &file_loadmodule_loadmodule_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoadReading) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoadReading) ProtoMessage() {}

func (x *LoadReading) ProtoReflect() protoreflect.Message {
	mi := &file_loadmodule_loadmodule_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoadReading.ProtoReflect.Descriptor instead.
func (*LoadReading) Descriptor() ([]byte, []int) {
	return file_loadmodule_loadmodule_proto_rawDescGZIP(), []int{11}
}

func (x *LoadReading) GetConductingEquipmentTerminalReading() *commonmodule.ConductingEquipmentTerminalReading {
	if x != nil {
		return x.ConductingEquipmentTerminalReading
	}
	return nil
}

func (x *LoadReading) GetPhaseMMTN() *commonmodule.PhaseMMTN {
	if x != nil {
		return x.PhaseMMTN
	}
	return nil
}

func (x *LoadReading) GetReadingMMTR() *commonmodule.ReadingMMTR {
	if x != nil {
		return x.ReadingMMTR
	}
	return nil
}

func (x *LoadReading) GetReadingMMXU() *commonmodule.ReadingMMXU {
	if x != nil {
		return x.ReadingMMXU
	}
	return nil
}

// Load reading profile
type LoadReadingProfile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// UML inherited base object
	ReadingMessageInfo *commonmodule.ReadingMessageInfo `protobuf:"bytes,1,opt,name=readingMessageInfo,proto3" json:"readingMessageInfo,omitempty"`
	// MISSING DOCUMENTATION!!!
	EnergyConsumer *commonmodule.EnergyConsumer `protobuf:"bytes,2,opt,name=energyConsumer,proto3" json:"energyConsumer,omitempty"`
	// MISSING DOCUMENTATION!!!
	LoadReading *LoadReading `protobuf:"bytes,3,opt,name=loadReading,proto3" json:"loadReading,omitempty"`
}

func (x *LoadReadingProfile) Reset() {
	*x = LoadReadingProfile{}
	if protoimpl.UnsafeEnabled {
		mi := &file_loadmodule_loadmodule_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoadReadingProfile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoadReadingProfile) ProtoMessage() {}

func (x *LoadReadingProfile) ProtoReflect() protoreflect.Message {
	mi := &file_loadmodule_loadmodule_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoadReadingProfile.ProtoReflect.Descriptor instead.
func (*LoadReadingProfile) Descriptor() ([]byte, []int) {
	return file_loadmodule_loadmodule_proto_rawDescGZIP(), []int{12}
}

func (x *LoadReadingProfile) GetReadingMessageInfo() *commonmodule.ReadingMessageInfo {
	if x != nil {
		return x.ReadingMessageInfo
	}
	return nil
}

func (x *LoadReadingProfile) GetEnergyConsumer() *commonmodule.EnergyConsumer {
	if x != nil {
		return x.EnergyConsumer
	}
	return nil
}

func (x *LoadReadingProfile) GetLoadReading() *LoadReading {
	if x != nil {
		return x.LoadReading
	}
	return nil
}

// Specialized 61850 ZGLD LN class
type LoadStatusZGLD struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// UML inherited base object
	LoadEventAndStatusZGLD *LoadEventAndStatusZGLD `protobuf:"bytes,1,opt,name=loadEventAndStatusZGLD,proto3" json:"loadEventAndStatusZGLD,omitempty"`
}

func (x *LoadStatusZGLD) Reset() {
	*x = LoadStatusZGLD{}
	if protoimpl.UnsafeEnabled {
		mi := &file_loadmodule_loadmodule_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoadStatusZGLD) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoadStatusZGLD) ProtoMessage() {}

func (x *LoadStatusZGLD) ProtoReflect() protoreflect.Message {
	mi := &file_loadmodule_loadmodule_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoadStatusZGLD.ProtoReflect.Descriptor instead.
func (*LoadStatusZGLD) Descriptor() ([]byte, []int) {
	return file_loadmodule_loadmodule_proto_rawDescGZIP(), []int{13}
}

func (x *LoadStatusZGLD) GetLoadEventAndStatusZGLD() *LoadEventAndStatusZGLD {
	if x != nil {
		return x.LoadEventAndStatusZGLD
	}
	return nil
}

// Load status
type LoadStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// UML inherited base object
	StatusValue *commonmodule.StatusValue `protobuf:"bytes,1,opt,name=statusValue,proto3" json:"statusValue,omitempty"`
	// True if the load is uncontrollable.
	IsUncontrollable *wrapperspb.BoolValue `protobuf:"bytes,2,opt,name=isUncontrollable,proto3" json:"isUncontrollable,omitempty"`
	// MISSING DOCUMENTATION!!!
	LoadStatusZGLD *LoadStatusZGLD `protobuf:"bytes,3,opt,name=loadStatusZGLD,proto3" json:"loadStatusZGLD,omitempty"`
}

func (x *LoadStatus) Reset() {
	*x = LoadStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_loadmodule_loadmodule_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoadStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoadStatus) ProtoMessage() {}

func (x *LoadStatus) ProtoReflect() protoreflect.Message {
	mi := &file_loadmodule_loadmodule_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoadStatus.ProtoReflect.Descriptor instead.
func (*LoadStatus) Descriptor() ([]byte, []int) {
	return file_loadmodule_loadmodule_proto_rawDescGZIP(), []int{14}
}

func (x *LoadStatus) GetStatusValue() *commonmodule.StatusValue {
	if x != nil {
		return x.StatusValue
	}
	return nil
}

func (x *LoadStatus) GetIsUncontrollable() *wrapperspb.BoolValue {
	if x != nil {
		return x.IsUncontrollable
	}
	return nil
}

func (x *LoadStatus) GetLoadStatusZGLD() *LoadStatusZGLD {
	if x != nil {
		return x.LoadStatusZGLD
	}
	return nil
}

// Load status profile
type LoadStatusProfile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// UML inherited base object
	StatusMessageInfo *commonmodule.StatusMessageInfo `protobuf:"bytes,1,opt,name=statusMessageInfo,proto3" json:"statusMessageInfo,omitempty"`
	// MISSING DOCUMENTATION!!!
	EnergyConsumer *commonmodule.EnergyConsumer `protobuf:"bytes,2,opt,name=energyConsumer,proto3" json:"energyConsumer,omitempty"`
	// MISSING DOCUMENTATION!!!
	LoadStatus *LoadStatus `protobuf:"bytes,3,opt,name=loadStatus,proto3" json:"loadStatus,omitempty"`
}

func (x *LoadStatusProfile) Reset() {
	*x = LoadStatusProfile{}
	if protoimpl.UnsafeEnabled {
		mi := &file_loadmodule_loadmodule_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoadStatusProfile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoadStatusProfile) ProtoMessage() {}

func (x *LoadStatusProfile) ProtoReflect() protoreflect.Message {
	mi := &file_loadmodule_loadmodule_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoadStatusProfile.ProtoReflect.Descriptor instead.
func (*LoadStatusProfile) Descriptor() ([]byte, []int) {
	return file_loadmodule_loadmodule_proto_rawDescGZIP(), []int{15}
}

func (x *LoadStatusProfile) GetStatusMessageInfo() *commonmodule.StatusMessageInfo {
	if x != nil {
		return x.StatusMessageInfo
	}
	return nil
}

func (x *LoadStatusProfile) GetEnergyConsumer() *commonmodule.EnergyConsumer {
	if x != nil {
		return x.EnergyConsumer
	}
	return nil
}

func (x *LoadStatusProfile) GetLoadStatus() *LoadStatus {
	if x != nil {
		return x.LoadStatus
	}
	return nil
}

var File_loadmodule_loadmodule_proto protoreflect.FileDescriptor

var file_loadmodule_loadmodule_proto_rawDesc = []byte{
	0x0a, 0x1b, 0x6c, 0x6f, 0x61, 0x64, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2f, 0x6c, 0x6f, 0x61,
	0x64, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0a, 0x6c,
	0x6f, 0x61, 0x64, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x1a, 0x09, 0x75, 0x6d, 0x6c, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x77, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x6d, 0x6f, 0x64, 0x75,
	0x6c, 0x65, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x9d, 0x03, 0x0a, 0x09, 0x4c, 0x6f, 0x61, 0x64, 0x50, 0x6f,
	0x69, 0x6e, 0x74, 0x12, 0x34, 0x0a, 0x09, 0x72, 0x61, 0x6d, 0x70, 0x52, 0x61, 0x74, 0x65, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x6d,
	0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x52, 0x61, 0x6d, 0x70, 0x52, 0x61, 0x74, 0x65, 0x52, 0x09,
	0x72, 0x61, 0x6d, 0x70, 0x52, 0x61, 0x74, 0x65, 0x73, 0x12, 0x58, 0x0a, 0x1a, 0x72, 0x65, 0x61,
	0x63, 0x74, 0x69, 0x76, 0x65, 0x50, 0x77, 0x72, 0x53, 0x65, 0x74, 0x50, 0x6f, 0x69, 0x6e, 0x74,
	0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x43, 0x6f, 0x6e,
	0x74, 0x72, 0x6f, 0x6c, 0x53, 0x50, 0x43, 0x52, 0x1a, 0x72, 0x65, 0x61, 0x63, 0x74, 0x69, 0x76,
	0x65, 0x50, 0x77, 0x72, 0x53, 0x65, 0x74, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x45, 0x6e, 0x61, 0x62,
	0x6c, 0x65, 0x64, 0x12, 0x50, 0x0a, 0x16, 0x72, 0x65, 0x61, 0x6c, 0x50, 0x77, 0x72, 0x53, 0x65,
	0x74, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x6d, 0x6f, 0x64, 0x75,
	0x6c, 0x65, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x53, 0x50, 0x43, 0x52, 0x16, 0x72,
	0x65, 0x61, 0x6c, 0x50, 0x77, 0x72, 0x53, 0x65, 0x74, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x45, 0x6e,
	0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x2e, 0x0a, 0x05, 0x72, 0x65, 0x73, 0x65, 0x74, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x6d, 0x6f, 0x64,
	0x75, 0x6c, 0x65, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x53, 0x50, 0x43, 0x52, 0x05,
	0x72, 0x65, 0x73, 0x65, 0x74, 0x12, 0x36, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x6d, 0x6f, 0x64,
	0x75, 0x6c, 0x65, 0x2e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x4b, 0x69, 0x6e, 0x64, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x46, 0x0a,
	0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e,
	0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x42, 0x08, 0x88, 0xb5, 0x18, 0x01, 0x90, 0xb5, 0x18, 0x01, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x42, 0x0a, 0x07, 0x4c, 0x6f, 0x61, 0x64, 0x43, 0x53, 0x47,
	0x12, 0x37, 0x0a, 0x06, 0x63, 0x72, 0x76, 0x50, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x15, 0x2e, 0x6c, 0x6f, 0x61, 0x64, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x4c, 0x6f,
	0x61, 0x64, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x42, 0x08, 0x88, 0xb5, 0x18, 0x01, 0x90, 0xb5, 0x18,
	0x01, 0x52, 0x06, 0x63, 0x72, 0x76, 0x50, 0x74, 0x73, 0x22, 0x52, 0x0a, 0x17, 0x4c, 0x6f, 0x61,
	0x64, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65,
	0x46, 0x53, 0x43, 0x48, 0x12, 0x37, 0x0a, 0x07, 0x56, 0x61, 0x6c, 0x44, 0x43, 0x53, 0x47, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6c, 0x6f, 0x61, 0x64, 0x6d, 0x6f, 0x64, 0x75,
	0x6c, 0x65, 0x2e, 0x4c, 0x6f, 0x61, 0x64, 0x43, 0x53, 0x47, 0x42, 0x08, 0x88, 0xb5, 0x18, 0x01,
	0x90, 0xb5, 0x18, 0x01, 0x52, 0x07, 0x56, 0x61, 0x6c, 0x44, 0x43, 0x53, 0x47, 0x22, 0xb3, 0x01,
	0x0a, 0x0f, 0x4c, 0x6f, 0x61, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x46, 0x53, 0x43,
	0x43, 0x12, 0x41, 0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x46, 0x53, 0x43, 0x43,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x6d,
	0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x46, 0x53, 0x43,
	0x43, 0x42, 0x04, 0x80, 0xb5, 0x18, 0x01, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c,
	0x46, 0x53, 0x43, 0x43, 0x12, 0x5d, 0x0a, 0x17, 0x6c, 0x6f, 0x61, 0x64, 0x43, 0x6f, 0x6e, 0x74,
	0x72, 0x6f, 0x6c, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x46, 0x53, 0x43, 0x48, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x6c, 0x6f, 0x61, 0x64, 0x6d, 0x6f, 0x64, 0x75,
	0x6c, 0x65, 0x2e, 0x4c, 0x6f, 0x61, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x53, 0x63,
	0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x46, 0x53, 0x43, 0x48, 0x52, 0x17, 0x6c, 0x6f, 0x61, 0x64,
	0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x46,
	0x53, 0x43, 0x48, 0x22, 0xcf, 0x01, 0x0a, 0x0b, 0x4c, 0x6f, 0x61, 0x64, 0x43, 0x6f, 0x6e, 0x74,
	0x72, 0x6f, 0x6c, 0x12, 0x44, 0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x04, 0x80, 0xb5, 0x18, 0x01, 0x52, 0x0c, 0x63, 0x6f, 0x6e,
	0x74, 0x72, 0x6f, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x33, 0x0a, 0x05, 0x63, 0x68, 0x65,
	0x63, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x43, 0x6f, 0x6e,
	0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x05, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x12, 0x45,
	0x0a, 0x0f, 0x6c, 0x6f, 0x61, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x46, 0x53, 0x43,
	0x43, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6c, 0x6f, 0x61, 0x64, 0x6d, 0x6f,
	0x64, 0x75, 0x6c, 0x65, 0x2e, 0x4c, 0x6f, 0x61, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c,
	0x46, 0x53, 0x43, 0x43, 0x52, 0x0f, 0x6c, 0x6f, 0x61, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f,
	0x6c, 0x46, 0x53, 0x43, 0x43, 0x22, 0x87, 0x02, 0x0a, 0x12, 0x4c, 0x6f, 0x61, 0x64, 0x43, 0x6f,
	0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x56, 0x0a, 0x12,
	0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x6e,
	0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x04, 0x80, 0xb5, 0x18, 0x01,
	0x52, 0x12, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x4e, 0x0a, 0x0e, 0x65, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x43, 0x6f,
	0x6e, 0x73, 0x75, 0x6d, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x45, 0x6e, 0x65, 0x72,
	0x67, 0x79, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x72, 0x42, 0x08, 0x88, 0xb5, 0x18, 0x01,
	0x90, 0xb5, 0x18, 0x01, 0x52, 0x0e, 0x65, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x43, 0x6f, 0x6e, 0x73,
	0x75, 0x6d, 0x65, 0x72, 0x12, 0x43, 0x0a, 0x0b, 0x6c, 0x6f, 0x61, 0x64, 0x43, 0x6f, 0x6e, 0x74,
	0x72, 0x6f, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6c, 0x6f, 0x61, 0x64,
	0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x4c, 0x6f, 0x61, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x72,
	0x6f, 0x6c, 0x42, 0x08, 0x88, 0xb5, 0x18, 0x01, 0x90, 0xb5, 0x18, 0x01, 0x52, 0x0b, 0x6c, 0x6f,
	0x61, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x3a, 0x04, 0xc0, 0xf3, 0x18, 0x01, 0x22,
	0xd8, 0x02, 0x0a, 0x0f, 0x4c, 0x6f, 0x61, 0x64, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x34, 0x0a, 0x09, 0x72, 0x61, 0x6d, 0x70, 0x52, 0x61, 0x74, 0x65, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x6d,
	0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x52, 0x61, 0x6d, 0x70, 0x52, 0x61, 0x74, 0x65, 0x52, 0x09,
	0x72, 0x61, 0x6d, 0x70, 0x52, 0x61, 0x74, 0x65, 0x73, 0x12, 0x57, 0x0a, 0x1a, 0x72, 0x65, 0x61,
	0x63, 0x74, 0x69, 0x76, 0x65, 0x50, 0x77, 0x72, 0x53, 0x65, 0x74, 0x50, 0x6f, 0x69, 0x6e, 0x74,
	0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x53, 0x50, 0x53, 0x52, 0x1a, 0x72, 0x65, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65,
	0x50, 0x77, 0x72, 0x53, 0x65, 0x74, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x45, 0x6e, 0x61, 0x62, 0x6c,
	0x65, 0x64, 0x12, 0x4f, 0x0a, 0x16, 0x72, 0x65, 0x61, 0x6c, 0x50, 0x77, 0x72, 0x53, 0x65, 0x74,
	0x50, 0x6f, 0x69, 0x6e, 0x74, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x17, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x6d, 0x6f, 0x64, 0x75, 0x6c,
	0x65, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x53, 0x50, 0x53, 0x52, 0x16, 0x72, 0x65, 0x61,
	0x6c, 0x50, 0x77, 0x72, 0x53, 0x65, 0x74, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x45, 0x6e, 0x61, 0x62,
	0x6c, 0x65, 0x64, 0x12, 0x2d, 0x0a, 0x05, 0x72, 0x65, 0x73, 0x65, 0x74, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x17, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x6d, 0x6f, 0x64, 0x75, 0x6c,
	0x65, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x53, 0x50, 0x53, 0x52, 0x05, 0x72, 0x65, 0x73,
	0x65, 0x74, 0x12, 0x36, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x20, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65,
	0x2e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x53, 0x74, 0x61, 0x74, 0x65, 0x4b,
	0x69, 0x6e, 0x64, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x22, 0xc5, 0x02, 0x0a, 0x16, 0x4c,
	0x6f, 0x61, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x41, 0x6e, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x5a, 0x47, 0x4c, 0x44, 0x12, 0x74, 0x0a, 0x1c, 0x6c, 0x6f, 0x67, 0x69, 0x63, 0x61, 0x6c,
	0x4e, 0x6f, 0x64, 0x65, 0x46, 0x6f, 0x72, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x41, 0x6e, 0x64, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x4c, 0x6f, 0x67, 0x69, 0x63,
	0x61, 0x6c, 0x4e, 0x6f, 0x64, 0x65, 0x46, 0x6f, 0x72, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x41, 0x6e,
	0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x42, 0x04, 0x80, 0xb5, 0x18, 0x01, 0x52, 0x1c, 0x6c,
	0x6f, 0x67, 0x69, 0x63, 0x61, 0x6c, 0x4e, 0x6f, 0x64, 0x65, 0x46, 0x6f, 0x72, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x41, 0x6e, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x43, 0x0a, 0x0b, 0x44,
	0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x54, 0x65, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x21, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e,
	0x45, 0x4e, 0x53, 0x5f, 0x44, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x54, 0x65, 0x73, 0x74, 0x4b,
	0x69, 0x6e, 0x64, 0x52, 0x0b, 0x44, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x54, 0x65, 0x73, 0x74,
	0x12, 0x31, 0x0a, 0x07, 0x45, 0x6d, 0x67, 0x53, 0x74, 0x6f, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x17, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65,
	0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x53, 0x50, 0x53, 0x52, 0x07, 0x45, 0x6d, 0x67, 0x53,
	0x74, 0x6f, 0x70, 0x12, 0x3d, 0x0a, 0x0b, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6c, 0x6f, 0x61, 0x64, 0x6d,
	0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x4c, 0x6f, 0x61, 0x64, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x0b, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x22, 0x71, 0x0a, 0x0d, 0x4c, 0x6f, 0x61, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x5a,
	0x47, 0x4c, 0x44, 0x12, 0x60, 0x0a, 0x16, 0x6c, 0x6f, 0x61, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x41, 0x6e, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5a, 0x47, 0x4c, 0x44, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x6c, 0x6f, 0x61, 0x64, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65,
	0x2e, 0x4c, 0x6f, 0x61, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x41, 0x6e, 0x64, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x5a, 0x47, 0x4c, 0x44, 0x42, 0x04, 0x80, 0xb5, 0x18, 0x01, 0x52, 0x16, 0x6c,
	0x6f, 0x61, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x41, 0x6e, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x5a, 0x47, 0x4c, 0x44, 0x22, 0x8c, 0x01, 0x0a, 0x09, 0x4c, 0x6f, 0x61, 0x64, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x12, 0x3e, 0x0a, 0x0a, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x42, 0x04, 0x80, 0xb5, 0x18, 0x01, 0x52, 0x0a, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x12, 0x3f, 0x0a, 0x0d, 0x6c, 0x6f, 0x61, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x5a, 0x47, 0x4c, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6c, 0x6f, 0x61,
	0x64, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x4c, 0x6f, 0x61, 0x64, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x5a, 0x47, 0x4c, 0x44, 0x52, 0x0d, 0x6c, 0x6f, 0x61, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x5a, 0x47, 0x4c, 0x44, 0x22, 0xf9, 0x01, 0x0a, 0x10, 0x4c, 0x6f, 0x61, 0x64, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x50, 0x0a, 0x10, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x6d, 0x6f, 0x64, 0x75,
	0x6c, 0x65, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49,
	0x6e, 0x66, 0x6f, 0x42, 0x04, 0x80, 0xb5, 0x18, 0x01, 0x52, 0x10, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x4e, 0x0a, 0x0e, 0x65,
	0x6e, 0x65, 0x72, 0x67, 0x79, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x72, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x6d, 0x6f, 0x64, 0x75,
	0x6c, 0x65, 0x2e, 0x45, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65,
	0x72, 0x42, 0x08, 0x88, 0xb5, 0x18, 0x01, 0x90, 0xb5, 0x18, 0x01, 0x52, 0x0e, 0x65, 0x6e, 0x65,
	0x72, 0x67, 0x79, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x72, 0x12, 0x3d, 0x0a, 0x09, 0x6c,
	0x6f, 0x61, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15,
	0x2e, 0x6c, 0x6f, 0x61, 0x64, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x4c, 0x6f, 0x61, 0x64,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x42, 0x08, 0x88, 0xb5, 0x18, 0x01, 0x90, 0xb5, 0x18, 0x01, 0x52,
	0x09, 0x6c, 0x6f, 0x61, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x3a, 0x04, 0xc0, 0xf3, 0x18, 0x01,
	0x22, 0xc7, 0x02, 0x0a, 0x0b, 0x4c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x61, 0x64, 0x69, 0x6e, 0x67,
	0x12, 0x86, 0x01, 0x0a, 0x22, 0x63, 0x6f, 0x6e, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6e, 0x67, 0x45,
	0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x6c,
	0x52, 0x65, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x43, 0x6f, 0x6e,
	0x64, 0x75, 0x63, 0x74, 0x69, 0x6e, 0x67, 0x45, 0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74,
	0x54, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x6c, 0x52, 0x65, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x42,
	0x04, 0x80, 0xb5, 0x18, 0x01, 0x52, 0x22, 0x63, 0x6f, 0x6e, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6e,
	0x67, 0x45, 0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x65, 0x72, 0x6d, 0x69, 0x6e,
	0x61, 0x6c, 0x52, 0x65, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x12, 0x35, 0x0a, 0x09, 0x70, 0x68, 0x61,
	0x73, 0x65, 0x4d, 0x4d, 0x54, 0x4e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x50, 0x68, 0x61, 0x73,
	0x65, 0x4d, 0x4d, 0x54, 0x4e, 0x52, 0x09, 0x70, 0x68, 0x61, 0x73, 0x65, 0x4d, 0x4d, 0x54, 0x4e,
	0x12, 0x3b, 0x0a, 0x0b, 0x72, 0x65, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x4d, 0x4d, 0x54, 0x52, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x6d, 0x6f,
	0x64, 0x75, 0x6c, 0x65, 0x2e, 0x52, 0x65, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x4d, 0x4d, 0x54, 0x52,
	0x52, 0x0b, 0x72, 0x65, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x4d, 0x4d, 0x54, 0x52, 0x12, 0x3b, 0x0a,
	0x0b, 0x72, 0x65, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x4d, 0x4d, 0x58, 0x55, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x19, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x6d, 0x6f, 0x64, 0x75, 0x6c,
	0x65, 0x2e, 0x52, 0x65, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x4d, 0x4d, 0x58, 0x55, 0x52, 0x0b, 0x72,
	0x65, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x4d, 0x4d, 0x58, 0x55, 0x22, 0x87, 0x02, 0x0a, 0x12, 0x4c,
	0x6f, 0x61, 0x64, 0x52, 0x65, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c,
	0x65, 0x12, 0x56, 0x0a, 0x12, 0x72, 0x65, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x52, 0x65, 0x61,
	0x64, 0x69, 0x6e, 0x67, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x42,
	0x04, 0x80, 0xb5, 0x18, 0x01, 0x52, 0x12, 0x72, 0x65, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x4e, 0x0a, 0x0e, 0x65, 0x6e, 0x65,
	0x72, 0x67, 0x79, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1c, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65,
	0x2e, 0x45, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x72, 0x42,
	0x08, 0x88, 0xb5, 0x18, 0x01, 0x90, 0xb5, 0x18, 0x01, 0x52, 0x0e, 0x65, 0x6e, 0x65, 0x72, 0x67,
	0x79, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x72, 0x12, 0x43, 0x0a, 0x0b, 0x6c, 0x6f, 0x61,
	0x64, 0x52, 0x65, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17,
	0x2e, 0x6c, 0x6f, 0x61, 0x64, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x4c, 0x6f, 0x61, 0x64,
	0x52, 0x65, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x42, 0x08, 0x88, 0xb5, 0x18, 0x01, 0x90, 0xb5, 0x18,
	0x01, 0x52, 0x0b, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x3a, 0x04,
	0xc0, 0xf3, 0x18, 0x01, 0x22, 0x72, 0x0a, 0x0e, 0x4c, 0x6f, 0x61, 0x64, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x5a, 0x47, 0x4c, 0x44, 0x12, 0x60, 0x0a, 0x16, 0x6c, 0x6f, 0x61, 0x64, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x41, 0x6e, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5a, 0x47, 0x4c, 0x44,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x6c, 0x6f, 0x61, 0x64, 0x6d, 0x6f, 0x64,
	0x75, 0x6c, 0x65, 0x2e, 0x4c, 0x6f, 0x61, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x41, 0x6e, 0x64,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5a, 0x47, 0x4c, 0x44, 0x42, 0x04, 0x80, 0xb5, 0x18, 0x01,
	0x52, 0x16, 0x6c, 0x6f, 0x61, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x41, 0x6e, 0x64, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x5a, 0x47, 0x4c, 0x44, 0x22, 0xdb, 0x01, 0x0a, 0x0a, 0x4c, 0x6f, 0x61,
	0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x41, 0x0a, 0x0b, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x04, 0x80, 0xb5, 0x18, 0x01, 0x52, 0x0b, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x46, 0x0a, 0x10, 0x69, 0x73,
	0x55, 0x6e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x52, 0x10, 0x69, 0x73, 0x55, 0x6e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x61, 0x62,
	0x6c, 0x65, 0x12, 0x42, 0x0a, 0x0e, 0x6c, 0x6f, 0x61, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x5a, 0x47, 0x4c, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6c, 0x6f, 0x61,
	0x64, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x4c, 0x6f, 0x61, 0x64, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x5a, 0x47, 0x4c, 0x44, 0x52, 0x0e, 0x6c, 0x6f, 0x61, 0x64, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x5a, 0x47, 0x4c, 0x44, 0x22, 0x80, 0x02, 0x0a, 0x11, 0x4c, 0x6f, 0x61, 0x64, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x53, 0x0a, 0x11,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66,
	0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x04, 0x80, 0xb5, 0x18, 0x01, 0x52, 0x11,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x4e, 0x0a, 0x0e, 0x65, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x43, 0x6f, 0x6e, 0x73, 0x75,
	0x6d, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x45, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x43,
	0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x72, 0x42, 0x08, 0x88, 0xb5, 0x18, 0x01, 0x90, 0xb5, 0x18,
	0x01, 0x52, 0x0e, 0x65, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65,
	0x72, 0x12, 0x40, 0x0a, 0x0a, 0x6c, 0x6f, 0x61, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6c, 0x6f, 0x61, 0x64, 0x6d, 0x6f, 0x64, 0x75,
	0x6c, 0x65, 0x2e, 0x4c, 0x6f, 0x61, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x42, 0x08, 0x88,
	0xb5, 0x18, 0x01, 0x90, 0xb5, 0x18, 0x01, 0x52, 0x0a, 0x6c, 0x6f, 0x61, 0x64, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x3a, 0x04, 0xc0, 0xf3, 0x18, 0x01, 0x42, 0x7e, 0x0a, 0x12, 0x6f, 0x70, 0x65,
	0x6e, 0x66, 0x6d, 0x62, 0x2e, 0x6c, 0x6f, 0x61, 0x64, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x50,
	0x01, 0x5a, 0x51, 0x67, 0x69, 0x74, 0x6c, 0x61, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6f, 0x70,
	0x65, 0x6e, 0x66, 0x6d, 0x62, 0x2f, 0x70, 0x73, 0x6d, 0x2f, 0x6f, 0x70, 0x73, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x67, 0x6f, 0x2d, 0x6f, 0x70, 0x65, 0x6e, 0x66, 0x6d,
	0x62, 0x2d, 0x6f, 0x70, 0x73, 0x2d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x76,
	0x32, 0x2f, 0x6f, 0x70, 0x65, 0x6e, 0x66, 0x6d, 0x62, 0x2f, 0x6c, 0x6f, 0x61, 0x64, 0x6d, 0x6f,
	0x64, 0x75, 0x6c, 0x65, 0xaa, 0x02, 0x12, 0x6f, 0x70, 0x65, 0x6e, 0x66, 0x6d, 0x62, 0x2e, 0x6c,
	0x6f, 0x61, 0x64, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_loadmodule_loadmodule_proto_rawDescOnce sync.Once
	file_loadmodule_loadmodule_proto_rawDescData = file_loadmodule_loadmodule_proto_rawDesc
)

func file_loadmodule_loadmodule_proto_rawDescGZIP() []byte {
	file_loadmodule_loadmodule_proto_rawDescOnce.Do(func() {
		file_loadmodule_loadmodule_proto_rawDescData = protoimpl.X.CompressGZIP(file_loadmodule_loadmodule_proto_rawDescData)
	})
	return file_loadmodule_loadmodule_proto_rawDescData
}

var file_loadmodule_loadmodule_proto_msgTypes = make([]protoimpl.MessageInfo, 16)
var file_loadmodule_loadmodule_proto_goTypes = []interface{}{
	(*LoadPoint)(nil),                                       // 0: loadmodule.LoadPoint
	(*LoadCSG)(nil),                                         // 1: loadmodule.LoadCSG
	(*LoadControlScheduleFSCH)(nil),                         // 2: loadmodule.LoadControlScheduleFSCH
	(*LoadControlFSCC)(nil),                                 // 3: loadmodule.LoadControlFSCC
	(*LoadControl)(nil),                                     // 4: loadmodule.LoadControl
	(*LoadControlProfile)(nil),                              // 5: loadmodule.LoadControlProfile
	(*LoadPointStatus)(nil),                                 // 6: loadmodule.LoadPointStatus
	(*LoadEventAndStatusZGLD)(nil),                          // 7: loadmodule.LoadEventAndStatusZGLD
	(*LoadEventZGLD)(nil),                                   // 8: loadmodule.LoadEventZGLD
	(*LoadEvent)(nil),                                       // 9: loadmodule.LoadEvent
	(*LoadEventProfile)(nil),                                // 10: loadmodule.LoadEventProfile
	(*LoadReading)(nil),                                     // 11: loadmodule.LoadReading
	(*LoadReadingProfile)(nil),                              // 12: loadmodule.LoadReadingProfile
	(*LoadStatusZGLD)(nil),                                  // 13: loadmodule.LoadStatusZGLD
	(*LoadStatus)(nil),                                      // 14: loadmodule.LoadStatus
	(*LoadStatusProfile)(nil),                               // 15: loadmodule.LoadStatusProfile
	(*commonmodule.RampRate)(nil),                           // 16: commonmodule.RampRate
	(*commonmodule.ControlSPC)(nil),                         // 17: commonmodule.ControlSPC
	(*commonmodule.Optional_StateKind)(nil),                 // 18: commonmodule.Optional_StateKind
	(*commonmodule.ControlTimestamp)(nil),                   // 19: commonmodule.ControlTimestamp
	(*commonmodule.ControlFSCC)(nil),                        // 20: commonmodule.ControlFSCC
	(*commonmodule.ControlValue)(nil),                       // 21: commonmodule.ControlValue
	(*commonmodule.CheckConditions)(nil),                    // 22: commonmodule.CheckConditions
	(*commonmodule.ControlMessageInfo)(nil),                 // 23: commonmodule.ControlMessageInfo
	(*commonmodule.EnergyConsumer)(nil),                     // 24: commonmodule.EnergyConsumer
	(*commonmodule.StatusSPS)(nil),                          // 25: commonmodule.StatusSPS
	(*commonmodule.LogicalNodeForEventAndStatus)(nil),       // 26: commonmodule.LogicalNodeForEventAndStatus
	(*commonmodule.ENS_DynamicTestKind)(nil),                // 27: commonmodule.ENS_DynamicTestKind
	(*commonmodule.EventValue)(nil),                         // 28: commonmodule.EventValue
	(*commonmodule.EventMessageInfo)(nil),                   // 29: commonmodule.EventMessageInfo
	(*commonmodule.ConductingEquipmentTerminalReading)(nil), // 30: commonmodule.ConductingEquipmentTerminalReading
	(*commonmodule.PhaseMMTN)(nil),                          // 31: commonmodule.PhaseMMTN
	(*commonmodule.ReadingMMTR)(nil),                        // 32: commonmodule.ReadingMMTR
	(*commonmodule.ReadingMMXU)(nil),                        // 33: commonmodule.ReadingMMXU
	(*commonmodule.ReadingMessageInfo)(nil),                 // 34: commonmodule.ReadingMessageInfo
	(*commonmodule.StatusValue)(nil),                        // 35: commonmodule.StatusValue
	(*wrapperspb.BoolValue)(nil),                            // 36: google.protobuf.BoolValue
	(*commonmodule.StatusMessageInfo)(nil),                  // 37: commonmodule.StatusMessageInfo
}
var file_loadmodule_loadmodule_proto_depIdxs = []int32{
	16, // 0: loadmodule.LoadPoint.rampRates:type_name -> commonmodule.RampRate
	17, // 1: loadmodule.LoadPoint.reactivePwrSetPointEnabled:type_name -> commonmodule.ControlSPC
	17, // 2: loadmodule.LoadPoint.realPwrSetPointEnabled:type_name -> commonmodule.ControlSPC
	17, // 3: loadmodule.LoadPoint.reset:type_name -> commonmodule.ControlSPC
	18, // 4: loadmodule.LoadPoint.state:type_name -> commonmodule.Optional_StateKind
	19, // 5: loadmodule.LoadPoint.startTime:type_name -> commonmodule.ControlTimestamp
	0,  // 6: loadmodule.LoadCSG.crvPts:type_name -> loadmodule.LoadPoint
	1,  // 7: loadmodule.LoadControlScheduleFSCH.ValDCSG:type_name -> loadmodule.LoadCSG
	20, // 8: loadmodule.LoadControlFSCC.controlFSCC:type_name -> commonmodule.ControlFSCC
	2,  // 9: loadmodule.LoadControlFSCC.loadControlScheduleFSCH:type_name -> loadmodule.LoadControlScheduleFSCH
	21, // 10: loadmodule.LoadControl.controlValue:type_name -> commonmodule.ControlValue
	22, // 11: loadmodule.LoadControl.check:type_name -> commonmodule.CheckConditions
	3,  // 12: loadmodule.LoadControl.loadControlFSCC:type_name -> loadmodule.LoadControlFSCC
	23, // 13: loadmodule.LoadControlProfile.controlMessageInfo:type_name -> commonmodule.ControlMessageInfo
	24, // 14: loadmodule.LoadControlProfile.energyConsumer:type_name -> commonmodule.EnergyConsumer
	4,  // 15: loadmodule.LoadControlProfile.loadControl:type_name -> loadmodule.LoadControl
	16, // 16: loadmodule.LoadPointStatus.rampRates:type_name -> commonmodule.RampRate
	25, // 17: loadmodule.LoadPointStatus.reactivePwrSetPointEnabled:type_name -> commonmodule.StatusSPS
	25, // 18: loadmodule.LoadPointStatus.realPwrSetPointEnabled:type_name -> commonmodule.StatusSPS
	25, // 19: loadmodule.LoadPointStatus.reset:type_name -> commonmodule.StatusSPS
	18, // 20: loadmodule.LoadPointStatus.state:type_name -> commonmodule.Optional_StateKind
	26, // 21: loadmodule.LoadEventAndStatusZGLD.logicalNodeForEventAndStatus:type_name -> commonmodule.LogicalNodeForEventAndStatus
	27, // 22: loadmodule.LoadEventAndStatusZGLD.DynamicTest:type_name -> commonmodule.ENS_DynamicTestKind
	25, // 23: loadmodule.LoadEventAndStatusZGLD.EmgStop:type_name -> commonmodule.StatusSPS
	6,  // 24: loadmodule.LoadEventAndStatusZGLD.PointStatus:type_name -> loadmodule.LoadPointStatus
	7,  // 25: loadmodule.LoadEventZGLD.loadEventAndStatusZGLD:type_name -> loadmodule.LoadEventAndStatusZGLD
	28, // 26: loadmodule.LoadEvent.eventValue:type_name -> commonmodule.EventValue
	8,  // 27: loadmodule.LoadEvent.loadEventZGLD:type_name -> loadmodule.LoadEventZGLD
	29, // 28: loadmodule.LoadEventProfile.eventMessageInfo:type_name -> commonmodule.EventMessageInfo
	24, // 29: loadmodule.LoadEventProfile.energyConsumer:type_name -> commonmodule.EnergyConsumer
	9,  // 30: loadmodule.LoadEventProfile.loadEvent:type_name -> loadmodule.LoadEvent
	30, // 31: loadmodule.LoadReading.conductingEquipmentTerminalReading:type_name -> commonmodule.ConductingEquipmentTerminalReading
	31, // 32: loadmodule.LoadReading.phaseMMTN:type_name -> commonmodule.PhaseMMTN
	32, // 33: loadmodule.LoadReading.readingMMTR:type_name -> commonmodule.ReadingMMTR
	33, // 34: loadmodule.LoadReading.readingMMXU:type_name -> commonmodule.ReadingMMXU
	34, // 35: loadmodule.LoadReadingProfile.readingMessageInfo:type_name -> commonmodule.ReadingMessageInfo
	24, // 36: loadmodule.LoadReadingProfile.energyConsumer:type_name -> commonmodule.EnergyConsumer
	11, // 37: loadmodule.LoadReadingProfile.loadReading:type_name -> loadmodule.LoadReading
	7,  // 38: loadmodule.LoadStatusZGLD.loadEventAndStatusZGLD:type_name -> loadmodule.LoadEventAndStatusZGLD
	35, // 39: loadmodule.LoadStatus.statusValue:type_name -> commonmodule.StatusValue
	36, // 40: loadmodule.LoadStatus.isUncontrollable:type_name -> google.protobuf.BoolValue
	13, // 41: loadmodule.LoadStatus.loadStatusZGLD:type_name -> loadmodule.LoadStatusZGLD
	37, // 42: loadmodule.LoadStatusProfile.statusMessageInfo:type_name -> commonmodule.StatusMessageInfo
	24, // 43: loadmodule.LoadStatusProfile.energyConsumer:type_name -> commonmodule.EnergyConsumer
	14, // 44: loadmodule.LoadStatusProfile.loadStatus:type_name -> loadmodule.LoadStatus
	45, // [45:45] is the sub-list for method output_type
	45, // [45:45] is the sub-list for method input_type
	45, // [45:45] is the sub-list for extension type_name
	45, // [45:45] is the sub-list for extension extendee
	0,  // [0:45] is the sub-list for field type_name
}

func init() { file_loadmodule_loadmodule_proto_init() }
func file_loadmodule_loadmodule_proto_init() {
	if File_loadmodule_loadmodule_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_loadmodule_loadmodule_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoadPoint); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_loadmodule_loadmodule_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoadCSG); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_loadmodule_loadmodule_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoadControlScheduleFSCH); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_loadmodule_loadmodule_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoadControlFSCC); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_loadmodule_loadmodule_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoadControl); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_loadmodule_loadmodule_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoadControlProfile); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_loadmodule_loadmodule_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoadPointStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_loadmodule_loadmodule_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoadEventAndStatusZGLD); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_loadmodule_loadmodule_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoadEventZGLD); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_loadmodule_loadmodule_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoadEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_loadmodule_loadmodule_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoadEventProfile); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_loadmodule_loadmodule_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoadReading); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_loadmodule_loadmodule_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoadReadingProfile); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_loadmodule_loadmodule_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoadStatusZGLD); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_loadmodule_loadmodule_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoadStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_loadmodule_loadmodule_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoadStatusProfile); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_loadmodule_loadmodule_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   16,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_loadmodule_loadmodule_proto_goTypes,
		DependencyIndexes: file_loadmodule_loadmodule_proto_depIdxs,
		MessageInfos:      file_loadmodule_loadmodule_proto_msgTypes,
	}.Build()
	File_loadmodule_loadmodule_proto = out.File
	file_loadmodule_loadmodule_proto_rawDesc = nil
	file_loadmodule_loadmodule_proto_goTypes = nil
	file_loadmodule_loadmodule_proto_depIdxs = nil
}
